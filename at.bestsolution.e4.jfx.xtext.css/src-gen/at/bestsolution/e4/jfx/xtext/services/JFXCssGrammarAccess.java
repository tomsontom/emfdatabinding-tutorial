/*
* generated by Xtext
*/

package at.bestsolution.e4.jfx.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class JFXCssGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JFXCssElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JFXCss");
		private final Assignment cDefinitionsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDefinitionsDefinitionParserRuleCall_0 = (RuleCall)cDefinitionsAssignment.eContents().get(0);
		
		//JFXCss:
		//	definitions+=Definition+;
		public ParserRule getRule() { return rule; }

		//definitions+=Definition+
		public Assignment getDefinitionsAssignment() { return cDefinitionsAssignment; }

		//Definition
		public RuleCall getDefinitionsDefinitionParserRuleCall_0() { return cDefinitionsDefinitionParserRuleCall_0; }
	}

	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cNumberSignKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0_1_0 = (RuleCall)cIdAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertiesFXPropertyParserRuleCall_2_0 = (RuleCall)cPropertiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Definition:
		//	("#" id=ID) // (':' ('disabled'|'focused'|'hover'|'pressed'|'strong'|'armed'|'empty'|'filled'|'defined'|'selected'|'undefined'|'showing'|'visited'|'even'|'odd'|'selected'|'horizontal'|'vertical'|'determinate'|'indetermindate'|'pannable'|'multiline'|'editable'|'readonly'|'selected'|'showing') )? 
		//	"{" properties+=FXProperty+ "}";
		public ParserRule getRule() { return rule; }

		//("#" id=ID) // (':' ('disabled'|'focused'|'hover'|'pressed'|'strong'|'armed'|'empty'|'filled'|'defined'|'selected'|'undefined'|'showing'|'visited'|'even'|'odd'|'selected'|'horizontal'|'vertical'|'determinate'|'indetermindate'|'pannable'|'multiline'|'editable'|'readonly'|'selected'|'showing') )? 
		//"{" properties+=FXProperty+ "}"
		public Group getGroup() { return cGroup; }

		//"#" id=ID
		public Group getGroup_0() { return cGroup_0; }

		//"#"
		public Keyword getNumberSignKeyword_0_0() { return cNumberSignKeyword_0_0; }

		//id=ID
		public Assignment getIdAssignment_0_1() { return cIdAssignment_0_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_1_0() { return cIdIDTerminalRuleCall_0_1_0; }

		//// (':' ('disabled'|'focused'|'hover'|'pressed'|'strong'|'armed'|'empty'|'filled'|'defined'|'selected'|'undefined'|'showing'|'visited'|'even'|'odd'|'selected'|'horizontal'|'vertical'|'determinate'|'indetermindate'|'pannable'|'multiline'|'editable'|'readonly'|'selected'|'showing') )? 
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//properties+=FXProperty+
		public Assignment getPropertiesAssignment_2() { return cPropertiesAssignment_2; }

		//FXProperty
		public RuleCall getPropertiesFXPropertyParserRuleCall_2_0() { return cPropertiesFXPropertyParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class FXPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FXProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cFontPropertyParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cFontFamilyPropertyParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cFontSizePropertyParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cFontStylePropertyParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final RuleCall cFontWeightPropertyParserRuleCall_0_4 = (RuleCall)cAlternatives_0.eContents().get(4);
		private final RuleCall cCursorPropertyParserRuleCall_0_5 = (RuleCall)cAlternatives_0.eContents().get(5);
		private final RuleCall cEffectPropertyParserRuleCall_0_6 = (RuleCall)cAlternatives_0.eContents().get(6);
		private final RuleCall cBooleanPropertyParserRuleCall_0_7 = (RuleCall)cAlternatives_0.eContents().get(7);
		private final RuleCall cSizePropertyParserRuleCall_0_8 = (RuleCall)cAlternatives_0.eContents().get(8);
		private final RuleCall cNumberPropertyParserRuleCall_0_9 = (RuleCall)cAlternatives_0.eContents().get(9);
		private final RuleCall cIntegerPropertyParserRuleCall_0_10 = (RuleCall)cAlternatives_0.eContents().get(10);
		private final RuleCall cPaintPropertyParserRuleCall_0_11 = (RuleCall)cAlternatives_0.eContents().get(11);
		private final RuleCall cBlendPropertyParserRuleCall_0_12 = (RuleCall)cAlternatives_0.eContents().get(12);
		private final RuleCall cUrlPropertyParserRuleCall_0_13 = (RuleCall)cAlternatives_0.eContents().get(13);
		private final RuleCall cPaintPropertiesParserRuleCall_0_14 = (RuleCall)cAlternatives_0.eContents().get(14);
		private final RuleCall cMultiSizePropertiesParserRuleCall_0_15 = (RuleCall)cAlternatives_0.eContents().get(15);
		private final RuleCall cHPositionPropertyParserRuleCall_0_16 = (RuleCall)cAlternatives_0.eContents().get(16);
		private final RuleCall cVPositionPropertyParserRuleCall_0_17 = (RuleCall)cAlternatives_0.eContents().get(17);
		private final RuleCall cSidePropertyParserRuleCall_0_18 = (RuleCall)cAlternatives_0.eContents().get(18);
		private final RuleCall cBarPolicyPropertyParserRuleCall_0_19 = (RuleCall)cAlternatives_0.eContents().get(19);
		private final RuleCall cUrlPropertiesParserRuleCall_0_20 = (RuleCall)cAlternatives_0.eContents().get(20);
		private final RuleCall cRepeatPropertiesParserRuleCall_0_21 = (RuleCall)cAlternatives_0.eContents().get(21);
		private final RuleCall cMultiSizePropertyParserRuleCall_0_22 = (RuleCall)cAlternatives_0.eContents().get(22);
		private final RuleCall cSizePropertiesParserRuleCall_0_23 = (RuleCall)cAlternatives_0.eContents().get(23);
		private final RuleCall cStrokeLineCapPropertyParserRuleCall_0_24 = (RuleCall)cAlternatives_0.eContents().get(24);
		private final RuleCall cStrokeLineJoinPropertyParserRuleCall_0_25 = (RuleCall)cAlternatives_0.eContents().get(25);
		private final RuleCall cTextAlignmentPropertyParserRuleCall_0_26 = (RuleCall)cAlternatives_0.eContents().get(26);
		private final RuleCall cTextOriginPropertyParserRuleCall_0_27 = (RuleCall)cAlternatives_0.eContents().get(27);
		private final RuleCall cBackgroundImagePositionPropertyParserRuleCall_0_28 = (RuleCall)cAlternatives_0.eContents().get(28);
		private final RuleCall cBackgroundImageSizePropertyParserRuleCall_0_29 = (RuleCall)cAlternatives_0.eContents().get(29);
		private final RuleCall cBorderStylePropertyParserRuleCall_0_30 = (RuleCall)cAlternatives_0.eContents().get(30);
		private final RuleCall cBorderImageSlicePropertyParserRuleCall_0_31 = (RuleCall)cAlternatives_0.eContents().get(31);
		private final RuleCall cShapePropertyParserRuleCall_0_32 = (RuleCall)cAlternatives_0.eContents().get(32);
		private final RuleCall cTextPropertyParserRuleCall_0_33 = (RuleCall)cAlternatives_0.eContents().get(33);
		private final RuleCall cTextOverrunPropertyParserRuleCall_0_34 = (RuleCall)cAlternatives_0.eContents().get(34);
		private final RuleCall cEchoCharPropertyParserRuleCall_0_35 = (RuleCall)cAlternatives_0.eContents().get(35);
		private final RuleCall cInsetsPropertyParserRuleCall_0_36 = (RuleCall)cAlternatives_0.eContents().get(36);
		private final RuleCall cHorizontalGridLineStrokeDashArrayPropertyParserRuleCall_0_37 = (RuleCall)cAlternatives_0.eContents().get(37);
		private final RuleCall cVerticalGridLineStrokeDashArrayPropertyParserRuleCall_0_38 = (RuleCall)cAlternatives_0.eContents().get(38);
		private final RuleCall cBorderColorPropertyParserRuleCall_0_39 = (RuleCall)cAlternatives_0.eContents().get(39);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//FXProperty: // Font
		//	(FontProperty | FontFamilyProperty | FontSizeProperty | FontStyleProperty | FontWeightProperty | CursorProperty |
		//	EffectProperty | BooleanProperty | SizeProperty | NumberProperty | IntegerProperty | PaintProperty | BlendProperty |
		//	UrlProperty | PaintProperties | MultiSizeProperties | HPositionProperty | VPositionProperty | SideProperty |
		//	BarPolicyProperty | UrlProperties | RepeatProperties | MultiSizeProperty | SizeProperties | StrokeLineCapProperty |
		//	StrokeLineJoinProperty | TextAlignmentProperty | TextOriginProperty | BackgroundImagePositionProperty |
		//	BackgroundImageSizeProperty | BorderStyleProperty | BorderImageSliceProperty | ShapeProperty | TextProperty |
		//	TextOverrunProperty | EchoCharProperty | InsetsProperty | HorizontalGridLineStrokeDashArrayProperty |
		//	VerticalGridLineStrokeDashArrayProperty | BorderColorProperty) ";";
		public ParserRule getRule() { return rule; }

		//// Font
		//(FontProperty | FontFamilyProperty | FontSizeProperty | FontStyleProperty | FontWeightProperty | CursorProperty |
		//EffectProperty | BooleanProperty | SizeProperty | NumberProperty | IntegerProperty | PaintProperty | BlendProperty |
		//UrlProperty | PaintProperties | MultiSizeProperties | HPositionProperty | VPositionProperty | SideProperty |
		//BarPolicyProperty | UrlProperties | RepeatProperties | MultiSizeProperty | SizeProperties | StrokeLineCapProperty |
		//StrokeLineJoinProperty | TextAlignmentProperty | TextOriginProperty | BackgroundImagePositionProperty |
		//BackgroundImageSizeProperty | BorderStyleProperty | BorderImageSliceProperty | ShapeProperty | TextProperty |
		//TextOverrunProperty | EchoCharProperty | InsetsProperty | HorizontalGridLineStrokeDashArrayProperty |
		//VerticalGridLineStrokeDashArrayProperty | BorderColorProperty) ";"
		public Group getGroup() { return cGroup; }

		//// Font
		//FontProperty | FontFamilyProperty | FontSizeProperty | FontStyleProperty | FontWeightProperty | CursorProperty |
		//EffectProperty | BooleanProperty | SizeProperty | NumberProperty | IntegerProperty | PaintProperty | BlendProperty |
		//UrlProperty | PaintProperties | MultiSizeProperties | HPositionProperty | VPositionProperty | SideProperty |
		//BarPolicyProperty | UrlProperties | RepeatProperties | MultiSizeProperty | SizeProperties | StrokeLineCapProperty |
		//StrokeLineJoinProperty | TextAlignmentProperty | TextOriginProperty | BackgroundImagePositionProperty |
		//BackgroundImageSizeProperty | BorderStyleProperty | BorderImageSliceProperty | ShapeProperty | TextProperty |
		//TextOverrunProperty | EchoCharProperty | InsetsProperty | HorizontalGridLineStrokeDashArrayProperty |
		//VerticalGridLineStrokeDashArrayProperty | BorderColorProperty
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//// Font
		//FontProperty
		public RuleCall getFontPropertyParserRuleCall_0_0() { return cFontPropertyParserRuleCall_0_0; }

		//FontFamilyProperty
		public RuleCall getFontFamilyPropertyParserRuleCall_0_1() { return cFontFamilyPropertyParserRuleCall_0_1; }

		//FontSizeProperty
		public RuleCall getFontSizePropertyParserRuleCall_0_2() { return cFontSizePropertyParserRuleCall_0_2; }

		//FontStyleProperty
		public RuleCall getFontStylePropertyParserRuleCall_0_3() { return cFontStylePropertyParserRuleCall_0_3; }

		//FontWeightProperty
		public RuleCall getFontWeightPropertyParserRuleCall_0_4() { return cFontWeightPropertyParserRuleCall_0_4; }

		//CursorProperty
		public RuleCall getCursorPropertyParserRuleCall_0_5() { return cCursorPropertyParserRuleCall_0_5; }

		//EffectProperty
		public RuleCall getEffectPropertyParserRuleCall_0_6() { return cEffectPropertyParserRuleCall_0_6; }

		//BooleanProperty
		public RuleCall getBooleanPropertyParserRuleCall_0_7() { return cBooleanPropertyParserRuleCall_0_7; }

		//SizeProperty
		public RuleCall getSizePropertyParserRuleCall_0_8() { return cSizePropertyParserRuleCall_0_8; }

		//NumberProperty
		public RuleCall getNumberPropertyParserRuleCall_0_9() { return cNumberPropertyParserRuleCall_0_9; }

		//IntegerProperty
		public RuleCall getIntegerPropertyParserRuleCall_0_10() { return cIntegerPropertyParserRuleCall_0_10; }

		//PaintProperty
		public RuleCall getPaintPropertyParserRuleCall_0_11() { return cPaintPropertyParserRuleCall_0_11; }

		//BlendProperty
		public RuleCall getBlendPropertyParserRuleCall_0_12() { return cBlendPropertyParserRuleCall_0_12; }

		//UrlProperty
		public RuleCall getUrlPropertyParserRuleCall_0_13() { return cUrlPropertyParserRuleCall_0_13; }

		//PaintProperties
		public RuleCall getPaintPropertiesParserRuleCall_0_14() { return cPaintPropertiesParserRuleCall_0_14; }

		//MultiSizeProperties
		public RuleCall getMultiSizePropertiesParserRuleCall_0_15() { return cMultiSizePropertiesParserRuleCall_0_15; }

		//HPositionProperty
		public RuleCall getHPositionPropertyParserRuleCall_0_16() { return cHPositionPropertyParserRuleCall_0_16; }

		//VPositionProperty
		public RuleCall getVPositionPropertyParserRuleCall_0_17() { return cVPositionPropertyParserRuleCall_0_17; }

		//SideProperty
		public RuleCall getSidePropertyParserRuleCall_0_18() { return cSidePropertyParserRuleCall_0_18; }

		//BarPolicyProperty
		public RuleCall getBarPolicyPropertyParserRuleCall_0_19() { return cBarPolicyPropertyParserRuleCall_0_19; }

		//UrlProperties
		public RuleCall getUrlPropertiesParserRuleCall_0_20() { return cUrlPropertiesParserRuleCall_0_20; }

		//RepeatProperties
		public RuleCall getRepeatPropertiesParserRuleCall_0_21() { return cRepeatPropertiesParserRuleCall_0_21; }

		//MultiSizeProperty
		public RuleCall getMultiSizePropertyParserRuleCall_0_22() { return cMultiSizePropertyParserRuleCall_0_22; }

		//SizeProperties
		public RuleCall getSizePropertiesParserRuleCall_0_23() { return cSizePropertiesParserRuleCall_0_23; }

		//StrokeLineCapProperty
		public RuleCall getStrokeLineCapPropertyParserRuleCall_0_24() { return cStrokeLineCapPropertyParserRuleCall_0_24; }

		//StrokeLineJoinProperty
		public RuleCall getStrokeLineJoinPropertyParserRuleCall_0_25() { return cStrokeLineJoinPropertyParserRuleCall_0_25; }

		//TextAlignmentProperty
		public RuleCall getTextAlignmentPropertyParserRuleCall_0_26() { return cTextAlignmentPropertyParserRuleCall_0_26; }

		//TextOriginProperty
		public RuleCall getTextOriginPropertyParserRuleCall_0_27() { return cTextOriginPropertyParserRuleCall_0_27; }

		//BackgroundImagePositionProperty
		public RuleCall getBackgroundImagePositionPropertyParserRuleCall_0_28() { return cBackgroundImagePositionPropertyParserRuleCall_0_28; }

		//BackgroundImageSizeProperty
		public RuleCall getBackgroundImageSizePropertyParserRuleCall_0_29() { return cBackgroundImageSizePropertyParserRuleCall_0_29; }

		//BorderStyleProperty
		public RuleCall getBorderStylePropertyParserRuleCall_0_30() { return cBorderStylePropertyParserRuleCall_0_30; }

		//BorderImageSliceProperty
		public RuleCall getBorderImageSlicePropertyParserRuleCall_0_31() { return cBorderImageSlicePropertyParserRuleCall_0_31; }

		//ShapeProperty
		public RuleCall getShapePropertyParserRuleCall_0_32() { return cShapePropertyParserRuleCall_0_32; }

		//TextProperty
		public RuleCall getTextPropertyParserRuleCall_0_33() { return cTextPropertyParserRuleCall_0_33; }

		//TextOverrunProperty
		public RuleCall getTextOverrunPropertyParserRuleCall_0_34() { return cTextOverrunPropertyParserRuleCall_0_34; }

		//EchoCharProperty
		public RuleCall getEchoCharPropertyParserRuleCall_0_35() { return cEchoCharPropertyParserRuleCall_0_35; }

		//InsetsProperty
		public RuleCall getInsetsPropertyParserRuleCall_0_36() { return cInsetsPropertyParserRuleCall_0_36; }

		//HorizontalGridLineStrokeDashArrayProperty
		public RuleCall getHorizontalGridLineStrokeDashArrayPropertyParserRuleCall_0_37() { return cHorizontalGridLineStrokeDashArrayPropertyParserRuleCall_0_37; }

		//VerticalGridLineStrokeDashArrayProperty
		public RuleCall getVerticalGridLineStrokeDashArrayPropertyParserRuleCall_0_38() { return cVerticalGridLineStrokeDashArrayPropertyParserRuleCall_0_38; }

		//BorderColorProperty
		public RuleCall getBorderColorPropertyParserRuleCall_0_39() { return cBorderColorPropertyParserRuleCall_0_39; }

		//";"
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}

	public class FontPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFontValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FontProperty:
		//	property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//	"-fx-tick-label-font") ":" value=FontValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font") ":" value=FontValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font"
		public Keyword getPropertyFxFontKeyword_0_0_0() { return cPropertyFxFontKeyword_0_0_0; }

		//"-fx-title-font"
		public Keyword getPropertyFxTitleFontKeyword_0_0_1() { return cPropertyFxTitleFontKeyword_0_0_1; }

		//"-fx-pie-label-font"
		public Keyword getPropertyFxPieLabelFontKeyword_0_0_2() { return cPropertyFxPieLabelFontKeyword_0_0_2; }

		//"-fx-pie-value-label-font"
		public Keyword getPropertyFxPieValueLabelFontKeyword_0_0_3() { return cPropertyFxPieValueLabelFontKeyword_0_0_3; }

		//"-fx-label-font"
		public Keyword getPropertyFxLabelFontKeyword_0_0_4() { return cPropertyFxLabelFontKeyword_0_0_4; }

		//"-fx-tick-label-font"
		public Keyword getPropertyFxTickLabelFontKeyword_0_0_5() { return cPropertyFxTickLabelFontKeyword_0_0_5; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=FontValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//FontValue
		public RuleCall getValueFontValueParserRuleCall_2_0() { return cValueFontValueParserRuleCall_2_0; }
	}

	public class FontFamilyPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontFamilyProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontFamilyKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontFamilyKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontFamilyKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontFamilyKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontFamilyKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontFamilyKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFontFamilyParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FontFamilyProperty:
		//	property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" |
		//	"-fx-pie-value-label-font-family" | "-fx-label-font-family" | "-fx-tick-label-font-family") ":" value=FontFamily;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family"
		//| "-fx-label-font-family" | "-fx-tick-label-font-family") ":" value=FontFamily
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family"
		//| "-fx-label-font-family" | "-fx-tick-label-font-family")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family" |
		//"-fx-label-font-family" | "-fx-tick-label-font-family"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-family"
		public Keyword getPropertyFxFontFamilyKeyword_0_0_0() { return cPropertyFxFontFamilyKeyword_0_0_0; }

		//"-fx-title-font-family"
		public Keyword getPropertyFxTitleFontFamilyKeyword_0_0_1() { return cPropertyFxTitleFontFamilyKeyword_0_0_1; }

		//"-fx-pie-label-font-family"
		public Keyword getPropertyFxPieLabelFontFamilyKeyword_0_0_2() { return cPropertyFxPieLabelFontFamilyKeyword_0_0_2; }

		//"-fx-pie-value-label-font-family"
		public Keyword getPropertyFxPieValueLabelFontFamilyKeyword_0_0_3() { return cPropertyFxPieValueLabelFontFamilyKeyword_0_0_3; }

		//"-fx-label-font-family"
		public Keyword getPropertyFxLabelFontFamilyKeyword_0_0_4() { return cPropertyFxLabelFontFamilyKeyword_0_0_4; }

		//"-fx-tick-label-font-family"
		public Keyword getPropertyFxTickLabelFontFamilyKeyword_0_0_5() { return cPropertyFxTickLabelFontFamilyKeyword_0_0_5; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=FontFamily
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//FontFamily
		public RuleCall getValueFontFamilyParserRuleCall_2_0() { return cValueFontFamilyParserRuleCall_2_0; }
	}

	public class FontSizePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontSizeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontSizeKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontSizeKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontSizeKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontSizeKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontSizeKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontSizeKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSizeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FontSizeProperty:
		//	property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//	"-fx-label-font-size" | "-fx-tick-label-font-size") ":" value=SizeValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size") ":" value=SizeValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-size"
		public Keyword getPropertyFxFontSizeKeyword_0_0_0() { return cPropertyFxFontSizeKeyword_0_0_0; }

		//"-fx-title-font-size"
		public Keyword getPropertyFxTitleFontSizeKeyword_0_0_1() { return cPropertyFxTitleFontSizeKeyword_0_0_1; }

		//"-fx-pie-label-font-size"
		public Keyword getPropertyFxPieLabelFontSizeKeyword_0_0_2() { return cPropertyFxPieLabelFontSizeKeyword_0_0_2; }

		//"-fx-pie-value-label-font-size"
		public Keyword getPropertyFxPieValueLabelFontSizeKeyword_0_0_3() { return cPropertyFxPieValueLabelFontSizeKeyword_0_0_3; }

		//"-fx-label-font-size"
		public Keyword getPropertyFxLabelFontSizeKeyword_0_0_4() { return cPropertyFxLabelFontSizeKeyword_0_0_4; }

		//"-fx-tick-label-font-size"
		public Keyword getPropertyFxTickLabelFontSizeKeyword_0_0_5() { return cPropertyFxTickLabelFontSizeKeyword_0_0_5; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=SizeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//SizeValue
		public RuleCall getValueSizeValueParserRuleCall_2_0() { return cValueSizeValueParserRuleCall_2_0; }
	}

	public class FontStylePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontStyleProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontStyleKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontStyleKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontStyleKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontStyleKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontStyleKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontStyleKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFontStyleValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FontStyleProperty:
		//	property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//	"-fx-label-font-style" | "-fx-tick-label-font-style") ":" value=FontStyleValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style") ":" value=FontStyleValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-style"
		public Keyword getPropertyFxFontStyleKeyword_0_0_0() { return cPropertyFxFontStyleKeyword_0_0_0; }

		//"-fx-title-font-style"
		public Keyword getPropertyFxTitleFontStyleKeyword_0_0_1() { return cPropertyFxTitleFontStyleKeyword_0_0_1; }

		//"-fx-pie-label-font-style"
		public Keyword getPropertyFxPieLabelFontStyleKeyword_0_0_2() { return cPropertyFxPieLabelFontStyleKeyword_0_0_2; }

		//"-fx-pie-value-label-font-style"
		public Keyword getPropertyFxPieValueLabelFontStyleKeyword_0_0_3() { return cPropertyFxPieValueLabelFontStyleKeyword_0_0_3; }

		//"-fx-label-font-style"
		public Keyword getPropertyFxLabelFontStyleKeyword_0_0_4() { return cPropertyFxLabelFontStyleKeyword_0_0_4; }

		//"-fx-tick-label-font-style"
		public Keyword getPropertyFxTickLabelFontStyleKeyword_0_0_5() { return cPropertyFxTickLabelFontStyleKeyword_0_0_5; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=FontStyleValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//FontStyleValue
		public RuleCall getValueFontStyleValueParserRuleCall_2_0() { return cValueFontStyleValueParserRuleCall_2_0; }
	}

	public class FontWeightPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontWeightProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontWeightKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontWeightKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontWeightKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontWeightKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontWeightKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontWeightKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueFontWeightValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//FontWeightProperty:
		//	property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" |
		//	"-fx-pie-value-label-font-weight" | "-fx-label-font-weight" | "-fx-tick-label-font-weight") ":" value=FontWeightValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight"
		//| "-fx-label-font-weight" | "-fx-tick-label-font-weight") ":" value=FontWeightValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight"
		//| "-fx-label-font-weight" | "-fx-tick-label-font-weight")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight" |
		//"-fx-label-font-weight" | "-fx-tick-label-font-weight"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-weight"
		public Keyword getPropertyFxFontWeightKeyword_0_0_0() { return cPropertyFxFontWeightKeyword_0_0_0; }

		//"-fx-title-font-weight"
		public Keyword getPropertyFxTitleFontWeightKeyword_0_0_1() { return cPropertyFxTitleFontWeightKeyword_0_0_1; }

		//"-fx-pie-label-font-weight"
		public Keyword getPropertyFxPieLabelFontWeightKeyword_0_0_2() { return cPropertyFxPieLabelFontWeightKeyword_0_0_2; }

		//"-fx-pie-value-label-font-weight"
		public Keyword getPropertyFxPieValueLabelFontWeightKeyword_0_0_3() { return cPropertyFxPieValueLabelFontWeightKeyword_0_0_3; }

		//"-fx-label-font-weight"
		public Keyword getPropertyFxLabelFontWeightKeyword_0_0_4() { return cPropertyFxLabelFontWeightKeyword_0_0_4; }

		//"-fx-tick-label-font-weight"
		public Keyword getPropertyFxTickLabelFontWeightKeyword_0_0_5() { return cPropertyFxTickLabelFontWeightKeyword_0_0_5; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=FontWeightValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//FontWeightValue
		public RuleCall getValueFontWeightValueParserRuleCall_2_0() { return cValueFontWeightValueParserRuleCall_2_0; }
	}

	public class CursorPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CursorProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxCursorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueCrosshairKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueDefaultKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueHandKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueMoveKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		private final Keyword cValueEResizeKeyword_2_0_4 = (Keyword)cValueAlternatives_2_0.eContents().get(4);
		private final Keyword cValueHResizeKeyword_2_0_5 = (Keyword)cValueAlternatives_2_0.eContents().get(5);
		private final Keyword cValueNeResizeKeyword_2_0_6 = (Keyword)cValueAlternatives_2_0.eContents().get(6);
		private final Keyword cValueNwResizeKeyword_2_0_7 = (Keyword)cValueAlternatives_2_0.eContents().get(7);
		private final Keyword cValueNResizeKeyword_2_0_8 = (Keyword)cValueAlternatives_2_0.eContents().get(8);
		private final Keyword cValueSeResizeKeyword_2_0_9 = (Keyword)cValueAlternatives_2_0.eContents().get(9);
		private final Keyword cValueSwResizeKeyword_2_0_10 = (Keyword)cValueAlternatives_2_0.eContents().get(10);
		private final Keyword cValueSResizeKeyword_2_0_11 = (Keyword)cValueAlternatives_2_0.eContents().get(11);
		private final Keyword cValueWResizeKeyword_2_0_12 = (Keyword)cValueAlternatives_2_0.eContents().get(12);
		private final Keyword cValueVResizeKeyword_2_0_13 = (Keyword)cValueAlternatives_2_0.eContents().get(13);
		private final Keyword cValueTextKeyword_2_0_14 = (Keyword)cValueAlternatives_2_0.eContents().get(14);
		private final Keyword cValueWaitKeyword_2_0_15 = (Keyword)cValueAlternatives_2_0.eContents().get(15);
		
		//CursorProperty:
		//	"-fx-cursor" ":" value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" |
		//	"nw-resize" | "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait");
		public ParserRule getRule() { return rule; }

		//"-fx-cursor" ":" value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" | "nw-resize"
		//| "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait")
		public Group getGroup() { return cGroup; }

		//"-fx-cursor"
		public Keyword getFxCursorKeyword_0() { return cFxCursorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" | "nw-resize" | "n-resize" |
		//"se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" | "nw-resize" | "n-resize" |
		//"se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"crosshair"
		public Keyword getValueCrosshairKeyword_2_0_0() { return cValueCrosshairKeyword_2_0_0; }

		//"default"
		public Keyword getValueDefaultKeyword_2_0_1() { return cValueDefaultKeyword_2_0_1; }

		//"hand"
		public Keyword getValueHandKeyword_2_0_2() { return cValueHandKeyword_2_0_2; }

		//"move"
		public Keyword getValueMoveKeyword_2_0_3() { return cValueMoveKeyword_2_0_3; }

		//"e-resize"
		public Keyword getValueEResizeKeyword_2_0_4() { return cValueEResizeKeyword_2_0_4; }

		//"h-resize"
		public Keyword getValueHResizeKeyword_2_0_5() { return cValueHResizeKeyword_2_0_5; }

		//"ne-resize"
		public Keyword getValueNeResizeKeyword_2_0_6() { return cValueNeResizeKeyword_2_0_6; }

		//"nw-resize"
		public Keyword getValueNwResizeKeyword_2_0_7() { return cValueNwResizeKeyword_2_0_7; }

		//"n-resize"
		public Keyword getValueNResizeKeyword_2_0_8() { return cValueNResizeKeyword_2_0_8; }

		//"se-resize"
		public Keyword getValueSeResizeKeyword_2_0_9() { return cValueSeResizeKeyword_2_0_9; }

		//"sw-resize"
		public Keyword getValueSwResizeKeyword_2_0_10() { return cValueSwResizeKeyword_2_0_10; }

		//"s-resize"
		public Keyword getValueSResizeKeyword_2_0_11() { return cValueSResizeKeyword_2_0_11; }

		//"w-resize"
		public Keyword getValueWResizeKeyword_2_0_12() { return cValueWResizeKeyword_2_0_12; }

		//"v-resize"
		public Keyword getValueVResizeKeyword_2_0_13() { return cValueVResizeKeyword_2_0_13; }

		//"text"
		public Keyword getValueTextKeyword_2_0_14() { return cValueTextKeyword_2_0_14; }

		//"wait"
		public Keyword getValueWaitKeyword_2_0_15() { return cValueWaitKeyword_2_0_15; }
	}

	public class EffectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EffectProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxEffectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEffectParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EffectProperty:
		//	"-fx-effect" ":" value=Effect;
		public ParserRule getRule() { return rule; }

		//"-fx-effect" ":" value=Effect
		public Group getGroup() { return cGroup; }

		//"-fx-effect"
		public Keyword getFxEffectKeyword_0() { return cFxEffectKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=Effect
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Effect
		public RuleCall getValueEffectParserRuleCall_2_0() { return cValueEffectParserRuleCall_2_0; }
	}

	public class EffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Effect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEffectDropShadowParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEffectInnerShadowParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Effect:
		//	EffectDropShadow | EffectInnerShadow;
		public ParserRule getRule() { return rule; }

		//EffectDropShadow | EffectInnerShadow
		public Alternatives getAlternatives() { return cAlternatives; }

		//EffectDropShadow
		public RuleCall getEffectDropShadowParserRuleCall_0() { return cEffectDropShadowParserRuleCall_0; }

		//EffectInnerShadow
		public RuleCall getEffectInnerShadowParserRuleCall_1() { return cEffectInnerShadowParserRuleCall_1; }
	}

	public class EffectDropShadowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EffectDropShadow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDropshadowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBlurAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlurBlurValueParserRuleCall_2_0 = (RuleCall)cBlurAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cColorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cColorColorValueParserRuleCall_4_0 = (RuleCall)cColorAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBlurRadiusAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBlurRadiusNumberValueParserRuleCall_6_0 = (RuleCall)cBlurRadiusAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSpreadAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSpreadNumberValueParserRuleCall_8_0 = (RuleCall)cSpreadAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOffsetXAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOffsetXNumberValueParserRuleCall_10_0 = (RuleCall)cOffsetXAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cOffsetYAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOffsetYNumberValueParserRuleCall_12_0 = (RuleCall)cOffsetYAssignment_12.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//EffectDropShadow:
		//	"dropshadow" "(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," spread=NumberValue ","
		//	offsetX=NumberValue "," offsetY=NumberValue ")";
		public ParserRule getRule() { return rule; }

		//"dropshadow" "(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," spread=NumberValue ","
		//offsetX=NumberValue "," offsetY=NumberValue ")"
		public Group getGroup() { return cGroup; }

		//"dropshadow"
		public Keyword getDropshadowKeyword_0() { return cDropshadowKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//blur=BlurValue
		public Assignment getBlurAssignment_2() { return cBlurAssignment_2; }

		//BlurValue
		public RuleCall getBlurBlurValueParserRuleCall_2_0() { return cBlurBlurValueParserRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//color=ColorValue
		public Assignment getColorAssignment_4() { return cColorAssignment_4; }

		//ColorValue
		public RuleCall getColorColorValueParserRuleCall_4_0() { return cColorColorValueParserRuleCall_4_0; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//blurRadius=NumberValue
		public Assignment getBlurRadiusAssignment_6() { return cBlurRadiusAssignment_6; }

		//NumberValue
		public RuleCall getBlurRadiusNumberValueParserRuleCall_6_0() { return cBlurRadiusNumberValueParserRuleCall_6_0; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//spread=NumberValue
		public Assignment getSpreadAssignment_8() { return cSpreadAssignment_8; }

		//NumberValue
		public RuleCall getSpreadNumberValueParserRuleCall_8_0() { return cSpreadNumberValueParserRuleCall_8_0; }

		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }

		//offsetX=NumberValue
		public Assignment getOffsetXAssignment_10() { return cOffsetXAssignment_10; }

		//NumberValue
		public RuleCall getOffsetXNumberValueParserRuleCall_10_0() { return cOffsetXNumberValueParserRuleCall_10_0; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//offsetY=NumberValue
		public Assignment getOffsetYAssignment_12() { return cOffsetYAssignment_12; }

		//NumberValue
		public RuleCall getOffsetYNumberValueParserRuleCall_12_0() { return cOffsetYNumberValueParserRuleCall_12_0; }

		//")"
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
	}

	public class EffectInnerShadowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EffectInnerShadow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInnershadowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBlurAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBlurBlurValueParserRuleCall_1_0 = (RuleCall)cBlurAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cColorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cColorColorValueParserRuleCall_3_0 = (RuleCall)cColorAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBlurRadiusAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBlurRadiusNumberValueParserRuleCall_5_0 = (RuleCall)cBlurRadiusAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cChokeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cChokeNumberValueParserRuleCall_7_0 = (RuleCall)cChokeAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cOffsetXAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cOffsetXNumberValueParserRuleCall_9_0 = (RuleCall)cOffsetXAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOffsetYAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOffsetYNumberValueParserRuleCall_11_0 = (RuleCall)cOffsetYAssignment_11.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//EffectInnerShadow:
		//	"innershadow(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," choke=NumberValue ","
		//	offsetX=NumberValue "," offsetY=NumberValue ")";
		public ParserRule getRule() { return rule; }

		//"innershadow(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," choke=NumberValue ","
		//offsetX=NumberValue "," offsetY=NumberValue ")"
		public Group getGroup() { return cGroup; }

		//"innershadow("
		public Keyword getInnershadowKeyword_0() { return cInnershadowKeyword_0; }

		//blur=BlurValue
		public Assignment getBlurAssignment_1() { return cBlurAssignment_1; }

		//BlurValue
		public RuleCall getBlurBlurValueParserRuleCall_1_0() { return cBlurBlurValueParserRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//color=ColorValue
		public Assignment getColorAssignment_3() { return cColorAssignment_3; }

		//ColorValue
		public RuleCall getColorColorValueParserRuleCall_3_0() { return cColorColorValueParserRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//blurRadius=NumberValue
		public Assignment getBlurRadiusAssignment_5() { return cBlurRadiusAssignment_5; }

		//NumberValue
		public RuleCall getBlurRadiusNumberValueParserRuleCall_5_0() { return cBlurRadiusNumberValueParserRuleCall_5_0; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//choke=NumberValue
		public Assignment getChokeAssignment_7() { return cChokeAssignment_7; }

		//NumberValue
		public RuleCall getChokeNumberValueParserRuleCall_7_0() { return cChokeNumberValueParserRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//offsetX=NumberValue
		public Assignment getOffsetXAssignment_9() { return cOffsetXAssignment_9; }

		//NumberValue
		public RuleCall getOffsetXNumberValueParserRuleCall_9_0() { return cOffsetXNumberValueParserRuleCall_9_0; }

		//","
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }

		//offsetY=NumberValue
		public Assignment getOffsetYAssignment_11() { return cOffsetYAssignment_11; }

		//NumberValue
		public RuleCall getOffsetYNumberValueParserRuleCall_11_0() { return cOffsetYNumberValueParserRuleCall_11_0; }

		//")"
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }
	}

	public class BooleanPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFocusTraversableKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxPannableKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxHgapKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxVposKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxSnapToPixelKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxVerticalKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxSmoothKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxStrikethroughKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxUnderlineKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxScaleShapeKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxVerticalZeroLineVisibleKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxVerticalGridLineVisibleKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxHorizontalGridLineVisibleKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxPieValueVisibleKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieToLabelLineCurvedKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieLabelVisibleKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxClockwiseKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxShowSymbolsKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxLegendVisibleKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxSelectOnFocusKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxEditableKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxSnapToTicksKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxShowTickMarksKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxShowTickLabelsKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cPropertyFxFitToWidthKeyword_0_0_26 = (Keyword)cPropertyAlternatives_0_0.eContents().get(26);
		private final Keyword cPropertyFxMinorTickVisibleKeyword_0_0_27 = (Keyword)cPropertyAlternatives_0_0.eContents().get(27);
		private final Keyword cPropertyFxGapStartAndEndKeyword_0_0_28 = (Keyword)cPropertyAlternatives_0_0.eContents().get(28);
		private final Keyword cPropertyFxTickMarkVisibleKeyword_0_0_29 = (Keyword)cPropertyAlternatives_0_0.eContents().get(29);
		private final Keyword cPropertyFxTickLabelsVisibleKeyword_0_0_30 = (Keyword)cPropertyAlternatives_0_0.eContents().get(30);
		private final Keyword cPropertyFxFitToHeightKeyword_0_0_31 = (Keyword)cPropertyAlternatives_0_0.eContents().get(31);
		private final Keyword cPropertyFxClickToPositionKeyword_0_0_32 = (Keyword)cPropertyAlternatives_0_0.eContents().get(32);
		private final Keyword cPropertyFxTextWrapKeyword_0_0_33 = (Keyword)cPropertyAlternatives_0_0.eContents().get(33);
		private final Keyword cPropertyFxPositionShapeKeyword_0_0_34 = (Keyword)cPropertyAlternatives_0_0.eContents().get(34);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueBooleanValueEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//BooleanProperty:
		//	property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//	"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//	"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//	"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//	"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//	"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//	"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//	"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") ":" value=BooleanValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") ":" value=BooleanValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" | "-fx-smooth"
		//| "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-focus-traversable"
		public Keyword getPropertyFxFocusTraversableKeyword_0_0_0() { return cPropertyFxFocusTraversableKeyword_0_0_0; }

		//"-fx-pannable"
		public Keyword getPropertyFxPannableKeyword_0_0_1() { return cPropertyFxPannableKeyword_0_0_1; }

		//"-fx-hgap"
		public Keyword getPropertyFxHgapKeyword_0_0_2() { return cPropertyFxHgapKeyword_0_0_2; }

		//"-fx-vpos"
		public Keyword getPropertyFxVposKeyword_0_0_3() { return cPropertyFxVposKeyword_0_0_3; }

		//"-fx-snap-to-pixel"
		public Keyword getPropertyFxSnapToPixelKeyword_0_0_4() { return cPropertyFxSnapToPixelKeyword_0_0_4; }

		//"-fx-vertical"
		public Keyword getPropertyFxVerticalKeyword_0_0_5() { return cPropertyFxVerticalKeyword_0_0_5; }

		//"-fx-smooth"
		public Keyword getPropertyFxSmoothKeyword_0_0_6() { return cPropertyFxSmoothKeyword_0_0_6; }

		//"-fx-strikethrough"
		public Keyword getPropertyFxStrikethroughKeyword_0_0_7() { return cPropertyFxStrikethroughKeyword_0_0_7; }

		//"-fx-underline"
		public Keyword getPropertyFxUnderlineKeyword_0_0_8() { return cPropertyFxUnderlineKeyword_0_0_8; }

		//"-fx-scale-shape"
		public Keyword getPropertyFxScaleShapeKeyword_0_0_9() { return cPropertyFxScaleShapeKeyword_0_0_9; }

		//"-fx-vertical-zero-line-visible"
		public Keyword getPropertyFxVerticalZeroLineVisibleKeyword_0_0_10() { return cPropertyFxVerticalZeroLineVisibleKeyword_0_0_10; }

		//"-fx-vertical-grid-line-visible"
		public Keyword getPropertyFxVerticalGridLineVisibleKeyword_0_0_11() { return cPropertyFxVerticalGridLineVisibleKeyword_0_0_11; }

		//"-fx-horizontal-zero-line-visible"
		public Keyword getPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12() { return cPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12; }

		//"-fx-horizontal-grid-line-visible"
		public Keyword getPropertyFxHorizontalGridLineVisibleKeyword_0_0_13() { return cPropertyFxHorizontalGridLineVisibleKeyword_0_0_13; }

		//"-fx-pie-value-visible"
		public Keyword getPropertyFxPieValueVisibleKeyword_0_0_14() { return cPropertyFxPieValueVisibleKeyword_0_0_14; }

		//"-fx-pie-to-label-line-curved"
		public Keyword getPropertyFxPieToLabelLineCurvedKeyword_0_0_15() { return cPropertyFxPieToLabelLineCurvedKeyword_0_0_15; }

		//"-fx-pie-label-visible"
		public Keyword getPropertyFxPieLabelVisibleKeyword_0_0_16() { return cPropertyFxPieLabelVisibleKeyword_0_0_16; }

		//"-fx-clockwise"
		public Keyword getPropertyFxClockwiseKeyword_0_0_17() { return cPropertyFxClockwiseKeyword_0_0_17; }

		//"-fx-show-symbols"
		public Keyword getPropertyFxShowSymbolsKeyword_0_0_18() { return cPropertyFxShowSymbolsKeyword_0_0_18; }

		//"-fx-legend-visible"
		public Keyword getPropertyFxLegendVisibleKeyword_0_0_19() { return cPropertyFxLegendVisibleKeyword_0_0_19; }

		//"-fx-scale-bubble-radius-using-axis"
		public Keyword getPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20() { return cPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20; }

		//"-fx-select-on-focus"
		public Keyword getPropertyFxSelectOnFocusKeyword_0_0_21() { return cPropertyFxSelectOnFocusKeyword_0_0_21; }

		//"-fx-editable"
		public Keyword getPropertyFxEditableKeyword_0_0_22() { return cPropertyFxEditableKeyword_0_0_22; }

		//"-fx-snap-to-ticks"
		public Keyword getPropertyFxSnapToTicksKeyword_0_0_23() { return cPropertyFxSnapToTicksKeyword_0_0_23; }

		//"-fx-show-tick-marks"
		public Keyword getPropertyFxShowTickMarksKeyword_0_0_24() { return cPropertyFxShowTickMarksKeyword_0_0_24; }

		//"-fx-show-tick-labels"
		public Keyword getPropertyFxShowTickLabelsKeyword_0_0_25() { return cPropertyFxShowTickLabelsKeyword_0_0_25; }

		//"-fx-fit-to-width"
		public Keyword getPropertyFxFitToWidthKeyword_0_0_26() { return cPropertyFxFitToWidthKeyword_0_0_26; }

		//"-fx-minor-tick-visible"
		public Keyword getPropertyFxMinorTickVisibleKeyword_0_0_27() { return cPropertyFxMinorTickVisibleKeyword_0_0_27; }

		//"-fx-gap-start-and-end"
		public Keyword getPropertyFxGapStartAndEndKeyword_0_0_28() { return cPropertyFxGapStartAndEndKeyword_0_0_28; }

		//"-fx-tick-mark-visible"
		public Keyword getPropertyFxTickMarkVisibleKeyword_0_0_29() { return cPropertyFxTickMarkVisibleKeyword_0_0_29; }

		//"-fx-tick-labels-visible"
		public Keyword getPropertyFxTickLabelsVisibleKeyword_0_0_30() { return cPropertyFxTickLabelsVisibleKeyword_0_0_30; }

		//"-fx-fit-to-height"
		public Keyword getPropertyFxFitToHeightKeyword_0_0_31() { return cPropertyFxFitToHeightKeyword_0_0_31; }

		//"-fx-click-to-position"
		public Keyword getPropertyFxClickToPositionKeyword_0_0_32() { return cPropertyFxClickToPositionKeyword_0_0_32; }

		//"-fx-text-wrap"
		public Keyword getPropertyFxTextWrapKeyword_0_0_33() { return cPropertyFxTextWrapKeyword_0_0_33; }

		//"-fx-position-shape"
		public Keyword getPropertyFxPositionShapeKeyword_0_0_34() { return cPropertyFxPositionShapeKeyword_0_0_34; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=BooleanValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//BooleanValue
		public RuleCall getValueBooleanValueEnumRuleCall_2_0() { return cValueBooleanValueEnumRuleCall_2_0; }
	}

	public class SizePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxSpacingKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxArcHeightKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxArcWidthKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxMinorTickLengthKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxStrokeWidthKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxStartMarginKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxEndMarginKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxTickMarkStrokeWidthKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxTickMarkLengthKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxTickLabelTickGapKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxAxisStrokeWidthKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxLabelTickGapKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieThicknessKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieStrokeWidthKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxTitleGapKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxLegendGapKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxHoverStrokeWidthKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxOffsetYKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxOffsetXKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxCategoryGapKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxBarGapKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxGraphicTextGapKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSizeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//SizeProperty:
		//	property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//	"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//	"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//	"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//	"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//	"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//	"-fx-graphic-text-gap") ":" value=SizeValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap") ":" value=SizeValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" | "-fx-start-margin" |
		//"-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" | "-fx-tick-label-tick-gap" |
		//"-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-spacing"
		public Keyword getPropertyFxSpacingKeyword_0_0_0() { return cPropertyFxSpacingKeyword_0_0_0; }

		//"-fx-arc-height"
		public Keyword getPropertyFxArcHeightKeyword_0_0_1() { return cPropertyFxArcHeightKeyword_0_0_1; }

		//"-fx-arc-width"
		public Keyword getPropertyFxArcWidthKeyword_0_0_2() { return cPropertyFxArcWidthKeyword_0_0_2; }

		//"-fx-minor-tick-length"
		public Keyword getPropertyFxMinorTickLengthKeyword_0_0_3() { return cPropertyFxMinorTickLengthKeyword_0_0_3; }

		//"-fx-stroke-width"
		public Keyword getPropertyFxStrokeWidthKeyword_0_0_4() { return cPropertyFxStrokeWidthKeyword_0_0_4; }

		//"-fx-start-margin"
		public Keyword getPropertyFxStartMarginKeyword_0_0_5() { return cPropertyFxStartMarginKeyword_0_0_5; }

		//"-fx-end-margin"
		public Keyword getPropertyFxEndMarginKeyword_0_0_6() { return cPropertyFxEndMarginKeyword_0_0_6; }

		//"-fx-tick-mark-stroke-width"
		public Keyword getPropertyFxTickMarkStrokeWidthKeyword_0_0_7() { return cPropertyFxTickMarkStrokeWidthKeyword_0_0_7; }

		//"-fx-tick-mark-length"
		public Keyword getPropertyFxTickMarkLengthKeyword_0_0_8() { return cPropertyFxTickMarkLengthKeyword_0_0_8; }

		//"-fx-tick-label-tick-gap"
		public Keyword getPropertyFxTickLabelTickGapKeyword_0_0_9() { return cPropertyFxTickLabelTickGapKeyword_0_0_9; }

		//"-fx-axis-stroke-width"
		public Keyword getPropertyFxAxisStrokeWidthKeyword_0_0_10() { return cPropertyFxAxisStrokeWidthKeyword_0_0_10; }

		//"-fx-label-tick-gap"
		public Keyword getPropertyFxLabelTickGapKeyword_0_0_11() { return cPropertyFxLabelTickGapKeyword_0_0_11; }

		//"-fx-vertical-grid-line-stroke-width"
		public Keyword getPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12() { return cPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12; }

		//"-fx-plot-background-stroke-width"
		public Keyword getPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13() { return cPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13; }

		//"-fx-horizontal-grid-line-stroke-width"
		public Keyword getPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14() { return cPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14; }

		//"-fx-pie-thickness"
		public Keyword getPropertyFxPieThicknessKeyword_0_0_15() { return cPropertyFxPieThicknessKeyword_0_0_15; }

		//"-fx-pie-stroke-width"
		public Keyword getPropertyFxPieStrokeWidthKeyword_0_0_16() { return cPropertyFxPieStrokeWidthKeyword_0_0_16; }

		//"-fx-title-gap"
		public Keyword getPropertyFxTitleGapKeyword_0_0_17() { return cPropertyFxTitleGapKeyword_0_0_17; }

		//"-fx-legend-gap"
		public Keyword getPropertyFxLegendGapKeyword_0_0_18() { return cPropertyFxLegendGapKeyword_0_0_18; }

		//"-fx-hover-stroke-width"
		public Keyword getPropertyFxHoverStrokeWidthKeyword_0_0_19() { return cPropertyFxHoverStrokeWidthKeyword_0_0_19; }

		//"-fx-chart-background-stroke-width"
		public Keyword getPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20() { return cPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20; }

		//"-fx-offset-y"
		public Keyword getPropertyFxOffsetYKeyword_0_0_21() { return cPropertyFxOffsetYKeyword_0_0_21; }

		//"-fx-offset-x"
		public Keyword getPropertyFxOffsetXKeyword_0_0_22() { return cPropertyFxOffsetXKeyword_0_0_22; }

		//"-fx-category-gap"
		public Keyword getPropertyFxCategoryGapKeyword_0_0_23() { return cPropertyFxCategoryGapKeyword_0_0_23; }

		//"-fx-bar-gap"
		public Keyword getPropertyFxBarGapKeyword_0_0_24() { return cPropertyFxBarGapKeyword_0_0_24; }

		//"-fx-graphic-text-gap"
		public Keyword getPropertyFxGraphicTextGapKeyword_0_0_25() { return cPropertyFxGraphicTextGapKeyword_0_0_25; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=SizeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//SizeValue
		public RuleCall getValueSizeValueParserRuleCall_2_0() { return cValueSizeValueParserRuleCall_2_0; }
	}

	public class NumberPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxRotateKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxScaleXKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxScaleYKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxScaleZKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxTranslateXKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTranslateYKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxTranslateZKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxVgapKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxTileHeightKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxTileWidthKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxStrokeDashOffsetKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxStrokeMiterLimitKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxBlockIncrementKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxUnitIncrementKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxMajorTickUnitKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxDataOpacityKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxRadiusScaleKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxPieToLabelLineOneLengthKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxStartAngleKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxTickUnitKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueNumberValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//NumberProperty:
		//	property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//	"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//	"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//	"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//	"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit") ":" value=NumberValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit") ":" value=NumberValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" | "-fx-translate-z"
		//| "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" | "-fx-stroke-miter-limit" |
		//"-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" | "-fx-radius-scale" |
		//"-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" | "-fx-pie-to-label-line-two-length" |
		//"-fx-start-angle" | "-fx-tick-unit"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-rotate"
		public Keyword getPropertyFxRotateKeyword_0_0_0() { return cPropertyFxRotateKeyword_0_0_0; }

		//"-fx-scale-x"
		public Keyword getPropertyFxScaleXKeyword_0_0_1() { return cPropertyFxScaleXKeyword_0_0_1; }

		//"-fx-scale-y"
		public Keyword getPropertyFxScaleYKeyword_0_0_2() { return cPropertyFxScaleYKeyword_0_0_2; }

		//"-fx-scale-z"
		public Keyword getPropertyFxScaleZKeyword_0_0_3() { return cPropertyFxScaleZKeyword_0_0_3; }

		//"-fx-translate-x"
		public Keyword getPropertyFxTranslateXKeyword_0_0_4() { return cPropertyFxTranslateXKeyword_0_0_4; }

		//"-fx-translate-y"
		public Keyword getPropertyFxTranslateYKeyword_0_0_5() { return cPropertyFxTranslateYKeyword_0_0_5; }

		//"-fx-translate-z"
		public Keyword getPropertyFxTranslateZKeyword_0_0_6() { return cPropertyFxTranslateZKeyword_0_0_6; }

		//"-fx-vgap"
		public Keyword getPropertyFxVgapKeyword_0_0_7() { return cPropertyFxVgapKeyword_0_0_7; }

		//"-fx-tile-height"
		public Keyword getPropertyFxTileHeightKeyword_0_0_8() { return cPropertyFxTileHeightKeyword_0_0_8; }

		//"-fx-tile-width"
		public Keyword getPropertyFxTileWidthKeyword_0_0_9() { return cPropertyFxTileWidthKeyword_0_0_9; }

		//"-fx-stroke-dash-offset"
		public Keyword getPropertyFxStrokeDashOffsetKeyword_0_0_10() { return cPropertyFxStrokeDashOffsetKeyword_0_0_10; }

		//"-fx-stroke-miter-limit"
		public Keyword getPropertyFxStrokeMiterLimitKeyword_0_0_11() { return cPropertyFxStrokeMiterLimitKeyword_0_0_11; }

		//"-fx-block-increment"
		public Keyword getPropertyFxBlockIncrementKeyword_0_0_12() { return cPropertyFxBlockIncrementKeyword_0_0_12; }

		//"-fx-unit-increment"
		public Keyword getPropertyFxUnitIncrementKeyword_0_0_13() { return cPropertyFxUnitIncrementKeyword_0_0_13; }

		//"-fx-major-tick-unit"
		public Keyword getPropertyFxMajorTickUnitKeyword_0_0_14() { return cPropertyFxMajorTickUnitKeyword_0_0_14; }

		//"-fx-data-opacity"
		public Keyword getPropertyFxDataOpacityKeyword_0_0_15() { return cPropertyFxDataOpacityKeyword_0_0_15; }

		//"-fx-radius-scale"
		public Keyword getPropertyFxRadiusScaleKeyword_0_0_16() { return cPropertyFxRadiusScaleKeyword_0_0_16; }

		//"-fx-pie-to-label-line-one-length"
		public Keyword getPropertyFxPieToLabelLineOneLengthKeyword_0_0_17() { return cPropertyFxPieToLabelLineOneLengthKeyword_0_0_17; }

		//"-fx-pie-to-label-line-stroke-width"
		public Keyword getPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18() { return cPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18; }

		//"-fx-pie-to-label-line-two-length"
		public Keyword getPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19() { return cPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19; }

		//"-fx-start-angle"
		public Keyword getPropertyFxStartAngleKeyword_0_0_20() { return cPropertyFxStartAngleKeyword_0_0_20; }

		//"-fx-tick-unit"
		public Keyword getPropertyFxTickUnitKeyword_0_0_21() { return cPropertyFxTickUnitKeyword_0_0_21; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=NumberValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_2_0() { return cValueNumberValueParserRuleCall_2_0; }
	}

	public class IntegerPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxColumnsKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxRowsKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxLinesKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxMinorTickCountKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueIntegerValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//IntegerProperty:
		//	property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") ":" value=IntegerValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") ":" value=IntegerValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-columns"
		public Keyword getPropertyFxColumnsKeyword_0_0_0() { return cPropertyFxColumnsKeyword_0_0_0; }

		//"-fx-rows"
		public Keyword getPropertyFxRowsKeyword_0_0_1() { return cPropertyFxRowsKeyword_0_0_1; }

		//"-fx-lines"
		public Keyword getPropertyFxLinesKeyword_0_0_2() { return cPropertyFxLinesKeyword_0_0_2; }

		//"-fx-minor-tick-count"
		public Keyword getPropertyFxMinorTickCountKeyword_0_0_3() { return cPropertyFxMinorTickCountKeyword_0_0_3; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=IntegerValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//IntegerValue
		public RuleCall getValueIntegerValueParserRuleCall_2_0() { return cValueIntegerValueParserRuleCall_2_0; }
	}

	public class PaintPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PaintProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFillKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxStrokeKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxTextFillKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxBarFillKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxBarStrokeKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxBottomShelfFillKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxBottomShelfStrokeKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxSideShelfFillKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxSideShelfStrokeKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxZeroShelfFillKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxZeroShelfStrokeKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxChartBackgroundFillKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxChartBackgroundStrokeKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxHoverStrokeKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxTitleFillKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieLabelFillKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieStrokeKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxPieToLabelLineStrokeKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxPieValueLabelFillKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxHorizontalAlternateRowFillKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxPlotBackgroundFillKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxHorizontalGridLineStrokeKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxPlotBackgroundStrokeKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxVerticalAlternateRowFillKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxVerticalGridLineStrokeKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxAxisStrokeKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cPropertyFxTickLabelFillKeyword_0_0_26 = (Keyword)cPropertyAlternatives_0_0.eContents().get(26);
		private final Keyword cPropertyFxLabelFillKeyword_0_0_27 = (Keyword)cPropertyAlternatives_0_0.eContents().get(27);
		private final Keyword cPropertyFxTickMarkStrokeKeyword_0_0_28 = (Keyword)cPropertyAlternatives_0_0.eContents().get(28);
		private final Keyword cPropertyFxHoverFillKeyword_0_0_29 = (Keyword)cPropertyAlternatives_0_0.eContents().get(29);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePaintValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//PaintProperty:
		//	property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//	"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//	"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//	"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//	"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//	"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//	"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" |
		//	"-fx-tick-mark-stroke" | "-fx-hover-fill") ":" value=PaintValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill") ":" value=PaintValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-fill"
		public Keyword getPropertyFxFillKeyword_0_0_0() { return cPropertyFxFillKeyword_0_0_0; }

		//"-fx-stroke"
		public Keyword getPropertyFxStrokeKeyword_0_0_1() { return cPropertyFxStrokeKeyword_0_0_1; }

		//"-fx-text-fill"
		public Keyword getPropertyFxTextFillKeyword_0_0_2() { return cPropertyFxTextFillKeyword_0_0_2; }

		//"-fx-bar-fill"
		public Keyword getPropertyFxBarFillKeyword_0_0_3() { return cPropertyFxBarFillKeyword_0_0_3; }

		//"-fx-bar-stroke"
		public Keyword getPropertyFxBarStrokeKeyword_0_0_4() { return cPropertyFxBarStrokeKeyword_0_0_4; }

		//"-fx-bottom-shelf-fill"
		public Keyword getPropertyFxBottomShelfFillKeyword_0_0_5() { return cPropertyFxBottomShelfFillKeyword_0_0_5; }

		//"-fx-bottom-shelf-stroke"
		public Keyword getPropertyFxBottomShelfStrokeKeyword_0_0_6() { return cPropertyFxBottomShelfStrokeKeyword_0_0_6; }

		//"-fx-side-shelf-fill"
		public Keyword getPropertyFxSideShelfFillKeyword_0_0_7() { return cPropertyFxSideShelfFillKeyword_0_0_7; }

		//"-fx-side-shelf-stroke"
		public Keyword getPropertyFxSideShelfStrokeKeyword_0_0_8() { return cPropertyFxSideShelfStrokeKeyword_0_0_8; }

		//"-fx-zero-shelf-fill"
		public Keyword getPropertyFxZeroShelfFillKeyword_0_0_9() { return cPropertyFxZeroShelfFillKeyword_0_0_9; }

		//"-fx-zero-shelf-stroke"
		public Keyword getPropertyFxZeroShelfStrokeKeyword_0_0_10() { return cPropertyFxZeroShelfStrokeKeyword_0_0_10; }

		//"-fx-chart-background-fill"
		public Keyword getPropertyFxChartBackgroundFillKeyword_0_0_11() { return cPropertyFxChartBackgroundFillKeyword_0_0_11; }

		//"-fx-chart-background-stroke"
		public Keyword getPropertyFxChartBackgroundStrokeKeyword_0_0_12() { return cPropertyFxChartBackgroundStrokeKeyword_0_0_12; }

		//"-fx-hover-stroke"
		public Keyword getPropertyFxHoverStrokeKeyword_0_0_13() { return cPropertyFxHoverStrokeKeyword_0_0_13; }

		//"-fx-title-fill"
		public Keyword getPropertyFxTitleFillKeyword_0_0_14() { return cPropertyFxTitleFillKeyword_0_0_14; }

		//"-fx-pie-label-fill"
		public Keyword getPropertyFxPieLabelFillKeyword_0_0_15() { return cPropertyFxPieLabelFillKeyword_0_0_15; }

		//"-fx-pie-stroke"
		public Keyword getPropertyFxPieStrokeKeyword_0_0_16() { return cPropertyFxPieStrokeKeyword_0_0_16; }

		//"-fx-pie-to-label-line-stroke"
		public Keyword getPropertyFxPieToLabelLineStrokeKeyword_0_0_17() { return cPropertyFxPieToLabelLineStrokeKeyword_0_0_17; }

		//"-fx-pie-value-label-fill"
		public Keyword getPropertyFxPieValueLabelFillKeyword_0_0_18() { return cPropertyFxPieValueLabelFillKeyword_0_0_18; }

		//"-fx-horizontal-alternate-row-fill"
		public Keyword getPropertyFxHorizontalAlternateRowFillKeyword_0_0_19() { return cPropertyFxHorizontalAlternateRowFillKeyword_0_0_19; }

		//"-fx-plot-background-fill"
		public Keyword getPropertyFxPlotBackgroundFillKeyword_0_0_20() { return cPropertyFxPlotBackgroundFillKeyword_0_0_20; }

		//"-fx-horizontal-grid-line-stroke"
		public Keyword getPropertyFxHorizontalGridLineStrokeKeyword_0_0_21() { return cPropertyFxHorizontalGridLineStrokeKeyword_0_0_21; }

		//"-fx-plot-background-stroke"
		public Keyword getPropertyFxPlotBackgroundStrokeKeyword_0_0_22() { return cPropertyFxPlotBackgroundStrokeKeyword_0_0_22; }

		//"-fx-vertical-alternate-row-fill"
		public Keyword getPropertyFxVerticalAlternateRowFillKeyword_0_0_23() { return cPropertyFxVerticalAlternateRowFillKeyword_0_0_23; }

		//"-fx-vertical-grid-line-stroke"
		public Keyword getPropertyFxVerticalGridLineStrokeKeyword_0_0_24() { return cPropertyFxVerticalGridLineStrokeKeyword_0_0_24; }

		//"-fx-axis-stroke"
		public Keyword getPropertyFxAxisStrokeKeyword_0_0_25() { return cPropertyFxAxisStrokeKeyword_0_0_25; }

		//"-fx-tick-label-fill"
		public Keyword getPropertyFxTickLabelFillKeyword_0_0_26() { return cPropertyFxTickLabelFillKeyword_0_0_26; }

		//"-fx-label-fill"
		public Keyword getPropertyFxLabelFillKeyword_0_0_27() { return cPropertyFxLabelFillKeyword_0_0_27; }

		//"-fx-tick-mark-stroke"
		public Keyword getPropertyFxTickMarkStrokeKeyword_0_0_28() { return cPropertyFxTickMarkStrokeKeyword_0_0_28; }

		//"-fx-hover-fill"
		public Keyword getPropertyFxHoverFillKeyword_0_0_29() { return cPropertyFxHoverFillKeyword_0_0_29; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=PaintValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//PaintValue
		public RuleCall getValuePaintValueParserRuleCall_2_0() { return cValuePaintValueParserRuleCall_2_0; }
	}

	public class PaintPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PaintProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBackgroundColorKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesPaintValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesPaintValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//PaintProperties:
		//	property="-fx-background-color" ":" values+=PaintValue ("," values+=PaintValue)*;
		public ParserRule getRule() { return rule; }

		//property="-fx-background-color" ":" values+=PaintValue ("," values+=PaintValue)*
		public Group getGroup() { return cGroup; }

		//property="-fx-background-color"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-color"
		public Keyword getPropertyFxBackgroundColorKeyword_0_0() { return cPropertyFxBackgroundColorKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=PaintValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//PaintValue
		public RuleCall getValuesPaintValueParserRuleCall_2_0() { return cValuesPaintValueParserRuleCall_2_0; }

		//("," values+=PaintValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=PaintValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//PaintValue
		public RuleCall getValuesPaintValueParserRuleCall_3_1_0() { return cValuesPaintValueParserRuleCall_3_1_0; }
	}

	public class BlendPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BlendProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBlendModeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueAddKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueBlueKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueColorBurnKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueColorDodgeKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		private final Keyword cValueDarkenKeyword_2_0_4 = (Keyword)cValueAlternatives_2_0.eContents().get(4);
		private final Keyword cValueDifferenceKeyword_2_0_5 = (Keyword)cValueAlternatives_2_0.eContents().get(5);
		private final Keyword cValueExclusionKeyword_2_0_6 = (Keyword)cValueAlternatives_2_0.eContents().get(6);
		private final Keyword cValueGreenKeyword_2_0_7 = (Keyword)cValueAlternatives_2_0.eContents().get(7);
		private final Keyword cValueHardLightKeyword_2_0_8 = (Keyword)cValueAlternatives_2_0.eContents().get(8);
		private final Keyword cValueLightenKeyword_2_0_9 = (Keyword)cValueAlternatives_2_0.eContents().get(9);
		private final Keyword cValueMultiplyKeyword_2_0_10 = (Keyword)cValueAlternatives_2_0.eContents().get(10);
		private final Keyword cValueOverlayKeyword_2_0_11 = (Keyword)cValueAlternatives_2_0.eContents().get(11);
		private final Keyword cValueRedKeyword_2_0_12 = (Keyword)cValueAlternatives_2_0.eContents().get(12);
		private final Keyword cValueScreenKeyword_2_0_13 = (Keyword)cValueAlternatives_2_0.eContents().get(13);
		private final Keyword cValueSoftLightKeyword_2_0_14 = (Keyword)cValueAlternatives_2_0.eContents().get(14);
		private final Keyword cValueSrcAtopKeyword_2_0_15 = (Keyword)cValueAlternatives_2_0.eContents().get(15);
		private final Keyword cValueSrcInKeyword_2_0_16 = (Keyword)cValueAlternatives_2_0.eContents().get(16);
		private final Keyword cValueSrcOutKeyword_2_0_17 = (Keyword)cValueAlternatives_2_0.eContents().get(17);
		private final Keyword cValueSrcOverKeyword_2_0_18 = (Keyword)cValueAlternatives_2_0.eContents().get(18);
		
		//BlendProperty:
		//	"-fx-blend-mode" ":" value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" |
		//	"green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in"
		//	| "src-out" | "src-over");
		public ParserRule getRule() { return rule; }

		//"-fx-blend-mode" ":" value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" |
		//"green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in" |
		//"src-out" | "src-over")
		public Group getGroup() { return cGroup; }

		//"-fx-blend-mode"
		public Keyword getFxBlendModeKeyword_0() { return cFxBlendModeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "green" | "hard-light" |
		//"lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in" | "src-out" | "src-over")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "green" | "hard-light" |
		//"lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in" | "src-out" | "src-over"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"add"
		public Keyword getValueAddKeyword_2_0_0() { return cValueAddKeyword_2_0_0; }

		//"blue"
		public Keyword getValueBlueKeyword_2_0_1() { return cValueBlueKeyword_2_0_1; }

		//"color-burn"
		public Keyword getValueColorBurnKeyword_2_0_2() { return cValueColorBurnKeyword_2_0_2; }

		//"color-dodge"
		public Keyword getValueColorDodgeKeyword_2_0_3() { return cValueColorDodgeKeyword_2_0_3; }

		//"darken"
		public Keyword getValueDarkenKeyword_2_0_4() { return cValueDarkenKeyword_2_0_4; }

		//"difference"
		public Keyword getValueDifferenceKeyword_2_0_5() { return cValueDifferenceKeyword_2_0_5; }

		//"exclusion"
		public Keyword getValueExclusionKeyword_2_0_6() { return cValueExclusionKeyword_2_0_6; }

		//"green"
		public Keyword getValueGreenKeyword_2_0_7() { return cValueGreenKeyword_2_0_7; }

		//"hard-light"
		public Keyword getValueHardLightKeyword_2_0_8() { return cValueHardLightKeyword_2_0_8; }

		//"lighten"
		public Keyword getValueLightenKeyword_2_0_9() { return cValueLightenKeyword_2_0_9; }

		//"multiply"
		public Keyword getValueMultiplyKeyword_2_0_10() { return cValueMultiplyKeyword_2_0_10; }

		//"overlay"
		public Keyword getValueOverlayKeyword_2_0_11() { return cValueOverlayKeyword_2_0_11; }

		//"red"
		public Keyword getValueRedKeyword_2_0_12() { return cValueRedKeyword_2_0_12; }

		//"screen"
		public Keyword getValueScreenKeyword_2_0_13() { return cValueScreenKeyword_2_0_13; }

		//"soft-light"
		public Keyword getValueSoftLightKeyword_2_0_14() { return cValueSoftLightKeyword_2_0_14; }

		//"src-atop"
		public Keyword getValueSrcAtopKeyword_2_0_15() { return cValueSrcAtopKeyword_2_0_15; }

		//"src-in"
		public Keyword getValueSrcInKeyword_2_0_16() { return cValueSrcInKeyword_2_0_16; }

		//"src-out"
		public Keyword getValueSrcOutKeyword_2_0_17() { return cValueSrcOutKeyword_2_0_17; }

		//"src-over"
		public Keyword getValueSrcOverKeyword_2_0_18() { return cValueSrcOverKeyword_2_0_18; }
	}

	public class UrlPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxImageKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxGraphicKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueUrlValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//UrlProperty:
		//	property=("-fx-image" | "-fx-graphic") ":" value=UrlValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-image" | "-fx-graphic") ":" value=UrlValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-image" | "-fx-graphic")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-image" | "-fx-graphic"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-image"
		public Keyword getPropertyFxImageKeyword_0_0_0() { return cPropertyFxImageKeyword_0_0_0; }

		//"-fx-graphic"
		public Keyword getPropertyFxGraphicKeyword_0_0_1() { return cPropertyFxGraphicKeyword_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=UrlValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//UrlValue
		public RuleCall getValueUrlValueParserRuleCall_2_0() { return cValueUrlValueParserRuleCall_2_0; }
	}

	public class MultiSizePropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiSizeProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundInsetsKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundRadiusKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxBorderInsetsKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxBorderRadiusKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxBorderWidthKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxBorderImageInsetsKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxBorderImageWidthKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesMultiSizeValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesMultiSizeValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//MultiSizeProperties:
		//	property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//	"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") ":" values+=MultiSizeValue (","
		//	values+=MultiSizeValue)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") ":" values+=MultiSizeValue (","
		//values+=MultiSizeValue)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" | "-fx-border-width" |
		//"-fx-border-image-insets" | "-fx-border-image-width"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-insets"
		public Keyword getPropertyFxBackgroundInsetsKeyword_0_0_0() { return cPropertyFxBackgroundInsetsKeyword_0_0_0; }

		//"-fx-background-radius"
		public Keyword getPropertyFxBackgroundRadiusKeyword_0_0_1() { return cPropertyFxBackgroundRadiusKeyword_0_0_1; }

		//"-fx-border-insets"
		public Keyword getPropertyFxBorderInsetsKeyword_0_0_2() { return cPropertyFxBorderInsetsKeyword_0_0_2; }

		//"-fx-border-radius"
		public Keyword getPropertyFxBorderRadiusKeyword_0_0_3() { return cPropertyFxBorderRadiusKeyword_0_0_3; }

		//"-fx-border-width"
		public Keyword getPropertyFxBorderWidthKeyword_0_0_4() { return cPropertyFxBorderWidthKeyword_0_0_4; }

		//"-fx-border-image-insets"
		public Keyword getPropertyFxBorderImageInsetsKeyword_0_0_5() { return cPropertyFxBorderImageInsetsKeyword_0_0_5; }

		//"-fx-border-image-width"
		public Keyword getPropertyFxBorderImageWidthKeyword_0_0_6() { return cPropertyFxBorderImageWidthKeyword_0_0_6; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=MultiSizeValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//MultiSizeValue
		public RuleCall getValuesMultiSizeValueParserRuleCall_2_0() { return cValuesMultiSizeValueParserRuleCall_2_0; }

		//("," values+=MultiSizeValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=MultiSizeValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//MultiSizeValue
		public RuleCall getValuesMultiSizeValueParserRuleCall_3_1_0() { return cValuesMultiSizeValueParserRuleCall_3_1_0; }
	}

	public class HPositionPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HPositionProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxHposKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxNodeHposKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxGraphicHposKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueHPositionValueEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//HPositionProperty:
		//	property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") ":" value=HPositionValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") ":" value=HPositionValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-hpos"
		public Keyword getPropertyFxHposKeyword_0_0_0() { return cPropertyFxHposKeyword_0_0_0; }

		//"-fx-node-hpos"
		public Keyword getPropertyFxNodeHposKeyword_0_0_1() { return cPropertyFxNodeHposKeyword_0_0_1; }

		//"-fx-graphic-hpos"
		public Keyword getPropertyFxGraphicHposKeyword_0_0_2() { return cPropertyFxGraphicHposKeyword_0_0_2; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=HPositionValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//HPositionValue
		public RuleCall getValueHPositionValueEnumRuleCall_2_0() { return cValueHPositionValueEnumRuleCall_2_0; }
	}

	public class VPositionPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VPositionProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxVposKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxNodeVposKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxGraphicVposKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueVPositionValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//VPositionProperty:
		//	property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") ":" value=VPositionValue;
		public ParserRule getRule() { return rule; }

		//property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") ":" value=VPositionValue
		public Group getGroup() { return cGroup; }

		//property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-vpos"
		public Keyword getPropertyFxVposKeyword_0_0_0() { return cPropertyFxVposKeyword_0_0_0; }

		//"-fx-node-vpos"
		public Keyword getPropertyFxNodeVposKeyword_0_0_1() { return cPropertyFxNodeVposKeyword_0_0_1; }

		//"-fx-graphic-vpos"
		public Keyword getPropertyFxGraphicVposKeyword_0_0_2() { return cPropertyFxGraphicVposKeyword_0_0_2; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=VPositionValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//VPositionValue
		public RuleCall getValueVPositionValueParserRuleCall_2_0() { return cValueVPositionValueParserRuleCall_2_0; }
	}

	public class SidePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SideProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxLegendSideKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleSideKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxSideKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueTopKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueBottomKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueLeftKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueRightKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		
		//SideProperty:
		//	property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") ":" value=("top" | "bottom" | "left" | "right");
		public ParserRule getRule() { return rule; }

		//property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") ":" value=("top" | "bottom" | "left" | "right")
		public Group getGroup() { return cGroup; }

		//property=("-fx-legend-side" | "-fx-title-side" | "-fx-side")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-legend-side" | "-fx-title-side" | "-fx-side"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-legend-side"
		public Keyword getPropertyFxLegendSideKeyword_0_0_0() { return cPropertyFxLegendSideKeyword_0_0_0; }

		//"-fx-title-side"
		public Keyword getPropertyFxTitleSideKeyword_0_0_1() { return cPropertyFxTitleSideKeyword_0_0_1; }

		//"-fx-side"
		public Keyword getPropertyFxSideKeyword_0_0_2() { return cPropertyFxSideKeyword_0_0_2; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("top" | "bottom" | "left" | "right")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"top" | "bottom" | "left" | "right"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"top"
		public Keyword getValueTopKeyword_2_0_0() { return cValueTopKeyword_2_0_0; }

		//"bottom"
		public Keyword getValueBottomKeyword_2_0_1() { return cValueBottomKeyword_2_0_1; }

		//"left"
		public Keyword getValueLeftKeyword_2_0_2() { return cValueLeftKeyword_2_0_2; }

		//"right"
		public Keyword getValueRightKeyword_2_0_3() { return cValueRightKeyword_2_0_3; }
	}

	public class BarPolicyPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BarPolicyProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxHbarPolicyKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxVbarPolicyKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueNeverKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueAlwaysKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueAs_neededKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//BarPolicyProperty:
		//	property=("-fx-hbar-policy" | "-fx-vbar-policy") ":" value=("never" | "always" | "as_needed");
		public ParserRule getRule() { return rule; }

		//property=("-fx-hbar-policy" | "-fx-vbar-policy") ":" value=("never" | "always" | "as_needed")
		public Group getGroup() { return cGroup; }

		//property=("-fx-hbar-policy" | "-fx-vbar-policy")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-hbar-policy" | "-fx-vbar-policy"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-hbar-policy"
		public Keyword getPropertyFxHbarPolicyKeyword_0_0_0() { return cPropertyFxHbarPolicyKeyword_0_0_0; }

		//"-fx-vbar-policy"
		public Keyword getPropertyFxVbarPolicyKeyword_0_0_1() { return cPropertyFxVbarPolicyKeyword_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("never" | "always" | "as_needed")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"never" | "always" | "as_needed"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"never"
		public Keyword getValueNeverKeyword_2_0_0() { return cValueNeverKeyword_2_0_0; }

		//"always"
		public Keyword getValueAlwaysKeyword_2_0_1() { return cValueAlwaysKeyword_2_0_1; }

		//"as_needed"
		public Keyword getValueAs_neededKeyword_2_0_2() { return cValueAs_neededKeyword_2_0_2; }
	}

	public class UrlPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImageKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBorderImageKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesUrlValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesUrlValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//UrlProperties:
		//	property=("-fx-background-image" | "-fx-border-image") ":" values+=UrlValue ("," values+=UrlValue)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-image" | "-fx-border-image") ":" values+=UrlValue ("," values+=UrlValue)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-image" | "-fx-border-image")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image" | "-fx-border-image"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-image"
		public Keyword getPropertyFxBackgroundImageKeyword_0_0_0() { return cPropertyFxBackgroundImageKeyword_0_0_0; }

		//"-fx-border-image"
		public Keyword getPropertyFxBorderImageKeyword_0_0_1() { return cPropertyFxBorderImageKeyword_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=UrlValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//UrlValue
		public RuleCall getValuesUrlValueParserRuleCall_2_0() { return cValuesUrlValueParserRuleCall_2_0; }

		//("," values+=UrlValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=UrlValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//UrlValue
		public RuleCall getValuesUrlValueParserRuleCall_3_1_0() { return cValuesUrlValueParserRuleCall_3_1_0; }
	}

	public class RepeatPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepeatProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImageRepeatKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBorderImageRepeatKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesRepeatStyleValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesRepeatStyleValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//RepeatProperties:
		//	property=("-fx-background-image-repeat" | "-fx-border-image-repeat") ":" values+=RepeatStyleValue (","
		//	values+=RepeatStyleValue)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-image-repeat" | "-fx-border-image-repeat") ":" values+=RepeatStyleValue (","
		//values+=RepeatStyleValue)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-image-repeat" | "-fx-border-image-repeat")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image-repeat" | "-fx-border-image-repeat"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-image-repeat"
		public Keyword getPropertyFxBackgroundImageRepeatKeyword_0_0_0() { return cPropertyFxBackgroundImageRepeatKeyword_0_0_0; }

		//"-fx-border-image-repeat"
		public Keyword getPropertyFxBorderImageRepeatKeyword_0_0_1() { return cPropertyFxBorderImageRepeatKeyword_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=RepeatStyleValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//RepeatStyleValue
		public RuleCall getValuesRepeatStyleValueParserRuleCall_2_0() { return cValuesRepeatStyleValueParserRuleCall_2_0; }

		//("," values+=RepeatStyleValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=RepeatStyleValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//RepeatStyleValue
		public RuleCall getValuesRepeatStyleValueParserRuleCall_3_1_0() { return cValuesRepeatStyleValueParserRuleCall_3_1_0; }
	}

	public class MultiSizePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiSizeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxPaddingKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueMultiSizeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MultiSizeProperty:
		//	property="-fx-padding" ":" value=MultiSizeValue;
		public ParserRule getRule() { return rule; }

		//property="-fx-padding" ":" value=MultiSizeValue
		public Group getGroup() { return cGroup; }

		//property="-fx-padding"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-padding"
		public Keyword getPropertyFxPaddingKeyword_0_0() { return cPropertyFxPaddingKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=MultiSizeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//MultiSizeValue
		public RuleCall getValueMultiSizeValueParserRuleCall_2_0() { return cValueMultiSizeValueParserRuleCall_2_0; }
	}

	public class SizePropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxStrokeDashArrayKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesSizeValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		
		//SizeProperties:
		//	property="-fx-stroke-dash-array" ":" values+=SizeValue+;
		public ParserRule getRule() { return rule; }

		//property="-fx-stroke-dash-array" ":" values+=SizeValue+
		public Group getGroup() { return cGroup; }

		//property="-fx-stroke-dash-array"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-stroke-dash-array"
		public Keyword getPropertyFxStrokeDashArrayKeyword_0_0() { return cPropertyFxStrokeDashArrayKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=SizeValue+
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_2_0() { return cValuesSizeValueParserRuleCall_2_0; }
	}

	public class StrokeLineCapPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StrokeLineCapProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxStrokeLineCapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueSquareKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueButtKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueRoundKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//StrokeLineCapProperty:
		//	"-fx-stroke-line-cap" ":" value=("square" | "butt" | "round");
		public ParserRule getRule() { return rule; }

		//"-fx-stroke-line-cap" ":" value=("square" | "butt" | "round")
		public Group getGroup() { return cGroup; }

		//"-fx-stroke-line-cap"
		public Keyword getFxStrokeLineCapKeyword_0() { return cFxStrokeLineCapKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("square" | "butt" | "round")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"square" | "butt" | "round"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"square"
		public Keyword getValueSquareKeyword_2_0_0() { return cValueSquareKeyword_2_0_0; }

		//"butt"
		public Keyword getValueButtKeyword_2_0_1() { return cValueButtKeyword_2_0_1; }

		//"round"
		public Keyword getValueRoundKeyword_2_0_2() { return cValueRoundKeyword_2_0_2; }
	}

	public class StrokeLineJoinPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StrokeLineJoinProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxStrokeLineJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueMiterKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueBevelKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueRoundKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//StrokeLineJoinProperty:
		//	"-fx-stroke-line-join" ":" value=("miter" | "bevel" | "round");
		public ParserRule getRule() { return rule; }

		//"-fx-stroke-line-join" ":" value=("miter" | "bevel" | "round")
		public Group getGroup() { return cGroup; }

		//"-fx-stroke-line-join"
		public Keyword getFxStrokeLineJoinKeyword_0() { return cFxStrokeLineJoinKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("miter" | "bevel" | "round")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"miter" | "bevel" | "round"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"miter"
		public Keyword getValueMiterKeyword_2_0_0() { return cValueMiterKeyword_2_0_0; }

		//"bevel"
		public Keyword getValueBevelKeyword_2_0_1() { return cValueBevelKeyword_2_0_1; }

		//"round"
		public Keyword getValueRoundKeyword_2_0_2() { return cValueRoundKeyword_2_0_2; }
	}

	public class TextAlignmentPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextAlignmentProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxTextAlignmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueLeftKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueCenterKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueRightKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueJustifyKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		
		//TextAlignmentProperty:
		//	"-fx-text-alignment" ":" value=("left" | "center" | "right" | "justify");
		public ParserRule getRule() { return rule; }

		//"-fx-text-alignment" ":" value=("left" | "center" | "right" | "justify")
		public Group getGroup() { return cGroup; }

		//"-fx-text-alignment"
		public Keyword getFxTextAlignmentKeyword_0() { return cFxTextAlignmentKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("left" | "center" | "right" | "justify")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"left" | "center" | "right" | "justify"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"left"
		public Keyword getValueLeftKeyword_2_0_0() { return cValueLeftKeyword_2_0_0; }

		//"center"
		public Keyword getValueCenterKeyword_2_0_1() { return cValueCenterKeyword_2_0_1; }

		//"right"
		public Keyword getValueRightKeyword_2_0_2() { return cValueRightKeyword_2_0_2; }

		//"justify"
		public Keyword getValueJustifyKeyword_2_0_3() { return cValueJustifyKeyword_2_0_3; }
	}

	public class TextOriginPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextOriginProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxTextOriginKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueBaselineKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueTopKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueBottomKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		
		//TextOriginProperty:
		//	"-fx-text-origin" ":" value=("baseline" | "top" | "bottom");
		public ParserRule getRule() { return rule; }

		//"-fx-text-origin" ":" value=("baseline" | "top" | "bottom")
		public Group getGroup() { return cGroup; }

		//"-fx-text-origin"
		public Keyword getFxTextOriginKeyword_0() { return cFxTextOriginKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("baseline" | "top" | "bottom")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"baseline" | "top" | "bottom"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"baseline"
		public Keyword getValueBaselineKeyword_2_0_0() { return cValueBaselineKeyword_2_0_0; }

		//"top"
		public Keyword getValueTopKeyword_2_0_1() { return cValueTopKeyword_2_0_1; }

		//"bottom"
		public Keyword getValueBottomKeyword_2_0_2() { return cValueBottomKeyword_2_0_2; }
	}

	public class BackgroundImagePositionPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BackgroundImagePositionProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBackgroundImagePositionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesBgPositionValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesBgPositionValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//BackgroundImagePositionProperty:
		//	"-fx-background-image-position" ":" values+=BgPositionValue ("," values+=BgPositionValue)*;
		public ParserRule getRule() { return rule; }

		//"-fx-background-image-position" ":" values+=BgPositionValue ("," values+=BgPositionValue)*
		public Group getGroup() { return cGroup; }

		//"-fx-background-image-position"
		public Keyword getFxBackgroundImagePositionKeyword_0() { return cFxBackgroundImagePositionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=BgPositionValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//BgPositionValue
		public RuleCall getValuesBgPositionValueParserRuleCall_2_0() { return cValuesBgPositionValueParserRuleCall_2_0; }

		//("," values+=BgPositionValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=BgPositionValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//BgPositionValue
		public RuleCall getValuesBgPositionValueParserRuleCall_3_1_0() { return cValuesBgPositionValueParserRuleCall_3_1_0; }
	}

	public class BackgroundImageSizePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BackgroundImageSizeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBackgroundImageSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesBgSizeValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesBgSizeValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//BackgroundImageSizeProperty:
		//	"-fx-background-image-size" ":" values+=BgSizeValue ("," values+=BgSizeValue)*;
		public ParserRule getRule() { return rule; }

		//"-fx-background-image-size" ":" values+=BgSizeValue ("," values+=BgSizeValue)*
		public Group getGroup() { return cGroup; }

		//"-fx-background-image-size"
		public Keyword getFxBackgroundImageSizeKeyword_0() { return cFxBackgroundImageSizeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=BgSizeValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//BgSizeValue
		public RuleCall getValuesBgSizeValueParserRuleCall_2_0() { return cValuesBgSizeValueParserRuleCall_2_0; }

		//("," values+=BgSizeValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=BgSizeValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//BgSizeValue
		public RuleCall getValuesBgSizeValueParserRuleCall_3_1_0() { return cValuesBgSizeValueParserRuleCall_3_1_0; }
	}

	public class BorderColorPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BorderColorProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBorderColorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesMultiPaintValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesMultiPaintValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//BorderColorProperty:
		//	"-fx-border-color" ":" values+=MultiPaintValue ("," values+=MultiPaintValue)*;
		public ParserRule getRule() { return rule; }

		//"-fx-border-color" ":" values+=MultiPaintValue ("," values+=MultiPaintValue)*
		public Group getGroup() { return cGroup; }

		//"-fx-border-color"
		public Keyword getFxBorderColorKeyword_0() { return cFxBorderColorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=MultiPaintValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//MultiPaintValue
		public RuleCall getValuesMultiPaintValueParserRuleCall_2_0() { return cValuesMultiPaintValueParserRuleCall_2_0; }

		//("," values+=MultiPaintValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=MultiPaintValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//MultiPaintValue
		public RuleCall getValuesMultiPaintValueParserRuleCall_3_1_0() { return cValuesMultiPaintValueParserRuleCall_3_1_0; }
	}

	public class BorderStylePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BorderStyleProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBorderStyleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesBorderStyleValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesBorderStyleValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//BorderStyleProperty:
		//	"-fx-border-style" ":" values+=BorderStyleValue ("," values+=BorderStyleValue)*;
		public ParserRule getRule() { return rule; }

		//"-fx-border-style" ":" values+=BorderStyleValue ("," values+=BorderStyleValue)*
		public Group getGroup() { return cGroup; }

		//"-fx-border-style"
		public Keyword getFxBorderStyleKeyword_0() { return cFxBorderStyleKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=BorderStyleValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//BorderStyleValue
		public RuleCall getValuesBorderStyleValueParserRuleCall_2_0() { return cValuesBorderStyleValueParserRuleCall_2_0; }

		//("," values+=BorderStyleValue)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=BorderStyleValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//BorderStyleValue
		public RuleCall getValuesBorderStyleValueParserRuleCall_3_1_0() { return cValuesBorderStyleValueParserRuleCall_3_1_0; }
	}

	public class BorderImageSlicePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BorderImageSliceProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxBorderImageSliceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesSizeFillParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesSizeFillParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		
		//BorderImageSliceProperty:
		//	"-fx-border-image-slice" ":" values+=SizeFill ("," values+=SizeFill)*;
		public ParserRule getRule() { return rule; }

		//"-fx-border-image-slice" ":" values+=SizeFill ("," values+=SizeFill)*
		public Group getGroup() { return cGroup; }

		//"-fx-border-image-slice"
		public Keyword getFxBorderImageSliceKeyword_0() { return cFxBorderImageSliceKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=SizeFill
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//SizeFill
		public RuleCall getValuesSizeFillParserRuleCall_2_0() { return cValuesSizeFillParserRuleCall_2_0; }

		//("," values+=SizeFill)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=SizeFill
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//SizeFill
		public RuleCall getValuesSizeFillParserRuleCall_3_1_0() { return cValuesSizeFillParserRuleCall_3_1_0; }
	}

	public class ShapePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShapeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxShapeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ShapeProperty:
		//	"-fx-shape" ":" value=STRING;
		public ParserRule getRule() { return rule; }

		//"-fx-shape" ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"-fx-shape"
		public Keyword getFxShapeKeyword_0() { return cFxShapeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class TextPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//TextProperty:
		//	"-fx-text" ":" value=STRING;
		public ParserRule getRule() { return rule; }

		//"-fx-text" ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"-fx-text"
		public Keyword getFxTextKeyword_0() { return cFxTextKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class TextOverrunPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextOverrunProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxTextOverrunKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueCenterEllipsesKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueCenterWordEllipsesKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueClipKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueEllipsesKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		private final Keyword cValueLeadingEllipsesKeyword_2_0_4 = (Keyword)cValueAlternatives_2_0.eContents().get(4);
		private final Keyword cValueLeadingWordEllipsesKeyword_2_0_5 = (Keyword)cValueAlternatives_2_0.eContents().get(5);
		private final Keyword cValueWordEllipsesKeyword_2_0_6 = (Keyword)cValueAlternatives_2_0.eContents().get(6);
		
		//TextOverrunProperty:
		//	"-fx-text-overrun" ":" value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" |
		//	"leading-word-ellipses" | "word-ellipses");
		public ParserRule getRule() { return rule; }

		//"-fx-text-overrun" ":" value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" |
		//"leading-word-ellipses" | "word-ellipses")
		public Group getGroup() { return cGroup; }

		//"-fx-text-overrun"
		public Keyword getFxTextOverrunKeyword_0() { return cFxTextOverrunKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" | "leading-word-ellipses" |
		//"word-ellipses")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" | "leading-word-ellipses" |
		//"word-ellipses"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"center-ellipses"
		public Keyword getValueCenterEllipsesKeyword_2_0_0() { return cValueCenterEllipsesKeyword_2_0_0; }

		//"center-word-ellipses"
		public Keyword getValueCenterWordEllipsesKeyword_2_0_1() { return cValueCenterWordEllipsesKeyword_2_0_1; }

		//"clip"
		public Keyword getValueClipKeyword_2_0_2() { return cValueClipKeyword_2_0_2; }

		//"ellipses"
		public Keyword getValueEllipsesKeyword_2_0_3() { return cValueEllipsesKeyword_2_0_3; }

		//"leading-ellipses"
		public Keyword getValueLeadingEllipsesKeyword_2_0_4() { return cValueLeadingEllipsesKeyword_2_0_4; }

		//"leading-word-ellipses"
		public Keyword getValueLeadingWordEllipsesKeyword_2_0_5() { return cValueLeadingWordEllipsesKeyword_2_0_5; }

		//"word-ellipses"
		public Keyword getValueWordEllipsesKeyword_2_0_6() { return cValueWordEllipsesKeyword_2_0_6; }
	}

	public class EchoCharPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EchoCharProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxEchoCharKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueIDTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EchoCharProperty:
		//	"-fx-echo-char" ":" value=ID;
		public ParserRule getRule() { return rule; }

		//"-fx-echo-char" ":" value=ID
		public Group getGroup() { return cGroup; }

		//"-fx-echo-char"
		public Keyword getFxEchoCharKeyword_0() { return cFxEchoCharKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=ID
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_2_0() { return cValueIDTerminalRuleCall_2_0; }
	}

	public class InsetsPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InsetsProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cFxInsetsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cValueNumberValueParserRuleCall_0_2_0 = (RuleCall)cValueAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cValueAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValueNumberValueParserRuleCall_1_0_0 = (RuleCall)cValueAssignment_1_0.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueNumberValueParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValueNumberValueParserRuleCall_1_2_0 = (RuleCall)cValueAssignment_1_2.eContents().get(0);
		private final Assignment cValueAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cValueNumberValueParserRuleCall_1_3_0 = (RuleCall)cValueAssignment_1_3.eContents().get(0);
		
		//InsetsProperty:
		//	"-fx-insets" ":" value+=NumberValue | value+=NumberValue value+=NumberValue value+=NumberValue value+=NumberValue;
		public ParserRule getRule() { return rule; }

		//"-fx-insets" ":" value+=NumberValue | value+=NumberValue value+=NumberValue value+=NumberValue value+=NumberValue
		public Alternatives getAlternatives() { return cAlternatives; }

		//"-fx-insets" ":" value+=NumberValue
		public Group getGroup_0() { return cGroup_0; }

		//"-fx-insets"
		public Keyword getFxInsetsKeyword_0_0() { return cFxInsetsKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//value+=NumberValue
		public Assignment getValueAssignment_0_2() { return cValueAssignment_0_2; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_0_2_0() { return cValueNumberValueParserRuleCall_0_2_0; }

		//value+=NumberValue value+=NumberValue value+=NumberValue value+=NumberValue
		public Group getGroup_1() { return cGroup_1; }

		//value+=NumberValue
		public Assignment getValueAssignment_1_0() { return cValueAssignment_1_0; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_1_0_0() { return cValueNumberValueParserRuleCall_1_0_0; }

		//value+=NumberValue
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_1_1_0() { return cValueNumberValueParserRuleCall_1_1_0; }

		//value+=NumberValue
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_1_2_0() { return cValueNumberValueParserRuleCall_1_2_0; }

		//value+=NumberValue
		public Assignment getValueAssignment_1_3() { return cValueAssignment_1_3; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_1_3_0() { return cValueNumberValueParserRuleCall_1_3_0; }
	}

	public class HorizontalGridLineStrokeDashArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HorizontalGridLineStrokeDashArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxHorizontalGridLineStrokeDashArrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueNumberValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//HorizontalGridLineStrokeDashArrayProperty:
		//	"-fx-horizontal-grid-line-stroke-dash-array" ":" value+=NumberValue+;
		public ParserRule getRule() { return rule; }

		//"-fx-horizontal-grid-line-stroke-dash-array" ":" value+=NumberValue+
		public Group getGroup() { return cGroup; }

		//"-fx-horizontal-grid-line-stroke-dash-array"
		public Keyword getFxHorizontalGridLineStrokeDashArrayKeyword_0() { return cFxHorizontalGridLineStrokeDashArrayKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value+=NumberValue+
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_2_0() { return cValueNumberValueParserRuleCall_2_0; }
	}

	public class VerticalGridLineStrokeDashArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerticalGridLineStrokeDashArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxVerticalGridLineStrokeDashArrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesNumberValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesNumberValueParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		
		//VerticalGridLineStrokeDashArrayProperty:
		//	"-fx-vertical-grid-line-stroke-dash-array" ":" values+=NumberValue values+=NumberValue+;
		public ParserRule getRule() { return rule; }

		//"-fx-vertical-grid-line-stroke-dash-array" ":" values+=NumberValue values+=NumberValue+
		public Group getGroup() { return cGroup; }

		//"-fx-vertical-grid-line-stroke-dash-array"
		public Keyword getFxVerticalGridLineStrokeDashArrayKeyword_0() { return cFxVerticalGridLineStrokeDashArrayKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//values+=NumberValue
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//NumberValue
		public RuleCall getValuesNumberValueParserRuleCall_2_0() { return cValuesNumberValueParserRuleCall_2_0; }

		//values+=NumberValue+
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//NumberValue
		public RuleCall getValuesNumberValueParserRuleCall_3_0() { return cValuesNumberValueParserRuleCall_3_0; }
	}

	public class VPositionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VPositionValue");
		private final Assignment cVAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cVAlternatives_0 = (Alternatives)cVAssignment.eContents().get(0);
		private final Keyword cVTopKeyword_0_0 = (Keyword)cVAlternatives_0.eContents().get(0);
		private final Keyword cVCenterKeyword_0_1 = (Keyword)cVAlternatives_0.eContents().get(1);
		private final Keyword cVBaselineKeyword_0_2 = (Keyword)cVAlternatives_0.eContents().get(2);
		private final Keyword cVBottomKeyword_0_3 = (Keyword)cVAlternatives_0.eContents().get(3);
		private final Keyword cVPageEndKeyword_0_4 = (Keyword)cVAlternatives_0.eContents().get(4);
		private final Keyword cVPageStartKeyword_0_5 = (Keyword)cVAlternatives_0.eContents().get(5);
		
		//VPositionValue:
		//	v=("top" | "center" | "baseline" | "bottom" | "page-end" | "page-start");
		public ParserRule getRule() { return rule; }

		//v=("top" | "center" | "baseline" | "bottom" | "page-end" | "page-start")
		public Assignment getVAssignment() { return cVAssignment; }

		//"top" | "center" | "baseline" | "bottom" | "page-end" | "page-start"
		public Alternatives getVAlternatives_0() { return cVAlternatives_0; }

		//"top"
		public Keyword getVTopKeyword_0_0() { return cVTopKeyword_0_0; }

		//"center"
		public Keyword getVCenterKeyword_0_1() { return cVCenterKeyword_0_1; }

		//"baseline"
		public Keyword getVBaselineKeyword_0_2() { return cVBaselineKeyword_0_2; }

		//"bottom"
		public Keyword getVBottomKeyword_0_3() { return cVBottomKeyword_0_3; }

		//"page-end"
		public Keyword getVPageEndKeyword_0_4() { return cVPageEndKeyword_0_4; }

		//"page-start"
		public Keyword getVPageStartKeyword_0_5() { return cVPageStartKeyword_0_5; }
	}

	public class BlurValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BlurValue");
		private final Assignment cVAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cVAlternatives_0 = (Alternatives)cVAssignment.eContents().get(0);
		private final Keyword cVGaussianKeyword_0_0 = (Keyword)cVAlternatives_0.eContents().get(0);
		private final Keyword cVOnePassBoxKeyword_0_1 = (Keyword)cVAlternatives_0.eContents().get(1);
		private final Keyword cVThreePassBoxKeyword_0_2 = (Keyword)cVAlternatives_0.eContents().get(2);
		private final Keyword cVTwoPassBoxKeyword_0_3 = (Keyword)cVAlternatives_0.eContents().get(3);
		
		//BlurValue:
		//	v=("gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box");
		public ParserRule getRule() { return rule; }

		//v=("gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box")
		public Assignment getVAssignment() { return cVAssignment; }

		//"gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box"
		public Alternatives getVAlternatives_0() { return cVAlternatives_0; }

		//"gaussian"
		public Keyword getVGaussianKeyword_0_0() { return cVGaussianKeyword_0_0; }

		//"one-pass-box"
		public Keyword getVOnePassBoxKeyword_0_1() { return cVOnePassBoxKeyword_0_1; }

		//"three-pass-box"
		public Keyword getVThreePassBoxKeyword_0_2() { return cVThreePassBoxKeyword_0_2; }

		//"two-pass-box"
		public Keyword getVTwoPassBoxKeyword_0_3() { return cVTwoPassBoxKeyword_0_3; }
	}

	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberValue");
		private final RuleCall cIntegerValueParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NumberValue: //| RealValue
		//	IntegerValue;
		public ParserRule getRule() { return rule; }

		////| RealValue
		//IntegerValue
		public RuleCall getIntegerValueParserRuleCall() { return cIntegerValueParserRuleCall; }
	}

	public class IntegerValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntegerValue:
		//	value=INT;
		public ParserRule getRule() { return rule; }

		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}

	public class UrlValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAddressAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAddressAddressValueParserRuleCall_1_0 = (RuleCall)cAddressAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		////RealValue:
		////	value=INT
		////;
		//UrlValue:
		//	"url(" address=AddressValue ")";
		public ParserRule getRule() { return rule; }

		//"url(" address=AddressValue ")"
		public Group getGroup() { return cGroup; }

		//"url("
		public Keyword getUrlKeyword_0() { return cUrlKeyword_0; }

		//address=AddressValue
		public Assignment getAddressAssignment_1() { return cAddressAssignment_1; }

		//AddressValue
		public RuleCall getAddressAddressValueParserRuleCall_1_0() { return cAddressAddressValueParserRuleCall_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class AddressValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AddressValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//AddressValue:
		//	value=STRING;
		public ParserRule getRule() { return rule; }

		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}

	public class SizeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueNumberValueParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cDimensionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cDimensionAlternatives_1_0 = (Alternatives)cDimensionAssignment_1.eContents().get(0);
		private final Keyword cDimensionPercentSignKeyword_1_0_0 = (Keyword)cDimensionAlternatives_1_0.eContents().get(0);
		private final Keyword cDimensionPxKeyword_1_0_1 = (Keyword)cDimensionAlternatives_1_0.eContents().get(1);
		private final Keyword cDimensionMmKeyword_1_0_2 = (Keyword)cDimensionAlternatives_1_0.eContents().get(2);
		private final Keyword cDimensionCmKeyword_1_0_3 = (Keyword)cDimensionAlternatives_1_0.eContents().get(3);
		private final Keyword cDimensionInKeyword_1_0_4 = (Keyword)cDimensionAlternatives_1_0.eContents().get(4);
		private final Keyword cDimensionPtKeyword_1_0_5 = (Keyword)cDimensionAlternatives_1_0.eContents().get(5);
		private final Keyword cDimensionPcKeyword_1_0_6 = (Keyword)cDimensionAlternatives_1_0.eContents().get(6);
		private final Keyword cDimensionEmKeyword_1_0_7 = (Keyword)cDimensionAlternatives_1_0.eContents().get(7);
		private final Keyword cDimensionExKeyword_1_0_8 = (Keyword)cDimensionAlternatives_1_0.eContents().get(8);
		
		//SizeValue:
		//	value=NumberValue dimension=("%" | "px" | "mm" | "cm" | "in" | "pt" | "pc" | "em" | "ex")?;
		public ParserRule getRule() { return rule; }

		//value=NumberValue dimension=("%" | "px" | "mm" | "cm" | "in" | "pt" | "pc" | "em" | "ex")?
		public Group getGroup() { return cGroup; }

		//value=NumberValue
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//NumberValue
		public RuleCall getValueNumberValueParserRuleCall_0_0() { return cValueNumberValueParserRuleCall_0_0; }

		//dimension=("%" | "px" | "mm" | "cm" | "in" | "pt" | "pc" | "em" | "ex")?
		public Assignment getDimensionAssignment_1() { return cDimensionAssignment_1; }

		//"%" | "px" | "mm" | "cm" | "in" | "pt" | "pc" | "em" | "ex"
		public Alternatives getDimensionAlternatives_1_0() { return cDimensionAlternatives_1_0; }

		//"%"
		public Keyword getDimensionPercentSignKeyword_1_0_0() { return cDimensionPercentSignKeyword_1_0_0; }

		//"px"
		public Keyword getDimensionPxKeyword_1_0_1() { return cDimensionPxKeyword_1_0_1; }

		//"mm"
		public Keyword getDimensionMmKeyword_1_0_2() { return cDimensionMmKeyword_1_0_2; }

		//"cm"
		public Keyword getDimensionCmKeyword_1_0_3() { return cDimensionCmKeyword_1_0_3; }

		//"in"
		public Keyword getDimensionInKeyword_1_0_4() { return cDimensionInKeyword_1_0_4; }

		//"pt"
		public Keyword getDimensionPtKeyword_1_0_5() { return cDimensionPtKeyword_1_0_5; }

		//"pc"
		public Keyword getDimensionPcKeyword_1_0_6() { return cDimensionPcKeyword_1_0_6; }

		//"em"
		public Keyword getDimensionEmKeyword_1_0_7() { return cDimensionEmKeyword_1_0_7; }

		//"ex"
		public Keyword getDimensionExKeyword_1_0_8() { return cDimensionExKeyword_1_0_8; }
	}

	public class MultiSizeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiSizeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValuesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValuesSizeValueParserRuleCall_0_0 = (RuleCall)cValuesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cValuesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValuesSizeValueParserRuleCall_1_0_0 = (RuleCall)cValuesAssignment_1_0.eContents().get(0);
		private final Assignment cValuesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValuesSizeValueParserRuleCall_1_1_0 = (RuleCall)cValuesAssignment_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValuesSizeValueParserRuleCall_1_2_0 = (RuleCall)cValuesAssignment_1_2.eContents().get(0);
		private final Assignment cValuesAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cValuesSizeValueParserRuleCall_1_3_0 = (RuleCall)cValuesAssignment_1_3.eContents().get(0);
		
		//MultiSizeValue:
		//	values+=SizeValue | values+=SizeValue values+=SizeValue values+=SizeValue values+=SizeValue;
		public ParserRule getRule() { return rule; }

		//values+=SizeValue | values+=SizeValue values+=SizeValue values+=SizeValue values+=SizeValue
		public Alternatives getAlternatives() { return cAlternatives; }

		//values+=SizeValue
		public Assignment getValuesAssignment_0() { return cValuesAssignment_0; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_0_0() { return cValuesSizeValueParserRuleCall_0_0; }

		//values+=SizeValue values+=SizeValue values+=SizeValue values+=SizeValue
		public Group getGroup_1() { return cGroup_1; }

		//values+=SizeValue
		public Assignment getValuesAssignment_1_0() { return cValuesAssignment_1_0; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_1_0_0() { return cValuesSizeValueParserRuleCall_1_0_0; }

		//values+=SizeValue
		public Assignment getValuesAssignment_1_1() { return cValuesAssignment_1_1; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_1_1_0() { return cValuesSizeValueParserRuleCall_1_1_0; }

		//values+=SizeValue
		public Assignment getValuesAssignment_1_2() { return cValuesAssignment_1_2; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_1_2_0() { return cValuesSizeValueParserRuleCall_1_2_0; }

		//values+=SizeValue
		public Assignment getValuesAssignment_1_3() { return cValuesAssignment_1_3; }

		//SizeValue
		public RuleCall getValuesSizeValueParserRuleCall_1_3_0() { return cValuesSizeValueParserRuleCall_1_3_0; }
	}

	public class BgPositionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BgPositionValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cAbsxAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cAbsxSizeValueParserRuleCall_0_0_0 = (RuleCall)cAbsxAssignment_0_0.eContents().get(0);
		private final Assignment cRelxAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Alternatives cRelxAlternatives_0_1_0 = (Alternatives)cRelxAssignment_0_1.eContents().get(0);
		private final Keyword cRelxLeftKeyword_0_1_0_0 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(0);
		private final Keyword cRelxCenterKeyword_0_1_0_1 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(1);
		private final Keyword cRelxRightKeyword_0_1_0_2 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cAbsyAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cAbsySizeValueParserRuleCall_1_0_0 = (RuleCall)cAbsyAssignment_1_0.eContents().get(0);
		private final Assignment cRelyAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Alternatives cRelyAlternatives_1_1_0 = (Alternatives)cRelyAssignment_1_1.eContents().get(0);
		private final Keyword cRelyTopKeyword_1_1_0_0 = (Keyword)cRelyAlternatives_1_1_0.eContents().get(0);
		private final Keyword cRelyCenterKeyword_1_1_0_1 = (Keyword)cRelyAlternatives_1_1_0.eContents().get(1);
		private final Keyword cRelyBottomKeyword_1_1_0_2 = (Keyword)cRelyAlternatives_1_1_0.eContents().get(2);
		
		////	|
		////	(
		////		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
		////	)
		//BgPositionValue:
		//	(absx=SizeValue | relx=("left" | "center" | "right")) (absy=SizeValue | rely=("top" | "center" | "bottom"));
		public ParserRule getRule() { return rule; }

		//(absx=SizeValue | relx=("left" | "center" | "right")) (absy=SizeValue | rely=("top" | "center" | "bottom"))
		public Group getGroup() { return cGroup; }

		//absx=SizeValue | relx=("left" | "center" | "right")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//absx=SizeValue
		public Assignment getAbsxAssignment_0_0() { return cAbsxAssignment_0_0; }

		//SizeValue
		public RuleCall getAbsxSizeValueParserRuleCall_0_0_0() { return cAbsxSizeValueParserRuleCall_0_0_0; }

		//relx=("left" | "center" | "right")
		public Assignment getRelxAssignment_0_1() { return cRelxAssignment_0_1; }

		//"left" | "center" | "right"
		public Alternatives getRelxAlternatives_0_1_0() { return cRelxAlternatives_0_1_0; }

		//"left"
		public Keyword getRelxLeftKeyword_0_1_0_0() { return cRelxLeftKeyword_0_1_0_0; }

		//"center"
		public Keyword getRelxCenterKeyword_0_1_0_1() { return cRelxCenterKeyword_0_1_0_1; }

		//"right"
		public Keyword getRelxRightKeyword_0_1_0_2() { return cRelxRightKeyword_0_1_0_2; }

		//absy=SizeValue | rely=("top" | "center" | "bottom")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//absy=SizeValue
		public Assignment getAbsyAssignment_1_0() { return cAbsyAssignment_1_0; }

		//SizeValue
		public RuleCall getAbsySizeValueParserRuleCall_1_0_0() { return cAbsySizeValueParserRuleCall_1_0_0; }

		//rely=("top" | "center" | "bottom")
		public Assignment getRelyAssignment_1_1() { return cRelyAssignment_1_1; }

		//"top" | "center" | "bottom"
		public Alternatives getRelyAlternatives_1_1_0() { return cRelyAlternatives_1_1_0; }

		//"top"
		public Keyword getRelyTopKeyword_1_1_0_0() { return cRelyTopKeyword_1_1_0_0; }

		//"center"
		public Keyword getRelyCenterKeyword_1_1_0_1() { return cRelyCenterKeyword_1_1_0_1; }

		//"bottom"
		public Keyword getRelyBottomKeyword_1_1_0_2() { return cRelyBottomKeyword_1_1_0_2; }
	}

	public class RepeatStyleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepeatStyleValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cVAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Alternatives cVAlternatives_0_0 = (Alternatives)cVAssignment_0.eContents().get(0);
		private final Keyword cVRepeatXKeyword_0_0_0 = (Keyword)cVAlternatives_0_0.eContents().get(0);
		private final Keyword cVRepeatYKeyword_0_0_1 = (Keyword)cVAlternatives_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cVAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Alternatives cVAlternatives_1_0_0 = (Alternatives)cVAssignment_1_0.eContents().get(0);
		private final Keyword cVRepeatKeyword_1_0_0_0 = (Keyword)cVAlternatives_1_0_0.eContents().get(0);
		private final Keyword cVSpaceKeyword_1_0_0_1 = (Keyword)cVAlternatives_1_0_0.eContents().get(1);
		private final Keyword cVRoundKeyword_1_0_0_2 = (Keyword)cVAlternatives_1_0_0.eContents().get(2);
		private final Keyword cVNoRepeatKeyword_1_0_0_3 = (Keyword)cVAlternatives_1_0_0.eContents().get(3);
		private final Assignment cV2Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cV2Alternatives_1_1_0 = (Alternatives)cV2Assignment_1_1.eContents().get(0);
		private final Keyword cV2RepeatKeyword_1_1_0_0 = (Keyword)cV2Alternatives_1_1_0.eContents().get(0);
		private final Keyword cV2SpaceKeyword_1_1_0_1 = (Keyword)cV2Alternatives_1_1_0.eContents().get(1);
		private final Keyword cV2RoundKeyword_1_1_0_2 = (Keyword)cV2Alternatives_1_1_0.eContents().get(2);
		private final Keyword cV2NoRepeatKeyword_1_1_0_3 = (Keyword)cV2Alternatives_1_1_0.eContents().get(3);
		
		//RepeatStyleValue:
		//	v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat") v2=("repeat" | "space" | "round" |
		//	"no-repeat")?;
		public ParserRule getRule() { return rule; }

		//v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat") v2=("repeat" | "space" | "round" |
		//"no-repeat")?
		public Alternatives getAlternatives() { return cAlternatives; }

		//v=("repeat-x" | "repeat-y")
		public Assignment getVAssignment_0() { return cVAssignment_0; }

		//"repeat-x" | "repeat-y"
		public Alternatives getVAlternatives_0_0() { return cVAlternatives_0_0; }

		//"repeat-x"
		public Keyword getVRepeatXKeyword_0_0_0() { return cVRepeatXKeyword_0_0_0; }

		//"repeat-y"
		public Keyword getVRepeatYKeyword_0_0_1() { return cVRepeatYKeyword_0_0_1; }

		//v=("repeat" | "space" | "round" | "no-repeat") v2=("repeat" | "space" | "round" | "no-repeat")?
		public Group getGroup_1() { return cGroup_1; }

		//v=("repeat" | "space" | "round" | "no-repeat")
		public Assignment getVAssignment_1_0() { return cVAssignment_1_0; }

		//"repeat" | "space" | "round" | "no-repeat"
		public Alternatives getVAlternatives_1_0_0() { return cVAlternatives_1_0_0; }

		//"repeat"
		public Keyword getVRepeatKeyword_1_0_0_0() { return cVRepeatKeyword_1_0_0_0; }

		//"space"
		public Keyword getVSpaceKeyword_1_0_0_1() { return cVSpaceKeyword_1_0_0_1; }

		//"round"
		public Keyword getVRoundKeyword_1_0_0_2() { return cVRoundKeyword_1_0_0_2; }

		//"no-repeat"
		public Keyword getVNoRepeatKeyword_1_0_0_3() { return cVNoRepeatKeyword_1_0_0_3; }

		//v2=("repeat" | "space" | "round" | "no-repeat")?
		public Assignment getV2Assignment_1_1() { return cV2Assignment_1_1; }

		//"repeat" | "space" | "round" | "no-repeat"
		public Alternatives getV2Alternatives_1_1_0() { return cV2Alternatives_1_1_0; }

		//"repeat"
		public Keyword getV2RepeatKeyword_1_1_0_0() { return cV2RepeatKeyword_1_1_0_0; }

		//"space"
		public Keyword getV2SpaceKeyword_1_1_0_1() { return cV2SpaceKeyword_1_1_0_1; }

		//"round"
		public Keyword getV2RoundKeyword_1_1_0_2() { return cV2RoundKeyword_1_1_0_2; }

		//"no-repeat"
		public Keyword getV2NoRepeatKeyword_1_1_0_3() { return cV2NoRepeatKeyword_1_1_0_3; }
	}

	public class BgSizeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BgSizeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Assignment cXsizeAssignment_0_0_0 = (Assignment)cAlternatives_0_0.eContents().get(0);
		private final RuleCall cXsizeSizeValueParserRuleCall_0_0_0_0 = (RuleCall)cXsizeAssignment_0_0_0.eContents().get(0);
		private final Assignment cXautoAssignment_0_0_1 = (Assignment)cAlternatives_0_0.eContents().get(1);
		private final Keyword cXautoAutoKeyword_0_0_1_0 = (Keyword)cXautoAssignment_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Assignment cYsizeAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cYsizeSizeValueParserRuleCall_0_1_0_0 = (RuleCall)cYsizeAssignment_0_1_0.eContents().get(0);
		private final Assignment cYautoAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final Keyword cYautoAutoKeyword_0_1_1_0 = (Keyword)cYautoAssignment_0_1_1.eContents().get(0);
		private final Assignment cPredefinedAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Alternatives cPredefinedAlternatives_1_0 = (Alternatives)cPredefinedAssignment_1.eContents().get(0);
		private final Keyword cPredefinedCoverKeyword_1_0_0 = (Keyword)cPredefinedAlternatives_1_0.eContents().get(0);
		private final Keyword cPredefinedContainKeyword_1_0_1 = (Keyword)cPredefinedAlternatives_1_0.eContents().get(1);
		
		//BgSizeValue:
		//	(xsize=SizeValue | xauto="auto") (ysize=SizeValue | yauto="auto")? | predefined=("cover" | "contain");
		public ParserRule getRule() { return rule; }

		//(xsize=SizeValue | xauto="auto") (ysize=SizeValue | yauto="auto")? | predefined=("cover" | "contain")
		public Alternatives getAlternatives() { return cAlternatives; }

		//(xsize=SizeValue | xauto="auto") (ysize=SizeValue | yauto="auto")?
		public Group getGroup_0() { return cGroup_0; }

		//xsize=SizeValue | xauto="auto"
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//xsize=SizeValue
		public Assignment getXsizeAssignment_0_0_0() { return cXsizeAssignment_0_0_0; }

		//SizeValue
		public RuleCall getXsizeSizeValueParserRuleCall_0_0_0_0() { return cXsizeSizeValueParserRuleCall_0_0_0_0; }

		//xauto="auto"
		public Assignment getXautoAssignment_0_0_1() { return cXautoAssignment_0_0_1; }

		//"auto"
		public Keyword getXautoAutoKeyword_0_0_1_0() { return cXautoAutoKeyword_0_0_1_0; }

		//(ysize=SizeValue | yauto="auto")?
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//ysize=SizeValue
		public Assignment getYsizeAssignment_0_1_0() { return cYsizeAssignment_0_1_0; }

		//SizeValue
		public RuleCall getYsizeSizeValueParserRuleCall_0_1_0_0() { return cYsizeSizeValueParserRuleCall_0_1_0_0; }

		//yauto="auto"
		public Assignment getYautoAssignment_0_1_1() { return cYautoAssignment_0_1_1; }

		//"auto"
		public Keyword getYautoAutoKeyword_0_1_1_0() { return cYautoAutoKeyword_0_1_1_0; }

		//predefined=("cover" | "contain")
		public Assignment getPredefinedAssignment_1() { return cPredefinedAssignment_1; }

		//"cover" | "contain"
		public Alternatives getPredefinedAlternatives_1_0() { return cPredefinedAlternatives_1_0; }

		//"cover"
		public Keyword getPredefinedCoverKeyword_1_0_0() { return cPredefinedCoverKeyword_1_0_0; }

		//"contain"
		public Keyword getPredefinedContainKeyword_1_0_1() { return cPredefinedContainKeyword_1_0_1; }
	}

	public class MultiPaintValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiPaintValue");
		private final Assignment cValuesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValuesPaintValueParserRuleCall_0 = (RuleCall)cValuesAssignment.eContents().get(0);
		
		//// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
		//// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
		//// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
		//MultiPaintValue:
		//	values+=PaintValue+;
		public ParserRule getRule() { return rule; }

		//values+=PaintValue+
		public Assignment getValuesAssignment() { return cValuesAssignment; }

		//PaintValue
		public RuleCall getValuesPaintValueParserRuleCall_0() { return cValuesPaintValueParserRuleCall_0; }
	}

	public class BorderStyleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BorderStyleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDashStyleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDashStyleDashStyleValueParserRuleCall_0_0 = (RuleCall)cDashStyleAssignment_0.eContents().get(0);
		private final Assignment cLocationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cLocationAlternatives_1_0 = (Alternatives)cLocationAssignment_1.eContents().get(0);
		private final Keyword cLocationCenteredKeyword_1_0_0 = (Keyword)cLocationAlternatives_1_0.eContents().get(0);
		private final Keyword cLocationInsideKeyword_1_0_1 = (Keyword)cLocationAlternatives_1_0.eContents().get(1);
		private final Keyword cLocationOutsideKeyword_1_0_2 = (Keyword)cLocationAlternatives_1_0.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLineJoinKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cAlternatives_2_1.eContents().get(0);
		private final Keyword cMiterKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cMiterAbsAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cMiterAbsNumberValueParserRuleCall_2_1_0_1_0 = (RuleCall)cMiterAbsAssignment_2_1_0_1.eContents().get(0);
		private final Assignment cMiterPredefinedAssignment_2_1_1 = (Assignment)cAlternatives_2_1.eContents().get(1);
		private final Alternatives cMiterPredefinedAlternatives_2_1_1_0 = (Alternatives)cMiterPredefinedAssignment_2_1_1.eContents().get(0);
		private final Keyword cMiterPredefinedBevelKeyword_2_1_1_0_0 = (Keyword)cMiterPredefinedAlternatives_2_1_1_0.eContents().get(0);
		private final Keyword cMiterPredefinedRoundKeyword_2_1_1_0_1 = (Keyword)cMiterPredefinedAlternatives_2_1_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLineCapKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLineCapAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cLineCapAlternatives_3_1_0 = (Alternatives)cLineCapAssignment_3_1.eContents().get(0);
		private final Keyword cLineCapSquareKeyword_3_1_0_0 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(0);
		private final Keyword cLineCapButtKeyword_3_1_0_1 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(1);
		private final Keyword cLineCapRoundKeyword_3_1_0_2 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(2);
		
		//BorderStyleValue:
		//	dashStyle=DashStyleValue location=("centered" | "inside" | "outside")? ("line-join" ("miter" miterAbs=NumberValue |
		//	miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?;
		public ParserRule getRule() { return rule; }

		//dashStyle=DashStyleValue location=("centered" | "inside" | "outside")? ("line-join" ("miter" miterAbs=NumberValue |
		//miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?
		public Group getGroup() { return cGroup; }

		//dashStyle=DashStyleValue
		public Assignment getDashStyleAssignment_0() { return cDashStyleAssignment_0; }

		//DashStyleValue
		public RuleCall getDashStyleDashStyleValueParserRuleCall_0_0() { return cDashStyleDashStyleValueParserRuleCall_0_0; }

		//location=("centered" | "inside" | "outside")?
		public Assignment getLocationAssignment_1() { return cLocationAssignment_1; }

		//"centered" | "inside" | "outside"
		public Alternatives getLocationAlternatives_1_0() { return cLocationAlternatives_1_0; }

		//"centered"
		public Keyword getLocationCenteredKeyword_1_0_0() { return cLocationCenteredKeyword_1_0_0; }

		//"inside"
		public Keyword getLocationInsideKeyword_1_0_1() { return cLocationInsideKeyword_1_0_1; }

		//"outside"
		public Keyword getLocationOutsideKeyword_1_0_2() { return cLocationOutsideKeyword_1_0_2; }

		//("line-join" ("miter" miterAbs=NumberValue | miterPredefined=("bevel" | "round")))?
		public Group getGroup_2() { return cGroup_2; }

		//"line-join"
		public Keyword getLineJoinKeyword_2_0() { return cLineJoinKeyword_2_0; }

		//"miter" miterAbs=NumberValue | miterPredefined=("bevel" | "round")
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//"miter" miterAbs=NumberValue
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"miter"
		public Keyword getMiterKeyword_2_1_0_0() { return cMiterKeyword_2_1_0_0; }

		//miterAbs=NumberValue
		public Assignment getMiterAbsAssignment_2_1_0_1() { return cMiterAbsAssignment_2_1_0_1; }

		//NumberValue
		public RuleCall getMiterAbsNumberValueParserRuleCall_2_1_0_1_0() { return cMiterAbsNumberValueParserRuleCall_2_1_0_1_0; }

		//miterPredefined=("bevel" | "round")
		public Assignment getMiterPredefinedAssignment_2_1_1() { return cMiterPredefinedAssignment_2_1_1; }

		//"bevel" | "round"
		public Alternatives getMiterPredefinedAlternatives_2_1_1_0() { return cMiterPredefinedAlternatives_2_1_1_0; }

		//"bevel"
		public Keyword getMiterPredefinedBevelKeyword_2_1_1_0_0() { return cMiterPredefinedBevelKeyword_2_1_1_0_0; }

		//"round"
		public Keyword getMiterPredefinedRoundKeyword_2_1_1_0_1() { return cMiterPredefinedRoundKeyword_2_1_1_0_1; }

		//("line-cap" lineCap=("square" | "butt" | "round"))?
		public Group getGroup_3() { return cGroup_3; }

		//"line-cap"
		public Keyword getLineCapKeyword_3_0() { return cLineCapKeyword_3_0; }

		//lineCap=("square" | "butt" | "round")
		public Assignment getLineCapAssignment_3_1() { return cLineCapAssignment_3_1; }

		//"square" | "butt" | "round"
		public Alternatives getLineCapAlternatives_3_1_0() { return cLineCapAlternatives_3_1_0; }

		//"square"
		public Keyword getLineCapSquareKeyword_3_1_0_0() { return cLineCapSquareKeyword_3_1_0_0; }

		//"butt"
		public Keyword getLineCapButtKeyword_3_1_0_1() { return cLineCapButtKeyword_3_1_0_1; }

		//"round"
		public Keyword getLineCapRoundKeyword_3_1_0_2() { return cLineCapRoundKeyword_3_1_0_2; }
	}

	public class DashStyleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DashStyleValue");
		private final Assignment cVAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cVAlternatives_0 = (Alternatives)cVAssignment.eContents().get(0);
		private final Keyword cVNoneKeyword_0_0 = (Keyword)cVAlternatives_0.eContents().get(0);
		private final Keyword cVSolidKeyword_0_1 = (Keyword)cVAlternatives_0.eContents().get(1);
		private final Keyword cVDottedKeyword_0_2 = (Keyword)cVAlternatives_0.eContents().get(2);
		private final Keyword cVDashedKeyword_0_3 = (Keyword)cVAlternatives_0.eContents().get(3);
		
		//DashStyleValue:
		//	v=("none" | "solid" | "dotted" | "dashed");
		public ParserRule getRule() { return rule; }

		//v=("none" | "solid" | "dotted" | "dashed")
		public Assignment getVAssignment() { return cVAssignment; }

		//"none" | "solid" | "dotted" | "dashed"
		public Alternatives getVAlternatives_0() { return cVAlternatives_0; }

		//"none"
		public Keyword getVNoneKeyword_0_0() { return cVNoneKeyword_0_0; }

		//"solid"
		public Keyword getVSolidKeyword_0_1() { return cVSolidKeyword_0_1; }

		//"dotted"
		public Keyword getVDottedKeyword_0_2() { return cVDottedKeyword_0_2; }

		//"dashed"
		public Keyword getVDashedKeyword_0_3() { return cVDashedKeyword_0_3; }
	}

	public class SizeFillElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeFill");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueMultiSizeValueParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cFillAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFillFillKeyword_1_0 = (Keyword)cFillAssignment_1.eContents().get(0);
		
		//SizeFill:
		//	value=MultiSizeValue fill="fill"?;
		public ParserRule getRule() { return rule; }

		//value=MultiSizeValue fill="fill"?
		public Group getGroup() { return cGroup; }

		//value=MultiSizeValue
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//MultiSizeValue
		public RuleCall getValueMultiSizeValueParserRuleCall_0_0() { return cValueMultiSizeValueParserRuleCall_0_0; }

		//fill="fill"?
		public Assignment getFillAssignment_1() { return cFillAssignment_1; }

		//"fill"
		public Keyword getFillFillKeyword_1_0() { return cFillFillKeyword_1_0; }
	}

	public class FontValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStyleOrWeightAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cStyleOrWeightAlternatives_0_0 = (Alternatives)cStyleOrWeightAssignment_0.eContents().get(0);
		private final Keyword cStyleOrWeightItalicKeyword_0_0_0 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(0);
		private final Keyword cStyleOrWeightObliqueKeyword_0_0_1 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(1);
		private final Keyword cStyleOrWeightNormalKeyword_0_0_2 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(2);
		private final Keyword cStyleOrWeightBoldKeyword_0_0_3 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(3);
		private final Keyword cStyleOrWeightBolderKeyword_0_0_4 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(4);
		private final Keyword cStyleOrWeightLighterKeyword_0_0_5 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(5);
		private final Keyword cStyleOrWeight100Keyword_0_0_6 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(6);
		private final Keyword cStyleOrWeight200Keyword_0_0_7 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(7);
		private final Keyword cStyleOrWeight300Keyword_0_0_8 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(8);
		private final Keyword cStyleOrWeight400Keyword_0_0_9 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(9);
		private final Keyword cStyleOrWeight500Keyword_0_0_10 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(10);
		private final Keyword cStyleOrWeight600Keyword_0_0_11 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(11);
		private final Keyword cStyleOrWeight700Keyword_0_0_12 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(12);
		private final Keyword cStyleOrWeight800Keyword_0_0_13 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(13);
		private final Keyword cStyleOrWeight900Keyword_0_0_14 = (Keyword)cStyleOrWeightAlternatives_0_0.eContents().get(14);
		private final Assignment cSizeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSizeSizeValueParserRuleCall_1_0 = (RuleCall)cSizeAssignment_1.eContents().get(0);
		private final Assignment cFamilyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFamilyFontFamilyParserRuleCall_2_0 = (RuleCall)cFamilyAssignment_2.eContents().get(0);
		
		//FontValue:
		//	styleOrWeight=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500"
		//	| "600" | "700" | "800" | "900")? size=SizeValue family=FontFamily;
		public ParserRule getRule() { return rule; }

		//styleOrWeight=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" |
		//"600" | "700" | "800" | "900")? size=SizeValue family=FontFamily
		public Group getGroup() { return cGroup; }

		//styleOrWeight=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" |
		//"600" | "700" | "800" | "900")?
		public Assignment getStyleOrWeightAssignment_0() { return cStyleOrWeightAssignment_0; }

		//"italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700"
		//| "800" | "900"
		public Alternatives getStyleOrWeightAlternatives_0_0() { return cStyleOrWeightAlternatives_0_0; }

		//"italic"
		public Keyword getStyleOrWeightItalicKeyword_0_0_0() { return cStyleOrWeightItalicKeyword_0_0_0; }

		//"oblique"
		public Keyword getStyleOrWeightObliqueKeyword_0_0_1() { return cStyleOrWeightObliqueKeyword_0_0_1; }

		//"normal"
		public Keyword getStyleOrWeightNormalKeyword_0_0_2() { return cStyleOrWeightNormalKeyword_0_0_2; }

		//"bold"
		public Keyword getStyleOrWeightBoldKeyword_0_0_3() { return cStyleOrWeightBoldKeyword_0_0_3; }

		//"bolder"
		public Keyword getStyleOrWeightBolderKeyword_0_0_4() { return cStyleOrWeightBolderKeyword_0_0_4; }

		//"lighter"
		public Keyword getStyleOrWeightLighterKeyword_0_0_5() { return cStyleOrWeightLighterKeyword_0_0_5; }

		//"100"
		public Keyword getStyleOrWeight100Keyword_0_0_6() { return cStyleOrWeight100Keyword_0_0_6; }

		//"200"
		public Keyword getStyleOrWeight200Keyword_0_0_7() { return cStyleOrWeight200Keyword_0_0_7; }

		//"300"
		public Keyword getStyleOrWeight300Keyword_0_0_8() { return cStyleOrWeight300Keyword_0_0_8; }

		//"400"
		public Keyword getStyleOrWeight400Keyword_0_0_9() { return cStyleOrWeight400Keyword_0_0_9; }

		//"500"
		public Keyword getStyleOrWeight500Keyword_0_0_10() { return cStyleOrWeight500Keyword_0_0_10; }

		//"600"
		public Keyword getStyleOrWeight600Keyword_0_0_11() { return cStyleOrWeight600Keyword_0_0_11; }

		//"700"
		public Keyword getStyleOrWeight700Keyword_0_0_12() { return cStyleOrWeight700Keyword_0_0_12; }

		//"800"
		public Keyword getStyleOrWeight800Keyword_0_0_13() { return cStyleOrWeight800Keyword_0_0_13; }

		//"900"
		public Keyword getStyleOrWeight900Keyword_0_0_14() { return cStyleOrWeight900Keyword_0_0_14; }

		//size=SizeValue
		public Assignment getSizeAssignment_1() { return cSizeAssignment_1; }

		//SizeValue
		public RuleCall getSizeSizeValueParserRuleCall_1_0() { return cSizeSizeValueParserRuleCall_1_0; }

		//family=FontFamily
		public Assignment getFamilyAssignment_2() { return cFamilyAssignment_2; }

		//FontFamily
		public RuleCall getFamilyFontFamilyParserRuleCall_2_0() { return cFamilyFontFamilyParserRuleCall_2_0; }
	}

	public class FontStyleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontStyleValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueNormalKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueItalicKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueObliqueKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		
		//FontStyleValue:
		//	value=("normal" | "italic" | "oblique");
		public ParserRule getRule() { return rule; }

		//value=("normal" | "italic" | "oblique")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"normal" | "italic" | "oblique"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"normal"
		public Keyword getValueNormalKeyword_0_0() { return cValueNormalKeyword_0_0; }

		//"italic"
		public Keyword getValueItalicKeyword_0_1() { return cValueItalicKeyword_0_1; }

		//"oblique"
		public Keyword getValueObliqueKeyword_0_2() { return cValueObliqueKeyword_0_2; }
	}

	public class FontWeightValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontWeightValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueNormalKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueBoldKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueBolderKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		private final Keyword cValueLighterKeyword_0_3 = (Keyword)cValueAlternatives_0.eContents().get(3);
		private final Keyword cValue100Keyword_0_4 = (Keyword)cValueAlternatives_0.eContents().get(4);
		private final Keyword cValue200Keyword_0_5 = (Keyword)cValueAlternatives_0.eContents().get(5);
		private final Keyword cValue300Keyword_0_6 = (Keyword)cValueAlternatives_0.eContents().get(6);
		private final Keyword cValue400Keyword_0_7 = (Keyword)cValueAlternatives_0.eContents().get(7);
		private final Keyword cValue500Keyword_0_8 = (Keyword)cValueAlternatives_0.eContents().get(8);
		private final Keyword cValue600Keyword_0_9 = (Keyword)cValueAlternatives_0.eContents().get(9);
		private final Keyword cValue700Keyword_0_10 = (Keyword)cValueAlternatives_0.eContents().get(10);
		private final Keyword cValue800Keyword_0_11 = (Keyword)cValueAlternatives_0.eContents().get(11);
		private final Keyword cValue900Keyword_0_12 = (Keyword)cValueAlternatives_0.eContents().get(12);
		
		//FontWeightValue:
		//	value=("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" |
		//	"900");
		public ParserRule getRule() { return rule; }

		//value=("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"normal"
		public Keyword getValueNormalKeyword_0_0() { return cValueNormalKeyword_0_0; }

		//"bold"
		public Keyword getValueBoldKeyword_0_1() { return cValueBoldKeyword_0_1; }

		//"bolder"
		public Keyword getValueBolderKeyword_0_2() { return cValueBolderKeyword_0_2; }

		//"lighter"
		public Keyword getValueLighterKeyword_0_3() { return cValueLighterKeyword_0_3; }

		//"100"
		public Keyword getValue100Keyword_0_4() { return cValue100Keyword_0_4; }

		//"200"
		public Keyword getValue200Keyword_0_5() { return cValue200Keyword_0_5; }

		//"300"
		public Keyword getValue300Keyword_0_6() { return cValue300Keyword_0_6; }

		//"400"
		public Keyword getValue400Keyword_0_7() { return cValue400Keyword_0_7; }

		//"500"
		public Keyword getValue500Keyword_0_8() { return cValue500Keyword_0_8; }

		//"600"
		public Keyword getValue600Keyword_0_9() { return cValue600Keyword_0_9; }

		//"700"
		public Keyword getValue700Keyword_0_10() { return cValue700Keyword_0_10; }

		//"800"
		public Keyword getValue800Keyword_0_11() { return cValue800Keyword_0_11; }

		//"900"
		public Keyword getValue900Keyword_0_12() { return cValue900Keyword_0_12; }
	}

	public class FontFamilyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FontFamily");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueIDTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//FontFamily:
		//	value=ID;
		public ParserRule getRule() { return rule; }

		//value=ID
		public Assignment getValueAssignment() { return cValueAssignment; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_0() { return cValueIDTerminalRuleCall_0; }
	}

	public class PaintValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PaintValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLinearGradientParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRadialGradientParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cColorValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PaintValue:
		//	LinearGradient | RadialGradient | ColorValue;
		public ParserRule getRule() { return rule; }

		//LinearGradient | RadialGradient | ColorValue
		public Alternatives getAlternatives() { return cAlternatives; }

		//LinearGradient
		public RuleCall getLinearGradientParserRuleCall_0() { return cLinearGradientParserRuleCall_0; }

		//RadialGradient
		public RuleCall getRadialGradientParserRuleCall_1() { return cRadialGradientParserRuleCall_1; }

		//ColorValue
		public RuleCall getColorValueParserRuleCall_2() { return cColorValueParserRuleCall_2; }
	}

	public class LinearGradientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LinearGradient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cX1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cX1SizeValueParserRuleCall_2_0 = (RuleCall)cX1Assignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cY1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cY1SizeValueParserRuleCall_4_0 = (RuleCall)cY1Assignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cX2Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cX2SizeValueParserRuleCall_8_0 = (RuleCall)cX2Assignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cY2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cY2SizeValueParserRuleCall_10_0 = (RuleCall)cY2Assignment_10.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cStopsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cLeftParenthesisKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cStopsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cStopsStopValueParserRuleCall_13_1_0 = (RuleCall)cStopsAssignment_13_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Alternatives cAlternatives_14 = (Alternatives)cGroup.eContents().get(14);
		private final Keyword cRepeatKeyword_14_0 = (Keyword)cAlternatives_14.eContents().get(0);
		private final Keyword cReflectKeyword_14_1 = (Keyword)cAlternatives_14.eContents().get(1);
		
		//LinearGradient:
		//	"linear" "(" x1=SizeValue "," y1=SizeValue ")" "to" "(" x2=SizeValue "," y2=SizeValue ")" "stops" ("("
		//	stops+=StopValue ")")+ ("repeat" | "reflect")?;
		public ParserRule getRule() { return rule; }

		//"linear" "(" x1=SizeValue "," y1=SizeValue ")" "to" "(" x2=SizeValue "," y2=SizeValue ")" "stops" ("(" stops+=StopValue
		//")")+ ("repeat" | "reflect")?
		public Group getGroup() { return cGroup; }

		//"linear"
		public Keyword getLinearKeyword_0() { return cLinearKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//x1=SizeValue
		public Assignment getX1Assignment_2() { return cX1Assignment_2; }

		//SizeValue
		public RuleCall getX1SizeValueParserRuleCall_2_0() { return cX1SizeValueParserRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//y1=SizeValue
		public Assignment getY1Assignment_4() { return cY1Assignment_4; }

		//SizeValue
		public RuleCall getY1SizeValueParserRuleCall_4_0() { return cY1SizeValueParserRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"to"
		public Keyword getToKeyword_6() { return cToKeyword_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }

		//x2=SizeValue
		public Assignment getX2Assignment_8() { return cX2Assignment_8; }

		//SizeValue
		public RuleCall getX2SizeValueParserRuleCall_8_0() { return cX2SizeValueParserRuleCall_8_0; }

		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }

		//y2=SizeValue
		public Assignment getY2Assignment_10() { return cY2Assignment_10; }

		//SizeValue
		public RuleCall getY2SizeValueParserRuleCall_10_0() { return cY2SizeValueParserRuleCall_10_0; }

		//")"
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }

		//"stops"
		public Keyword getStopsKeyword_12() { return cStopsKeyword_12; }

		//("(" stops+=StopValue ")")+
		public Group getGroup_13() { return cGroup_13; }

		//"("
		public Keyword getLeftParenthesisKeyword_13_0() { return cLeftParenthesisKeyword_13_0; }

		//stops+=StopValue
		public Assignment getStopsAssignment_13_1() { return cStopsAssignment_13_1; }

		//StopValue
		public RuleCall getStopsStopValueParserRuleCall_13_1_0() { return cStopsStopValueParserRuleCall_13_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_13_2() { return cRightParenthesisKeyword_13_2; }

		//("repeat" | "reflect")?
		public Alternatives getAlternatives_14() { return cAlternatives_14; }

		//"repeat"
		public Keyword getRepeatKeyword_14_0() { return cRepeatKeyword_14_0; }

		//"reflect"
		public Keyword getReflectKeyword_14_1() { return cReflectKeyword_14_1; }
	}

	public class RadialGradientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadialGradient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRadialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cCxAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCxSizeValueParserRuleCall_1_1_0 = (RuleCall)cCxAssignment_1_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cCyAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cCySizeValueParserRuleCall_1_3_0 = (RuleCall)cCyAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cRadiusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRadiusSizeValueParserRuleCall_2_0 = (RuleCall)cRadiusAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFocusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cFxAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFxSizeValueParserRuleCall_3_2_0 = (RuleCall)cFxAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cFyAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cFySizeValueParserRuleCall_3_4_0 = (RuleCall)cFyAssignment_3_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Keyword cStopsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStopsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStopsStopValueParserRuleCall_5_1_0 = (RuleCall)cStopsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Keyword cRepeatKeyword_6_0 = (Keyword)cAlternatives_6.eContents().get(0);
		private final Keyword cReflectKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//RadialGradient:
		//	"radial" ("(" cx=SizeValue "," cy=SizeValue ")" ",")? radius=SizeValue ("focus" "(" fx=SizeValue "," fy=SizeValue ")")
		//	"stops" ("(" stops+=StopValue ")")+ ("repeat" | "reflect")?;
		public ParserRule getRule() { return rule; }

		//"radial" ("(" cx=SizeValue "," cy=SizeValue ")" ",")? radius=SizeValue ("focus" "(" fx=SizeValue "," fy=SizeValue ")")
		//"stops" ("(" stops+=StopValue ")")+ ("repeat" | "reflect")?
		public Group getGroup() { return cGroup; }

		//"radial"
		public Keyword getRadialKeyword_0() { return cRadialKeyword_0; }

		//("(" cx=SizeValue "," cy=SizeValue ")" ",")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//cx=SizeValue
		public Assignment getCxAssignment_1_1() { return cCxAssignment_1_1; }

		//SizeValue
		public RuleCall getCxSizeValueParserRuleCall_1_1_0() { return cCxSizeValueParserRuleCall_1_1_0; }

		//","
		public Keyword getCommaKeyword_1_2() { return cCommaKeyword_1_2; }

		//cy=SizeValue
		public Assignment getCyAssignment_1_3() { return cCyAssignment_1_3; }

		//SizeValue
		public RuleCall getCySizeValueParserRuleCall_1_3_0() { return cCySizeValueParserRuleCall_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }

		//","
		public Keyword getCommaKeyword_1_5() { return cCommaKeyword_1_5; }

		//radius=SizeValue
		public Assignment getRadiusAssignment_2() { return cRadiusAssignment_2; }

		//SizeValue
		public RuleCall getRadiusSizeValueParserRuleCall_2_0() { return cRadiusSizeValueParserRuleCall_2_0; }

		//"focus" "(" fx=SizeValue "," fy=SizeValue ")"
		public Group getGroup_3() { return cGroup_3; }

		//"focus"
		public Keyword getFocusKeyword_3_0() { return cFocusKeyword_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//fx=SizeValue
		public Assignment getFxAssignment_3_2() { return cFxAssignment_3_2; }

		//SizeValue
		public RuleCall getFxSizeValueParserRuleCall_3_2_0() { return cFxSizeValueParserRuleCall_3_2_0; }

		//","
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }

		//fy=SizeValue
		public Assignment getFyAssignment_3_4() { return cFyAssignment_3_4; }

		//SizeValue
		public RuleCall getFySizeValueParserRuleCall_3_4_0() { return cFySizeValueParserRuleCall_3_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_5() { return cRightParenthesisKeyword_3_5; }

		//"stops"
		public Keyword getStopsKeyword_4() { return cStopsKeyword_4; }

		//("(" stops+=StopValue ")")+
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//stops+=StopValue
		public Assignment getStopsAssignment_5_1() { return cStopsAssignment_5_1; }

		//StopValue
		public RuleCall getStopsStopValueParserRuleCall_5_1_0() { return cStopsStopValueParserRuleCall_5_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_2() { return cRightParenthesisKeyword_5_2; }

		//("repeat" | "reflect")?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//"repeat"
		public Keyword getRepeatKeyword_6_0() { return cRepeatKeyword_6_0; }

		//"reflect"
		public Keyword getReflectKeyword_6_1() { return cReflectKeyword_6_1; }
	}

	public class StopValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StopValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPosAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPosNumberValueParserRuleCall_0_0 = (RuleCall)cPosAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cColorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cColorColorValueParserRuleCall_2_0 = (RuleCall)cColorAssignment_2.eContents().get(0);
		
		//StopValue:
		//	pos=NumberValue "," color=ColorValue;
		public ParserRule getRule() { return rule; }

		//pos=NumberValue "," color=ColorValue
		public Group getGroup() { return cGroup; }

		//pos=NumberValue
		public Assignment getPosAssignment_0() { return cPosAssignment_0; }

		//NumberValue
		public RuleCall getPosNumberValueParserRuleCall_0_0() { return cPosNumberValueParserRuleCall_0_0; }

		//","
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }

		//color=ColorValue
		public Assignment getColorAssignment_2() { return cColorAssignment_2; }

		//ColorValue
		public RuleCall getColorColorValueParserRuleCall_2_0() { return cColorColorValueParserRuleCall_2_0; }
	}

	public class ColorValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColorValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedColorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRGBColorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHSBColorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cColorFunctionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ColorValue:
		//	NamedColor | RGBColor | HSBColor | ColorFunction;
		public ParserRule getRule() { return rule; }

		//NamedColor | RGBColor | HSBColor | ColorFunction
		public Alternatives getAlternatives() { return cAlternatives; }

		//NamedColor
		public RuleCall getNamedColorParserRuleCall_0() { return cNamedColorParserRuleCall_0; }

		//RGBColor
		public RuleCall getRGBColorParserRuleCall_1() { return cRGBColorParserRuleCall_1; }

		//HSBColor
		public RuleCall getHSBColorParserRuleCall_2() { return cHSBColorParserRuleCall_2; }

		//ColorFunction
		public RuleCall getColorFunctionParserRuleCall_3() { return cColorFunctionParserRuleCall_3; }
	}

	public class NamedColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedColor");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueAliceblueKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueAntiquewhiteKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueAquaKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		private final Keyword cValueAquamarineKeyword_0_3 = (Keyword)cValueAlternatives_0.eContents().get(3);
		private final Keyword cValueAzureKeyword_0_4 = (Keyword)cValueAlternatives_0.eContents().get(4);
		private final Keyword cValueBeigeKeyword_0_5 = (Keyword)cValueAlternatives_0.eContents().get(5);
		private final Keyword cValueBisqueKeyword_0_6 = (Keyword)cValueAlternatives_0.eContents().get(6);
		private final Keyword cValueBlackKeyword_0_7 = (Keyword)cValueAlternatives_0.eContents().get(7);
		private final Keyword cValueBlanchedalmondKeyword_0_8 = (Keyword)cValueAlternatives_0.eContents().get(8);
		private final Keyword cValueBlueKeyword_0_9 = (Keyword)cValueAlternatives_0.eContents().get(9);
		private final Keyword cValueBluevioletKeyword_0_10 = (Keyword)cValueAlternatives_0.eContents().get(10);
		private final Keyword cValueBrownKeyword_0_11 = (Keyword)cValueAlternatives_0.eContents().get(11);
		private final Keyword cValueBurlywoodKeyword_0_12 = (Keyword)cValueAlternatives_0.eContents().get(12);
		private final Keyword cValueCadetblueKeyword_0_13 = (Keyword)cValueAlternatives_0.eContents().get(13);
		private final Keyword cValueChartreuseKeyword_0_14 = (Keyword)cValueAlternatives_0.eContents().get(14);
		private final Keyword cValueChocolateKeyword_0_15 = (Keyword)cValueAlternatives_0.eContents().get(15);
		private final Keyword cValueCoralKeyword_0_16 = (Keyword)cValueAlternatives_0.eContents().get(16);
		private final Keyword cValueCornflowerblueKeyword_0_17 = (Keyword)cValueAlternatives_0.eContents().get(17);
		private final Keyword cValueCornsilkKeyword_0_18 = (Keyword)cValueAlternatives_0.eContents().get(18);
		private final Keyword cValueCrimsonKeyword_0_19 = (Keyword)cValueAlternatives_0.eContents().get(19);
		private final Keyword cValueCyanKeyword_0_20 = (Keyword)cValueAlternatives_0.eContents().get(20);
		private final Keyword cValueDarkblueKeyword_0_21 = (Keyword)cValueAlternatives_0.eContents().get(21);
		private final Keyword cValueDarkcyanKeyword_0_22 = (Keyword)cValueAlternatives_0.eContents().get(22);
		private final Keyword cValueDarkgoldenrodKeyword_0_23 = (Keyword)cValueAlternatives_0.eContents().get(23);
		private final Keyword cValueDarkgrayKeyword_0_24 = (Keyword)cValueAlternatives_0.eContents().get(24);
		private final Keyword cValueDarkgreenKeyword_0_25 = (Keyword)cValueAlternatives_0.eContents().get(25);
		private final Keyword cValueDarkgreyKeyword_0_26 = (Keyword)cValueAlternatives_0.eContents().get(26);
		private final Keyword cValueDarkkhakiKeyword_0_27 = (Keyword)cValueAlternatives_0.eContents().get(27);
		private final Keyword cValueDarkmagentaKeyword_0_28 = (Keyword)cValueAlternatives_0.eContents().get(28);
		private final Keyword cValueDarkolivegreenKeyword_0_29 = (Keyword)cValueAlternatives_0.eContents().get(29);
		private final Keyword cValueDarkorangeKeyword_0_30 = (Keyword)cValueAlternatives_0.eContents().get(30);
		private final Keyword cValueDarkorchidKeyword_0_31 = (Keyword)cValueAlternatives_0.eContents().get(31);
		private final Keyword cValueDarkredKeyword_0_32 = (Keyword)cValueAlternatives_0.eContents().get(32);
		private final Keyword cValueDarksalmonKeyword_0_33 = (Keyword)cValueAlternatives_0.eContents().get(33);
		private final Keyword cValueDarkseagreenKeyword_0_34 = (Keyword)cValueAlternatives_0.eContents().get(34);
		private final Keyword cValueDarkslateblueKeyword_0_35 = (Keyword)cValueAlternatives_0.eContents().get(35);
		private final Keyword cValueDarkslategrayKeyword_0_36 = (Keyword)cValueAlternatives_0.eContents().get(36);
		private final Keyword cValueDarkslategreyKeyword_0_37 = (Keyword)cValueAlternatives_0.eContents().get(37);
		private final Keyword cValueDarkturquoiseKeyword_0_38 = (Keyword)cValueAlternatives_0.eContents().get(38);
		private final Keyword cValueDarkvioletKeyword_0_39 = (Keyword)cValueAlternatives_0.eContents().get(39);
		private final Keyword cValueDeeppinkKeyword_0_40 = (Keyword)cValueAlternatives_0.eContents().get(40);
		private final Keyword cValueDeepskyblueKeyword_0_41 = (Keyword)cValueAlternatives_0.eContents().get(41);
		private final Keyword cValueDimgrayKeyword_0_42 = (Keyword)cValueAlternatives_0.eContents().get(42);
		private final Keyword cValueDimgreyKeyword_0_43 = (Keyword)cValueAlternatives_0.eContents().get(43);
		private final Keyword cValueDodgerblueKeyword_0_44 = (Keyword)cValueAlternatives_0.eContents().get(44);
		private final Keyword cValueFirebrickKeyword_0_45 = (Keyword)cValueAlternatives_0.eContents().get(45);
		private final Keyword cValueFloralwhiteKeyword_0_46 = (Keyword)cValueAlternatives_0.eContents().get(46);
		private final Keyword cValueForestgreenKeyword_0_47 = (Keyword)cValueAlternatives_0.eContents().get(47);
		private final Keyword cValueFuchsiaKeyword_0_48 = (Keyword)cValueAlternatives_0.eContents().get(48);
		private final Keyword cValueGainsboroKeyword_0_49 = (Keyword)cValueAlternatives_0.eContents().get(49);
		private final Keyword cValueGhostwhiteKeyword_0_50 = (Keyword)cValueAlternatives_0.eContents().get(50);
		private final Keyword cValueGoldKeyword_0_51 = (Keyword)cValueAlternatives_0.eContents().get(51);
		private final Keyword cValueGoldenrodKeyword_0_52 = (Keyword)cValueAlternatives_0.eContents().get(52);
		private final Keyword cValueGrayKeyword_0_53 = (Keyword)cValueAlternatives_0.eContents().get(53);
		private final Keyword cValueGreenKeyword_0_54 = (Keyword)cValueAlternatives_0.eContents().get(54);
		private final Keyword cValueGreenyellowKeyword_0_55 = (Keyword)cValueAlternatives_0.eContents().get(55);
		private final Keyword cValueGreyKeyword_0_56 = (Keyword)cValueAlternatives_0.eContents().get(56);
		private final Keyword cValueHoneydewKeyword_0_57 = (Keyword)cValueAlternatives_0.eContents().get(57);
		private final Keyword cValueHotpinkKeyword_0_58 = (Keyword)cValueAlternatives_0.eContents().get(58);
		private final Keyword cValueIndianredKeyword_0_59 = (Keyword)cValueAlternatives_0.eContents().get(59);
		private final Keyword cValueIndigoKeyword_0_60 = (Keyword)cValueAlternatives_0.eContents().get(60);
		private final Keyword cValueIvoryKeyword_0_61 = (Keyword)cValueAlternatives_0.eContents().get(61);
		private final Keyword cValueKhakiKeyword_0_62 = (Keyword)cValueAlternatives_0.eContents().get(62);
		private final Keyword cValueLavenderKeyword_0_63 = (Keyword)cValueAlternatives_0.eContents().get(63);
		private final Keyword cValueLavenderblushKeyword_0_64 = (Keyword)cValueAlternatives_0.eContents().get(64);
		private final Keyword cValueLawngreenKeyword_0_65 = (Keyword)cValueAlternatives_0.eContents().get(65);
		private final Keyword cValueLemonchiffonKeyword_0_66 = (Keyword)cValueAlternatives_0.eContents().get(66);
		private final Keyword cValueLightblueKeyword_0_67 = (Keyword)cValueAlternatives_0.eContents().get(67);
		private final Keyword cValueLightcoralKeyword_0_68 = (Keyword)cValueAlternatives_0.eContents().get(68);
		private final Keyword cValueLightcyanKeyword_0_69 = (Keyword)cValueAlternatives_0.eContents().get(69);
		private final Keyword cValueLightgoldenrodyellowKeyword_0_70 = (Keyword)cValueAlternatives_0.eContents().get(70);
		private final Keyword cValueLightgrayKeyword_0_71 = (Keyword)cValueAlternatives_0.eContents().get(71);
		private final Keyword cValueLightgreenKeyword_0_72 = (Keyword)cValueAlternatives_0.eContents().get(72);
		private final Keyword cValueLightgreyKeyword_0_73 = (Keyword)cValueAlternatives_0.eContents().get(73);
		private final Keyword cValueLightpinkKeyword_0_74 = (Keyword)cValueAlternatives_0.eContents().get(74);
		private final Keyword cValueLightsalmonKeyword_0_75 = (Keyword)cValueAlternatives_0.eContents().get(75);
		private final Keyword cValueLightseagreenKeyword_0_76 = (Keyword)cValueAlternatives_0.eContents().get(76);
		private final Keyword cValueLightskyblueKeyword_0_77 = (Keyword)cValueAlternatives_0.eContents().get(77);
		private final Keyword cValueLightslategrayKeyword_0_78 = (Keyword)cValueAlternatives_0.eContents().get(78);
		private final Keyword cValueLightslategreyKeyword_0_79 = (Keyword)cValueAlternatives_0.eContents().get(79);
		private final Keyword cValueLightsteelblueKeyword_0_80 = (Keyword)cValueAlternatives_0.eContents().get(80);
		private final Keyword cValueLightyellowKeyword_0_81 = (Keyword)cValueAlternatives_0.eContents().get(81);
		private final Keyword cValueLimeKeyword_0_82 = (Keyword)cValueAlternatives_0.eContents().get(82);
		private final Keyword cValueLimegreenKeyword_0_83 = (Keyword)cValueAlternatives_0.eContents().get(83);
		private final Keyword cValueLinenKeyword_0_84 = (Keyword)cValueAlternatives_0.eContents().get(84);
		private final Keyword cValueMagentaKeyword_0_85 = (Keyword)cValueAlternatives_0.eContents().get(85);
		private final Keyword cValueMaroonKeyword_0_86 = (Keyword)cValueAlternatives_0.eContents().get(86);
		private final Keyword cValueMediumaquamarineKeyword_0_87 = (Keyword)cValueAlternatives_0.eContents().get(87);
		private final Keyword cValueMediumblueKeyword_0_88 = (Keyword)cValueAlternatives_0.eContents().get(88);
		private final Keyword cValueMediumorchidKeyword_0_89 = (Keyword)cValueAlternatives_0.eContents().get(89);
		private final Keyword cValueMediumpurpleKeyword_0_90 = (Keyword)cValueAlternatives_0.eContents().get(90);
		private final Keyword cValueMediumseagreenKeyword_0_91 = (Keyword)cValueAlternatives_0.eContents().get(91);
		private final Keyword cValueMediumslateblueKeyword_0_92 = (Keyword)cValueAlternatives_0.eContents().get(92);
		private final Keyword cValueMediumspringgreenKeyword_0_93 = (Keyword)cValueAlternatives_0.eContents().get(93);
		private final Keyword cValueMediumturquoiseKeyword_0_94 = (Keyword)cValueAlternatives_0.eContents().get(94);
		private final Keyword cValueMediumvioletredKeyword_0_95 = (Keyword)cValueAlternatives_0.eContents().get(95);
		private final Keyword cValueMidnightblueKeyword_0_96 = (Keyword)cValueAlternatives_0.eContents().get(96);
		private final Keyword cValueMintcreamKeyword_0_97 = (Keyword)cValueAlternatives_0.eContents().get(97);
		private final Keyword cValueMistyroseKeyword_0_98 = (Keyword)cValueAlternatives_0.eContents().get(98);
		private final Keyword cValueMoccasinKeyword_0_99 = (Keyword)cValueAlternatives_0.eContents().get(99);
		private final Keyword cValueNavajowhiteKeyword_0_100 = (Keyword)cValueAlternatives_0.eContents().get(100);
		private final Keyword cValueNavyKeyword_0_101 = (Keyword)cValueAlternatives_0.eContents().get(101);
		private final Keyword cValueOldlaceKeyword_0_102 = (Keyword)cValueAlternatives_0.eContents().get(102);
		private final Keyword cValueOliveKeyword_0_103 = (Keyword)cValueAlternatives_0.eContents().get(103);
		private final Keyword cValueOlivedrabKeyword_0_104 = (Keyword)cValueAlternatives_0.eContents().get(104);
		private final Keyword cValueOrangeKeyword_0_105 = (Keyword)cValueAlternatives_0.eContents().get(105);
		private final Keyword cValueOrangeredKeyword_0_106 = (Keyword)cValueAlternatives_0.eContents().get(106);
		private final Keyword cValueOrchidKeyword_0_107 = (Keyword)cValueAlternatives_0.eContents().get(107);
		private final Keyword cValuePalegoldenrodKeyword_0_108 = (Keyword)cValueAlternatives_0.eContents().get(108);
		private final Keyword cValuePalegreenKeyword_0_109 = (Keyword)cValueAlternatives_0.eContents().get(109);
		private final Keyword cValuePaleturquoiseKeyword_0_110 = (Keyword)cValueAlternatives_0.eContents().get(110);
		private final Keyword cValuePalevioletredKeyword_0_111 = (Keyword)cValueAlternatives_0.eContents().get(111);
		private final Keyword cValuePapayawhipKeyword_0_112 = (Keyword)cValueAlternatives_0.eContents().get(112);
		private final Keyword cValuePeachpuffKeyword_0_113 = (Keyword)cValueAlternatives_0.eContents().get(113);
		private final Keyword cValuePeruKeyword_0_114 = (Keyword)cValueAlternatives_0.eContents().get(114);
		private final Keyword cValuePinkKeyword_0_115 = (Keyword)cValueAlternatives_0.eContents().get(115);
		private final Keyword cValuePlumKeyword_0_116 = (Keyword)cValueAlternatives_0.eContents().get(116);
		private final Keyword cValuePowderblueKeyword_0_117 = (Keyword)cValueAlternatives_0.eContents().get(117);
		private final Keyword cValuePurpleKeyword_0_118 = (Keyword)cValueAlternatives_0.eContents().get(118);
		private final Keyword cValueRedKeyword_0_119 = (Keyword)cValueAlternatives_0.eContents().get(119);
		private final Keyword cValueRosybrownKeyword_0_120 = (Keyword)cValueAlternatives_0.eContents().get(120);
		private final Keyword cValueRoyalblueKeyword_0_121 = (Keyword)cValueAlternatives_0.eContents().get(121);
		private final Keyword cValueSaddlebrownKeyword_0_122 = (Keyword)cValueAlternatives_0.eContents().get(122);
		private final Keyword cValueSalmonKeyword_0_123 = (Keyword)cValueAlternatives_0.eContents().get(123);
		private final Keyword cValueSandybrownKeyword_0_124 = (Keyword)cValueAlternatives_0.eContents().get(124);
		private final Keyword cValueSeagreenKeyword_0_125 = (Keyword)cValueAlternatives_0.eContents().get(125);
		private final Keyword cValueSeashellKeyword_0_126 = (Keyword)cValueAlternatives_0.eContents().get(126);
		private final Keyword cValueSiennaKeyword_0_127 = (Keyword)cValueAlternatives_0.eContents().get(127);
		private final Keyword cValueSilverKeyword_0_128 = (Keyword)cValueAlternatives_0.eContents().get(128);
		private final Keyword cValueSkyblueKeyword_0_129 = (Keyword)cValueAlternatives_0.eContents().get(129);
		private final Keyword cValueSlateblueKeyword_0_130 = (Keyword)cValueAlternatives_0.eContents().get(130);
		private final Keyword cValueSlategrayKeyword_0_131 = (Keyword)cValueAlternatives_0.eContents().get(131);
		private final Keyword cValueSlategreyKeyword_0_132 = (Keyword)cValueAlternatives_0.eContents().get(132);
		private final Keyword cValueSnowKeyword_0_133 = (Keyword)cValueAlternatives_0.eContents().get(133);
		private final Keyword cValueSpringgreenKeyword_0_134 = (Keyword)cValueAlternatives_0.eContents().get(134);
		private final Keyword cValueSteelblueKeyword_0_135 = (Keyword)cValueAlternatives_0.eContents().get(135);
		private final Keyword cValueTanKeyword_0_136 = (Keyword)cValueAlternatives_0.eContents().get(136);
		private final Keyword cValueTealKeyword_0_137 = (Keyword)cValueAlternatives_0.eContents().get(137);
		private final Keyword cValueThistleKeyword_0_138 = (Keyword)cValueAlternatives_0.eContents().get(138);
		private final Keyword cValueTomatoKeyword_0_139 = (Keyword)cValueAlternatives_0.eContents().get(139);
		private final Keyword cValueTurquoiseKeyword_0_140 = (Keyword)cValueAlternatives_0.eContents().get(140);
		private final Keyword cValueVioletKeyword_0_141 = (Keyword)cValueAlternatives_0.eContents().get(141);
		private final Keyword cValueWheatKeyword_0_142 = (Keyword)cValueAlternatives_0.eContents().get(142);
		private final Keyword cValueWhiteKeyword_0_143 = (Keyword)cValueAlternatives_0.eContents().get(143);
		private final Keyword cValueWhitesmokeKeyword_0_144 = (Keyword)cValueAlternatives_0.eContents().get(144);
		private final Keyword cValueYellowKeyword_0_145 = (Keyword)cValueAlternatives_0.eContents().get(145);
		private final Keyword cValueYellowgreenKeyword_0_146 = (Keyword)cValueAlternatives_0.eContents().get(146);
		private final Keyword cValueTransparentKeyword_0_147 = (Keyword)cValueAlternatives_0.eContents().get(147);
		
		//NamedColor:
		//	value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" |
		//	"blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral"
		//	| "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" |
		//	"darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" |
		//	"darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" |
		//	"deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" |
		//	"fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew"
		//	| "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon"
		//	| "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//	"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" |
		//	"lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" |
		//	"mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" |
		//	"mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" |
		//	"navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" |
		//	"paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" |
		//	"red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" |
		//	"silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal"
		//	| "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" |
		//	"transparent");
		public ParserRule getRule() { return rule; }

		//value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond"
		//| "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue"
		//| "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" |
		//"darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" |
		//"darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" |
		//"deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" |
		//"gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink"
		//| "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" |
		//"lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue"
		//| "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" |
		//"mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" |
		//"mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" |
		//"olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" |
		//"palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "red" | "rosybrown"
		//| "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" |
		//"slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato"
		//| "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "transparent")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond" |
		//"blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" |
		//"cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" |
		//"darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" |
		//"darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" |
		//"deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" |
		//"gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink"
		//| "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" |
		//"lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue"
		//| "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" |
		//"mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" |
		//"mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" |
		//"olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" |
		//"palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "red" | "rosybrown"
		//| "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" |
		//"slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato"
		//| "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "transparent"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"aliceblue"
		public Keyword getValueAliceblueKeyword_0_0() { return cValueAliceblueKeyword_0_0; }

		//"antiquewhite"
		public Keyword getValueAntiquewhiteKeyword_0_1() { return cValueAntiquewhiteKeyword_0_1; }

		//"aqua"
		public Keyword getValueAquaKeyword_0_2() { return cValueAquaKeyword_0_2; }

		//"aquamarine"
		public Keyword getValueAquamarineKeyword_0_3() { return cValueAquamarineKeyword_0_3; }

		//"azure"
		public Keyword getValueAzureKeyword_0_4() { return cValueAzureKeyword_0_4; }

		//"beige"
		public Keyword getValueBeigeKeyword_0_5() { return cValueBeigeKeyword_0_5; }

		//"bisque"
		public Keyword getValueBisqueKeyword_0_6() { return cValueBisqueKeyword_0_6; }

		//"black"
		public Keyword getValueBlackKeyword_0_7() { return cValueBlackKeyword_0_7; }

		//"blanchedalmond"
		public Keyword getValueBlanchedalmondKeyword_0_8() { return cValueBlanchedalmondKeyword_0_8; }

		//"blue"
		public Keyword getValueBlueKeyword_0_9() { return cValueBlueKeyword_0_9; }

		//"blueviolet"
		public Keyword getValueBluevioletKeyword_0_10() { return cValueBluevioletKeyword_0_10; }

		//"brown"
		public Keyword getValueBrownKeyword_0_11() { return cValueBrownKeyword_0_11; }

		//"burlywood"
		public Keyword getValueBurlywoodKeyword_0_12() { return cValueBurlywoodKeyword_0_12; }

		//"cadetblue"
		public Keyword getValueCadetblueKeyword_0_13() { return cValueCadetblueKeyword_0_13; }

		//"chartreuse"
		public Keyword getValueChartreuseKeyword_0_14() { return cValueChartreuseKeyword_0_14; }

		//"chocolate"
		public Keyword getValueChocolateKeyword_0_15() { return cValueChocolateKeyword_0_15; }

		//"coral"
		public Keyword getValueCoralKeyword_0_16() { return cValueCoralKeyword_0_16; }

		//"cornflowerblue"
		public Keyword getValueCornflowerblueKeyword_0_17() { return cValueCornflowerblueKeyword_0_17; }

		//"cornsilk"
		public Keyword getValueCornsilkKeyword_0_18() { return cValueCornsilkKeyword_0_18; }

		//"crimson"
		public Keyword getValueCrimsonKeyword_0_19() { return cValueCrimsonKeyword_0_19; }

		//"cyan"
		public Keyword getValueCyanKeyword_0_20() { return cValueCyanKeyword_0_20; }

		//"darkblue"
		public Keyword getValueDarkblueKeyword_0_21() { return cValueDarkblueKeyword_0_21; }

		//"darkcyan"
		public Keyword getValueDarkcyanKeyword_0_22() { return cValueDarkcyanKeyword_0_22; }

		//"darkgoldenrod"
		public Keyword getValueDarkgoldenrodKeyword_0_23() { return cValueDarkgoldenrodKeyword_0_23; }

		//"darkgray"
		public Keyword getValueDarkgrayKeyword_0_24() { return cValueDarkgrayKeyword_0_24; }

		//"darkgreen"
		public Keyword getValueDarkgreenKeyword_0_25() { return cValueDarkgreenKeyword_0_25; }

		//"darkgrey"
		public Keyword getValueDarkgreyKeyword_0_26() { return cValueDarkgreyKeyword_0_26; }

		//"darkkhaki"
		public Keyword getValueDarkkhakiKeyword_0_27() { return cValueDarkkhakiKeyword_0_27; }

		//"darkmagenta"
		public Keyword getValueDarkmagentaKeyword_0_28() { return cValueDarkmagentaKeyword_0_28; }

		//"darkolivegreen"
		public Keyword getValueDarkolivegreenKeyword_0_29() { return cValueDarkolivegreenKeyword_0_29; }

		//"darkorange"
		public Keyword getValueDarkorangeKeyword_0_30() { return cValueDarkorangeKeyword_0_30; }

		//"darkorchid"
		public Keyword getValueDarkorchidKeyword_0_31() { return cValueDarkorchidKeyword_0_31; }

		//"darkred"
		public Keyword getValueDarkredKeyword_0_32() { return cValueDarkredKeyword_0_32; }

		//"darksalmon"
		public Keyword getValueDarksalmonKeyword_0_33() { return cValueDarksalmonKeyword_0_33; }

		//"darkseagreen"
		public Keyword getValueDarkseagreenKeyword_0_34() { return cValueDarkseagreenKeyword_0_34; }

		//"darkslateblue"
		public Keyword getValueDarkslateblueKeyword_0_35() { return cValueDarkslateblueKeyword_0_35; }

		//"darkslategray"
		public Keyword getValueDarkslategrayKeyword_0_36() { return cValueDarkslategrayKeyword_0_36; }

		//"darkslategrey"
		public Keyword getValueDarkslategreyKeyword_0_37() { return cValueDarkslategreyKeyword_0_37; }

		//"darkturquoise"
		public Keyword getValueDarkturquoiseKeyword_0_38() { return cValueDarkturquoiseKeyword_0_38; }

		//"darkviolet"
		public Keyword getValueDarkvioletKeyword_0_39() { return cValueDarkvioletKeyword_0_39; }

		//"deeppink"
		public Keyword getValueDeeppinkKeyword_0_40() { return cValueDeeppinkKeyword_0_40; }

		//"deepskyblue"
		public Keyword getValueDeepskyblueKeyword_0_41() { return cValueDeepskyblueKeyword_0_41; }

		//"dimgray"
		public Keyword getValueDimgrayKeyword_0_42() { return cValueDimgrayKeyword_0_42; }

		//"dimgrey"
		public Keyword getValueDimgreyKeyword_0_43() { return cValueDimgreyKeyword_0_43; }

		//"dodgerblue"
		public Keyword getValueDodgerblueKeyword_0_44() { return cValueDodgerblueKeyword_0_44; }

		//"firebrick"
		public Keyword getValueFirebrickKeyword_0_45() { return cValueFirebrickKeyword_0_45; }

		//"floralwhite"
		public Keyword getValueFloralwhiteKeyword_0_46() { return cValueFloralwhiteKeyword_0_46; }

		//"forestgreen"
		public Keyword getValueForestgreenKeyword_0_47() { return cValueForestgreenKeyword_0_47; }

		//"fuchsia"
		public Keyword getValueFuchsiaKeyword_0_48() { return cValueFuchsiaKeyword_0_48; }

		//"gainsboro"
		public Keyword getValueGainsboroKeyword_0_49() { return cValueGainsboroKeyword_0_49; }

		//"ghostwhite"
		public Keyword getValueGhostwhiteKeyword_0_50() { return cValueGhostwhiteKeyword_0_50; }

		//"gold"
		public Keyword getValueGoldKeyword_0_51() { return cValueGoldKeyword_0_51; }

		//"goldenrod"
		public Keyword getValueGoldenrodKeyword_0_52() { return cValueGoldenrodKeyword_0_52; }

		//"gray"
		public Keyword getValueGrayKeyword_0_53() { return cValueGrayKeyword_0_53; }

		//"green"
		public Keyword getValueGreenKeyword_0_54() { return cValueGreenKeyword_0_54; }

		//"greenyellow"
		public Keyword getValueGreenyellowKeyword_0_55() { return cValueGreenyellowKeyword_0_55; }

		//"grey"
		public Keyword getValueGreyKeyword_0_56() { return cValueGreyKeyword_0_56; }

		//"honeydew"
		public Keyword getValueHoneydewKeyword_0_57() { return cValueHoneydewKeyword_0_57; }

		//"hotpink"
		public Keyword getValueHotpinkKeyword_0_58() { return cValueHotpinkKeyword_0_58; }

		//"indianred"
		public Keyword getValueIndianredKeyword_0_59() { return cValueIndianredKeyword_0_59; }

		//"indigo"
		public Keyword getValueIndigoKeyword_0_60() { return cValueIndigoKeyword_0_60; }

		//"ivory"
		public Keyword getValueIvoryKeyword_0_61() { return cValueIvoryKeyword_0_61; }

		//"khaki"
		public Keyword getValueKhakiKeyword_0_62() { return cValueKhakiKeyword_0_62; }

		//"lavender"
		public Keyword getValueLavenderKeyword_0_63() { return cValueLavenderKeyword_0_63; }

		//"lavenderblush"
		public Keyword getValueLavenderblushKeyword_0_64() { return cValueLavenderblushKeyword_0_64; }

		//"lawngreen"
		public Keyword getValueLawngreenKeyword_0_65() { return cValueLawngreenKeyword_0_65; }

		//"lemonchiffon"
		public Keyword getValueLemonchiffonKeyword_0_66() { return cValueLemonchiffonKeyword_0_66; }

		//"lightblue"
		public Keyword getValueLightblueKeyword_0_67() { return cValueLightblueKeyword_0_67; }

		//"lightcoral"
		public Keyword getValueLightcoralKeyword_0_68() { return cValueLightcoralKeyword_0_68; }

		//"lightcyan"
		public Keyword getValueLightcyanKeyword_0_69() { return cValueLightcyanKeyword_0_69; }

		//"lightgoldenrodyellow"
		public Keyword getValueLightgoldenrodyellowKeyword_0_70() { return cValueLightgoldenrodyellowKeyword_0_70; }

		//"lightgray"
		public Keyword getValueLightgrayKeyword_0_71() { return cValueLightgrayKeyword_0_71; }

		//"lightgreen"
		public Keyword getValueLightgreenKeyword_0_72() { return cValueLightgreenKeyword_0_72; }

		//"lightgrey"
		public Keyword getValueLightgreyKeyword_0_73() { return cValueLightgreyKeyword_0_73; }

		//"lightpink"
		public Keyword getValueLightpinkKeyword_0_74() { return cValueLightpinkKeyword_0_74; }

		//"lightsalmon"
		public Keyword getValueLightsalmonKeyword_0_75() { return cValueLightsalmonKeyword_0_75; }

		//"lightseagreen"
		public Keyword getValueLightseagreenKeyword_0_76() { return cValueLightseagreenKeyword_0_76; }

		//"lightskyblue"
		public Keyword getValueLightskyblueKeyword_0_77() { return cValueLightskyblueKeyword_0_77; }

		//"lightslategray"
		public Keyword getValueLightslategrayKeyword_0_78() { return cValueLightslategrayKeyword_0_78; }

		//"lightslategrey"
		public Keyword getValueLightslategreyKeyword_0_79() { return cValueLightslategreyKeyword_0_79; }

		//"lightsteelblue"
		public Keyword getValueLightsteelblueKeyword_0_80() { return cValueLightsteelblueKeyword_0_80; }

		//"lightyellow"
		public Keyword getValueLightyellowKeyword_0_81() { return cValueLightyellowKeyword_0_81; }

		//"lime"
		public Keyword getValueLimeKeyword_0_82() { return cValueLimeKeyword_0_82; }

		//"limegreen"
		public Keyword getValueLimegreenKeyword_0_83() { return cValueLimegreenKeyword_0_83; }

		//"linen"
		public Keyword getValueLinenKeyword_0_84() { return cValueLinenKeyword_0_84; }

		//"magenta"
		public Keyword getValueMagentaKeyword_0_85() { return cValueMagentaKeyword_0_85; }

		//"maroon"
		public Keyword getValueMaroonKeyword_0_86() { return cValueMaroonKeyword_0_86; }

		//"mediumaquamarine"
		public Keyword getValueMediumaquamarineKeyword_0_87() { return cValueMediumaquamarineKeyword_0_87; }

		//"mediumblue"
		public Keyword getValueMediumblueKeyword_0_88() { return cValueMediumblueKeyword_0_88; }

		//"mediumorchid"
		public Keyword getValueMediumorchidKeyword_0_89() { return cValueMediumorchidKeyword_0_89; }

		//"mediumpurple"
		public Keyword getValueMediumpurpleKeyword_0_90() { return cValueMediumpurpleKeyword_0_90; }

		//"mediumseagreen"
		public Keyword getValueMediumseagreenKeyword_0_91() { return cValueMediumseagreenKeyword_0_91; }

		//"mediumslateblue"
		public Keyword getValueMediumslateblueKeyword_0_92() { return cValueMediumslateblueKeyword_0_92; }

		//"mediumspringgreen"
		public Keyword getValueMediumspringgreenKeyword_0_93() { return cValueMediumspringgreenKeyword_0_93; }

		//"mediumturquoise"
		public Keyword getValueMediumturquoiseKeyword_0_94() { return cValueMediumturquoiseKeyword_0_94; }

		//"mediumvioletred"
		public Keyword getValueMediumvioletredKeyword_0_95() { return cValueMediumvioletredKeyword_0_95; }

		//"midnightblue"
		public Keyword getValueMidnightblueKeyword_0_96() { return cValueMidnightblueKeyword_0_96; }

		//"mintcream"
		public Keyword getValueMintcreamKeyword_0_97() { return cValueMintcreamKeyword_0_97; }

		//"mistyrose"
		public Keyword getValueMistyroseKeyword_0_98() { return cValueMistyroseKeyword_0_98; }

		//"moccasin"
		public Keyword getValueMoccasinKeyword_0_99() { return cValueMoccasinKeyword_0_99; }

		//"navajowhite"
		public Keyword getValueNavajowhiteKeyword_0_100() { return cValueNavajowhiteKeyword_0_100; }

		//"navy"
		public Keyword getValueNavyKeyword_0_101() { return cValueNavyKeyword_0_101; }

		//"oldlace"
		public Keyword getValueOldlaceKeyword_0_102() { return cValueOldlaceKeyword_0_102; }

		//"olive"
		public Keyword getValueOliveKeyword_0_103() { return cValueOliveKeyword_0_103; }

		//"olivedrab"
		public Keyword getValueOlivedrabKeyword_0_104() { return cValueOlivedrabKeyword_0_104; }

		//"orange"
		public Keyword getValueOrangeKeyword_0_105() { return cValueOrangeKeyword_0_105; }

		//"orangered"
		public Keyword getValueOrangeredKeyword_0_106() { return cValueOrangeredKeyword_0_106; }

		//"orchid"
		public Keyword getValueOrchidKeyword_0_107() { return cValueOrchidKeyword_0_107; }

		//"palegoldenrod"
		public Keyword getValuePalegoldenrodKeyword_0_108() { return cValuePalegoldenrodKeyword_0_108; }

		//"palegreen"
		public Keyword getValuePalegreenKeyword_0_109() { return cValuePalegreenKeyword_0_109; }

		//"paleturquoise"
		public Keyword getValuePaleturquoiseKeyword_0_110() { return cValuePaleturquoiseKeyword_0_110; }

		//"palevioletred"
		public Keyword getValuePalevioletredKeyword_0_111() { return cValuePalevioletredKeyword_0_111; }

		//"papayawhip"
		public Keyword getValuePapayawhipKeyword_0_112() { return cValuePapayawhipKeyword_0_112; }

		//"peachpuff"
		public Keyword getValuePeachpuffKeyword_0_113() { return cValuePeachpuffKeyword_0_113; }

		//"peru"
		public Keyword getValuePeruKeyword_0_114() { return cValuePeruKeyword_0_114; }

		//"pink"
		public Keyword getValuePinkKeyword_0_115() { return cValuePinkKeyword_0_115; }

		//"plum"
		public Keyword getValuePlumKeyword_0_116() { return cValuePlumKeyword_0_116; }

		//"powderblue"
		public Keyword getValuePowderblueKeyword_0_117() { return cValuePowderblueKeyword_0_117; }

		//"purple"
		public Keyword getValuePurpleKeyword_0_118() { return cValuePurpleKeyword_0_118; }

		//"red"
		public Keyword getValueRedKeyword_0_119() { return cValueRedKeyword_0_119; }

		//"rosybrown"
		public Keyword getValueRosybrownKeyword_0_120() { return cValueRosybrownKeyword_0_120; }

		//"royalblue"
		public Keyword getValueRoyalblueKeyword_0_121() { return cValueRoyalblueKeyword_0_121; }

		//"saddlebrown"
		public Keyword getValueSaddlebrownKeyword_0_122() { return cValueSaddlebrownKeyword_0_122; }

		//"salmon"
		public Keyword getValueSalmonKeyword_0_123() { return cValueSalmonKeyword_0_123; }

		//"sandybrown"
		public Keyword getValueSandybrownKeyword_0_124() { return cValueSandybrownKeyword_0_124; }

		//"seagreen"
		public Keyword getValueSeagreenKeyword_0_125() { return cValueSeagreenKeyword_0_125; }

		//"seashell"
		public Keyword getValueSeashellKeyword_0_126() { return cValueSeashellKeyword_0_126; }

		//"sienna"
		public Keyword getValueSiennaKeyword_0_127() { return cValueSiennaKeyword_0_127; }

		//"silver"
		public Keyword getValueSilverKeyword_0_128() { return cValueSilverKeyword_0_128; }

		//"skyblue"
		public Keyword getValueSkyblueKeyword_0_129() { return cValueSkyblueKeyword_0_129; }

		//"slateblue"
		public Keyword getValueSlateblueKeyword_0_130() { return cValueSlateblueKeyword_0_130; }

		//"slategray"
		public Keyword getValueSlategrayKeyword_0_131() { return cValueSlategrayKeyword_0_131; }

		//"slategrey"
		public Keyword getValueSlategreyKeyword_0_132() { return cValueSlategreyKeyword_0_132; }

		//"snow"
		public Keyword getValueSnowKeyword_0_133() { return cValueSnowKeyword_0_133; }

		//"springgreen"
		public Keyword getValueSpringgreenKeyword_0_134() { return cValueSpringgreenKeyword_0_134; }

		//"steelblue"
		public Keyword getValueSteelblueKeyword_0_135() { return cValueSteelblueKeyword_0_135; }

		//"tan"
		public Keyword getValueTanKeyword_0_136() { return cValueTanKeyword_0_136; }

		//"teal"
		public Keyword getValueTealKeyword_0_137() { return cValueTealKeyword_0_137; }

		//"thistle"
		public Keyword getValueThistleKeyword_0_138() { return cValueThistleKeyword_0_138; }

		//"tomato"
		public Keyword getValueTomatoKeyword_0_139() { return cValueTomatoKeyword_0_139; }

		//"turquoise"
		public Keyword getValueTurquoiseKeyword_0_140() { return cValueTurquoiseKeyword_0_140; }

		//"violet"
		public Keyword getValueVioletKeyword_0_141() { return cValueVioletKeyword_0_141; }

		//"wheat"
		public Keyword getValueWheatKeyword_0_142() { return cValueWheatKeyword_0_142; }

		//"white"
		public Keyword getValueWhiteKeyword_0_143() { return cValueWhiteKeyword_0_143; }

		//"whitesmoke"
		public Keyword getValueWhitesmokeKeyword_0_144() { return cValueWhitesmokeKeyword_0_144; }

		//"yellow"
		public Keyword getValueYellowKeyword_0_145() { return cValueYellowKeyword_0_145; }

		//"yellowgreen"
		public Keyword getValueYellowgreenKeyword_0_146() { return cValueYellowgreenKeyword_0_146; }

		//"transparent"
		public Keyword getValueTransparentKeyword_0_147() { return cValueTransparentKeyword_0_147; }
	}

	public class RGBColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RGBColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cNumberSignKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cHexAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cHexHexDigitParserRuleCall_0_1_0 = (RuleCall)cHexAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cRgbKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRIntegerValueParserRuleCall_1_2_0 = (RuleCall)cRAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cGAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cGIntegerValueParserRuleCall_1_4_0 = (RuleCall)cGAssignment_1_4.eContents().get(0);
		private final Keyword cCommaKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cBAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cBIntegerValueParserRuleCall_1_6_0 = (RuleCall)cBAssignment_1_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cRgbKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cRpAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cRpIntegerValueParserRuleCall_2_2_0 = (RuleCall)cRpAssignment_2_2.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cGpAssignment_2_5 = (Assignment)cGroup_2.eContents().get(5);
		private final RuleCall cGpIntegerValueParserRuleCall_2_5_0 = (RuleCall)cGpAssignment_2_5.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Keyword cCommaKeyword_2_7 = (Keyword)cGroup_2.eContents().get(7);
		private final Assignment cBpAssignment_2_8 = (Assignment)cGroup_2.eContents().get(8);
		private final RuleCall cBpIntegerValueParserRuleCall_2_8_0 = (RuleCall)cBpAssignment_2_8.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_9 = (Keyword)cGroup_2.eContents().get(9);
		private final Keyword cRightParenthesisKeyword_2_10 = (Keyword)cGroup_2.eContents().get(10);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cRgbaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRIntegerValueParserRuleCall_3_2_0 = (RuleCall)cRAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cGAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cGIntegerValueParserRuleCall_3_4_0 = (RuleCall)cGAssignment_3_4.eContents().get(0);
		private final Keyword cCommaKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Assignment cBAssignment_3_6 = (Assignment)cGroup_3.eContents().get(6);
		private final RuleCall cBIntegerValueParserRuleCall_3_6_0 = (RuleCall)cBAssignment_3_6.eContents().get(0);
		private final Keyword cCommaKeyword_3_7 = (Keyword)cGroup_3.eContents().get(7);
		private final Assignment cAlphaAssignment_3_8 = (Assignment)cGroup_3.eContents().get(8);
		private final RuleCall cAlphaNumberValueParserRuleCall_3_8_0 = (RuleCall)cAlphaAssignment_3_8.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_9 = (Keyword)cGroup_3.eContents().get(9);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cRgbaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRpAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRpIntegerValueParserRuleCall_4_2_0 = (RuleCall)cRpAssignment_4_2.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Assignment cGpAssignment_4_5 = (Assignment)cGroup_4.eContents().get(5);
		private final RuleCall cGpIntegerValueParserRuleCall_4_5_0 = (RuleCall)cGpAssignment_4_5.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_6 = (Keyword)cGroup_4.eContents().get(6);
		private final Keyword cCommaKeyword_4_7 = (Keyword)cGroup_4.eContents().get(7);
		private final Assignment cBpAssignment_4_8 = (Assignment)cGroup_4.eContents().get(8);
		private final RuleCall cBpIntegerValueParserRuleCall_4_8_0 = (RuleCall)cBpAssignment_4_8.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_9 = (Keyword)cGroup_4.eContents().get(9);
		private final Keyword cCommaKeyword_4_10 = (Keyword)cGroup_4.eContents().get(10);
		private final Assignment cAlphaAssignment_4_11 = (Assignment)cGroup_4.eContents().get(11);
		private final RuleCall cAlphaNumberValueParserRuleCall_4_11_0 = (RuleCall)cAlphaAssignment_4_11.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_12 = (Keyword)cGroup_4.eContents().get(12);
		
		//RGBColor:
		//	"#" hex=HexDigit | "rgb" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue ")" | "rgb" "(" rp=IntegerValue "%"
		//	"," gp=IntegerValue "%" "," bp=IntegerValue "%" ")" | "rgba" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue
		//	"," alpha=NumberValue ")" | "rgba" "(" rp=IntegerValue "%" "," gp=IntegerValue "%" "," bp=IntegerValue "%" ","
		//	alpha=NumberValue ")";
		public ParserRule getRule() { return rule; }

		//"#" hex=HexDigit | "rgb" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue ")" | "rgb" "(" rp=IntegerValue "%"
		//"," gp=IntegerValue "%" "," bp=IntegerValue "%" ")" | "rgba" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue
		//"," alpha=NumberValue ")" | "rgba" "(" rp=IntegerValue "%" "," gp=IntegerValue "%" "," bp=IntegerValue "%" ","
		//alpha=NumberValue ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"#" hex=HexDigit
		public Group getGroup_0() { return cGroup_0; }

		//"#"
		public Keyword getNumberSignKeyword_0_0() { return cNumberSignKeyword_0_0; }

		//hex=HexDigit
		public Assignment getHexAssignment_0_1() { return cHexAssignment_0_1; }

		//HexDigit
		public RuleCall getHexHexDigitParserRuleCall_0_1_0() { return cHexHexDigitParserRuleCall_0_1_0; }

		//"rgb" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue ")"
		public Group getGroup_1() { return cGroup_1; }

		//"rgb"
		public Keyword getRgbKeyword_1_0() { return cRgbKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//r=IntegerValue
		public Assignment getRAssignment_1_2() { return cRAssignment_1_2; }

		//IntegerValue
		public RuleCall getRIntegerValueParserRuleCall_1_2_0() { return cRIntegerValueParserRuleCall_1_2_0; }

		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }

		//g=IntegerValue
		public Assignment getGAssignment_1_4() { return cGAssignment_1_4; }

		//IntegerValue
		public RuleCall getGIntegerValueParserRuleCall_1_4_0() { return cGIntegerValueParserRuleCall_1_4_0; }

		//","
		public Keyword getCommaKeyword_1_5() { return cCommaKeyword_1_5; }

		//b=IntegerValue
		public Assignment getBAssignment_1_6() { return cBAssignment_1_6; }

		//IntegerValue
		public RuleCall getBIntegerValueParserRuleCall_1_6_0() { return cBIntegerValueParserRuleCall_1_6_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_7() { return cRightParenthesisKeyword_1_7; }

		//"rgb" "(" rp=IntegerValue "%" "," gp=IntegerValue "%" "," bp=IntegerValue "%" ")"
		public Group getGroup_2() { return cGroup_2; }

		//"rgb"
		public Keyword getRgbKeyword_2_0() { return cRgbKeyword_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//rp=IntegerValue
		public Assignment getRpAssignment_2_2() { return cRpAssignment_2_2; }

		//IntegerValue
		public RuleCall getRpIntegerValueParserRuleCall_2_2_0() { return cRpIntegerValueParserRuleCall_2_2_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_3() { return cPercentSignKeyword_2_3; }

		//","
		public Keyword getCommaKeyword_2_4() { return cCommaKeyword_2_4; }

		//gp=IntegerValue
		public Assignment getGpAssignment_2_5() { return cGpAssignment_2_5; }

		//IntegerValue
		public RuleCall getGpIntegerValueParserRuleCall_2_5_0() { return cGpIntegerValueParserRuleCall_2_5_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_6() { return cPercentSignKeyword_2_6; }

		//","
		public Keyword getCommaKeyword_2_7() { return cCommaKeyword_2_7; }

		//bp=IntegerValue
		public Assignment getBpAssignment_2_8() { return cBpAssignment_2_8; }

		//IntegerValue
		public RuleCall getBpIntegerValueParserRuleCall_2_8_0() { return cBpIntegerValueParserRuleCall_2_8_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_9() { return cPercentSignKeyword_2_9; }

		//")"
		public Keyword getRightParenthesisKeyword_2_10() { return cRightParenthesisKeyword_2_10; }

		//"rgba" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue "," alpha=NumberValue ")"
		public Group getGroup_3() { return cGroup_3; }

		//"rgba"
		public Keyword getRgbaKeyword_3_0() { return cRgbaKeyword_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//r=IntegerValue
		public Assignment getRAssignment_3_2() { return cRAssignment_3_2; }

		//IntegerValue
		public RuleCall getRIntegerValueParserRuleCall_3_2_0() { return cRIntegerValueParserRuleCall_3_2_0; }

		//","
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }

		//g=IntegerValue
		public Assignment getGAssignment_3_4() { return cGAssignment_3_4; }

		//IntegerValue
		public RuleCall getGIntegerValueParserRuleCall_3_4_0() { return cGIntegerValueParserRuleCall_3_4_0; }

		//","
		public Keyword getCommaKeyword_3_5() { return cCommaKeyword_3_5; }

		//b=IntegerValue
		public Assignment getBAssignment_3_6() { return cBAssignment_3_6; }

		//IntegerValue
		public RuleCall getBIntegerValueParserRuleCall_3_6_0() { return cBIntegerValueParserRuleCall_3_6_0; }

		//","
		public Keyword getCommaKeyword_3_7() { return cCommaKeyword_3_7; }

		//alpha=NumberValue
		public Assignment getAlphaAssignment_3_8() { return cAlphaAssignment_3_8; }

		//NumberValue
		public RuleCall getAlphaNumberValueParserRuleCall_3_8_0() { return cAlphaNumberValueParserRuleCall_3_8_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_9() { return cRightParenthesisKeyword_3_9; }

		//"rgba" "(" rp=IntegerValue "%" "," gp=IntegerValue "%" "," bp=IntegerValue "%" "," alpha=NumberValue ")"
		public Group getGroup_4() { return cGroup_4; }

		//"rgba"
		public Keyword getRgbaKeyword_4_0() { return cRgbaKeyword_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }

		//rp=IntegerValue
		public Assignment getRpAssignment_4_2() { return cRpAssignment_4_2; }

		//IntegerValue
		public RuleCall getRpIntegerValueParserRuleCall_4_2_0() { return cRpIntegerValueParserRuleCall_4_2_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_3() { return cPercentSignKeyword_4_3; }

		//","
		public Keyword getCommaKeyword_4_4() { return cCommaKeyword_4_4; }

		//gp=IntegerValue
		public Assignment getGpAssignment_4_5() { return cGpAssignment_4_5; }

		//IntegerValue
		public RuleCall getGpIntegerValueParserRuleCall_4_5_0() { return cGpIntegerValueParserRuleCall_4_5_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_6() { return cPercentSignKeyword_4_6; }

		//","
		public Keyword getCommaKeyword_4_7() { return cCommaKeyword_4_7; }

		//bp=IntegerValue
		public Assignment getBpAssignment_4_8() { return cBpAssignment_4_8; }

		//IntegerValue
		public RuleCall getBpIntegerValueParserRuleCall_4_8_0() { return cBpIntegerValueParserRuleCall_4_8_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_9() { return cPercentSignKeyword_4_9; }

		//","
		public Keyword getCommaKeyword_4_10() { return cCommaKeyword_4_10; }

		//alpha=NumberValue
		public Assignment getAlphaAssignment_4_11() { return cAlphaAssignment_4_11; }

		//NumberValue
		public RuleCall getAlphaNumberValueParserRuleCall_4_11_0() { return cAlphaNumberValueParserRuleCall_4_11_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_12() { return cRightParenthesisKeyword_4_12; }
	}

	public class HSBColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HSBColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cHsbKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cHueAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cHueNumberValueParserRuleCall_0_2_0 = (RuleCall)cHueAssignment_0_2.eContents().get(0);
		private final Keyword cCommaKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cSaturationAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cSaturationNumberValueParserRuleCall_0_4_0 = (RuleCall)cSaturationAssignment_0_4.eContents().get(0);
		private final Keyword cPercentSignKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cCommaKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cBrightnessAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cBrightnessNumberValueParserRuleCall_0_7_0 = (RuleCall)cBrightnessAssignment_0_7.eContents().get(0);
		private final Keyword cPercentSignKeyword_0_8 = (Keyword)cGroup_0.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_0_9 = (Keyword)cGroup_0.eContents().get(9);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHsbaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cHueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cHueNumberValueParserRuleCall_1_2_0 = (RuleCall)cHueAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cSaturationAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cSaturationNumberValueParserRuleCall_1_4_0 = (RuleCall)cSaturationAssignment_1_4.eContents().get(0);
		private final Keyword cPercentSignKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cCommaKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Assignment cBrightnessAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cBrightnessNumberValueParserRuleCall_1_7_0 = (RuleCall)cBrightnessAssignment_1_7.eContents().get(0);
		private final Keyword cPercentSignKeyword_1_8 = (Keyword)cGroup_1.eContents().get(8);
		private final Keyword cCommaKeyword_1_9 = (Keyword)cGroup_1.eContents().get(9);
		private final Assignment cAlphaAssignment_1_10 = (Assignment)cGroup_1.eContents().get(10);
		private final RuleCall cAlphaNumberValueParserRuleCall_1_10_0 = (RuleCall)cAlphaAssignment_1_10.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_11 = (Keyword)cGroup_1.eContents().get(11);
		
		//HSBColor:
		//	"hsb" "(" hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" ")" | "hsba" "("
		//	hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" "," alpha=NumberValue ")";
		public ParserRule getRule() { return rule; }

		//"hsb" "(" hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" ")" | "hsba" "(" hue=NumberValue
		//"," saturation=NumberValue "%" "," brightness=NumberValue "%" "," alpha=NumberValue ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"hsb" "(" hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" ")"
		public Group getGroup_0() { return cGroup_0; }

		//"hsb"
		public Keyword getHsbKeyword_0_0() { return cHsbKeyword_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }

		//hue=NumberValue
		public Assignment getHueAssignment_0_2() { return cHueAssignment_0_2; }

		//NumberValue
		public RuleCall getHueNumberValueParserRuleCall_0_2_0() { return cHueNumberValueParserRuleCall_0_2_0; }

		//","
		public Keyword getCommaKeyword_0_3() { return cCommaKeyword_0_3; }

		//saturation=NumberValue
		public Assignment getSaturationAssignment_0_4() { return cSaturationAssignment_0_4; }

		//NumberValue
		public RuleCall getSaturationNumberValueParserRuleCall_0_4_0() { return cSaturationNumberValueParserRuleCall_0_4_0; }

		//"%"
		public Keyword getPercentSignKeyword_0_5() { return cPercentSignKeyword_0_5; }

		//","
		public Keyword getCommaKeyword_0_6() { return cCommaKeyword_0_6; }

		//brightness=NumberValue
		public Assignment getBrightnessAssignment_0_7() { return cBrightnessAssignment_0_7; }

		//NumberValue
		public RuleCall getBrightnessNumberValueParserRuleCall_0_7_0() { return cBrightnessNumberValueParserRuleCall_0_7_0; }

		//"%"
		public Keyword getPercentSignKeyword_0_8() { return cPercentSignKeyword_0_8; }

		//")"
		public Keyword getRightParenthesisKeyword_0_9() { return cRightParenthesisKeyword_0_9; }

		//"hsba" "(" hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" "," alpha=NumberValue ")"
		public Group getGroup_1() { return cGroup_1; }

		//"hsba"
		public Keyword getHsbaKeyword_1_0() { return cHsbaKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//hue=NumberValue
		public Assignment getHueAssignment_1_2() { return cHueAssignment_1_2; }

		//NumberValue
		public RuleCall getHueNumberValueParserRuleCall_1_2_0() { return cHueNumberValueParserRuleCall_1_2_0; }

		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }

		//saturation=NumberValue
		public Assignment getSaturationAssignment_1_4() { return cSaturationAssignment_1_4; }

		//NumberValue
		public RuleCall getSaturationNumberValueParserRuleCall_1_4_0() { return cSaturationNumberValueParserRuleCall_1_4_0; }

		//"%"
		public Keyword getPercentSignKeyword_1_5() { return cPercentSignKeyword_1_5; }

		//","
		public Keyword getCommaKeyword_1_6() { return cCommaKeyword_1_6; }

		//brightness=NumberValue
		public Assignment getBrightnessAssignment_1_7() { return cBrightnessAssignment_1_7; }

		//NumberValue
		public RuleCall getBrightnessNumberValueParserRuleCall_1_7_0() { return cBrightnessNumberValueParserRuleCall_1_7_0; }

		//"%"
		public Keyword getPercentSignKeyword_1_8() { return cPercentSignKeyword_1_8; }

		//","
		public Keyword getCommaKeyword_1_9() { return cCommaKeyword_1_9; }

		//alpha=NumberValue
		public Assignment getAlphaAssignment_1_10() { return cAlphaAssignment_1_10; }

		//NumberValue
		public RuleCall getAlphaNumberValueParserRuleCall_1_10_0() { return cAlphaNumberValueParserRuleCall_1_10_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_11() { return cRightParenthesisKeyword_1_11; }
	}

	public class ColorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColorFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cDeriveKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOrigAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOrigColorValueParserRuleCall_0_2_0 = (RuleCall)cOrigAssignment_0_2.eContents().get(0);
		private final Keyword cCommaKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cModAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cModNumberValueParserRuleCall_0_4_0 = (RuleCall)cModAssignment_0_4.eContents().get(0);
		private final Keyword cPercentSignKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLadderKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOrigAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOrigColorValueParserRuleCall_1_2_0 = (RuleCall)cOrigAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cStopsKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cStopNumbersAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cStopNumbersNumberValueParserRuleCall_1_5_1_0 = (RuleCall)cStopNumbersAssignment_1_5_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_5_2 = (Keyword)cGroup_1_5.eContents().get(2);
		private final Assignment cStopColorsAssignment_1_5_3 = (Assignment)cGroup_1_5.eContents().get(3);
		private final RuleCall cStopColorsColorValueParserRuleCall_1_5_3_0 = (RuleCall)cStopColorsAssignment_1_5_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5_4 = (Keyword)cGroup_1_5.eContents().get(4);
		
		//ColorFunction:
		//	"derive" "(" orig=ColorValue "," mod=NumberValue "%" ")" | "ladder" "(" orig=ColorValue ")" "stops" ("("
		//	stopNumbers+=NumberValue "," stopColors+=ColorValue ")")+;
		public ParserRule getRule() { return rule; }

		//"derive" "(" orig=ColorValue "," mod=NumberValue "%" ")" | "ladder" "(" orig=ColorValue ")" "stops" ("("
		//stopNumbers+=NumberValue "," stopColors+=ColorValue ")")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//"derive" "(" orig=ColorValue "," mod=NumberValue "%" ")"
		public Group getGroup_0() { return cGroup_0; }

		//"derive"
		public Keyword getDeriveKeyword_0_0() { return cDeriveKeyword_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }

		//orig=ColorValue
		public Assignment getOrigAssignment_0_2() { return cOrigAssignment_0_2; }

		//ColorValue
		public RuleCall getOrigColorValueParserRuleCall_0_2_0() { return cOrigColorValueParserRuleCall_0_2_0; }

		//","
		public Keyword getCommaKeyword_0_3() { return cCommaKeyword_0_3; }

		//mod=NumberValue
		public Assignment getModAssignment_0_4() { return cModAssignment_0_4; }

		//NumberValue
		public RuleCall getModNumberValueParserRuleCall_0_4_0() { return cModNumberValueParserRuleCall_0_4_0; }

		//"%"
		public Keyword getPercentSignKeyword_0_5() { return cPercentSignKeyword_0_5; }

		//")"
		public Keyword getRightParenthesisKeyword_0_6() { return cRightParenthesisKeyword_0_6; }

		//"ladder" "(" orig=ColorValue ")" "stops" ("(" stopNumbers+=NumberValue "," stopColors+=ColorValue ")")+
		public Group getGroup_1() { return cGroup_1; }

		//"ladder"
		public Keyword getLadderKeyword_1_0() { return cLadderKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//orig=ColorValue
		public Assignment getOrigAssignment_1_2() { return cOrigAssignment_1_2; }

		//ColorValue
		public RuleCall getOrigColorValueParserRuleCall_1_2_0() { return cOrigColorValueParserRuleCall_1_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//"stops"
		public Keyword getStopsKeyword_1_4() { return cStopsKeyword_1_4; }

		//("(" stopNumbers+=NumberValue "," stopColors+=ColorValue ")")+
		public Group getGroup_1_5() { return cGroup_1_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_5_0() { return cLeftParenthesisKeyword_1_5_0; }

		//stopNumbers+=NumberValue
		public Assignment getStopNumbersAssignment_1_5_1() { return cStopNumbersAssignment_1_5_1; }

		//NumberValue
		public RuleCall getStopNumbersNumberValueParserRuleCall_1_5_1_0() { return cStopNumbersNumberValueParserRuleCall_1_5_1_0; }

		//","
		public Keyword getCommaKeyword_1_5_2() { return cCommaKeyword_1_5_2; }

		//stopColors+=ColorValue
		public Assignment getStopColorsAssignment_1_5_3() { return cStopColorsAssignment_1_5_3; }

		//ColorValue
		public RuleCall getStopColorsColorValueParserRuleCall_1_5_3_0() { return cStopColorsColorValueParserRuleCall_1_5_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_5_4() { return cRightParenthesisKeyword_1_5_4; }
	}

	public class HexDigitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HexDigit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//HexDigit hidden():
		//	ID | INT ID | INT;
		public ParserRule getRule() { return rule; }

		//ID | INT ID | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//INT ID
		public Group getGroup_1() { return cGroup_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_0() { return cINTTerminalRuleCall_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	
	
	public class BooleanValueElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTrueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_0 = (Keyword)cTrueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFalseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFalseFalseKeyword_1_0 = (Keyword)cFalseEnumLiteralDeclaration_1.eContents().get(0);
		
		////
		//// ---------------
		//// Values
		//// ---------------
		//enum BooleanValue:
		//	true | false;
		public EnumRule getRule() { return rule; }

		//true | false
		public Alternatives getAlternatives() { return cAlternatives; }

		//true
		public EnumLiteralDeclaration getTrueEnumLiteralDeclaration_0() { return cTrueEnumLiteralDeclaration_0; }

		//"true"
		public Keyword getTrueTrueKeyword_0_0() { return cTrueTrueKeyword_0_0; }

		//false
		public EnumLiteralDeclaration getFalseEnumLiteralDeclaration_1() { return cFalseEnumLiteralDeclaration_1; }

		//"false"
		public Keyword getFalseFalseKeyword_1_0() { return cFalseFalseKeyword_1_0; }
	}

	public class HPositionValueElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "HPositionValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLeftEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLeftLeftKeyword_0_0 = (Keyword)cLeftEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCenterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCenterCenterKeyword_1_0 = (Keyword)cCenterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRightEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRightRightKeyword_2_0 = (Keyword)cRightEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLeadingEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLeadingLeadingKeyword_3_0 = (Keyword)cLeadingEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTrailingEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTrailingTrailingKeyword_4_0 = (Keyword)cTrailingEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum HPositionValue:
		//	left | center | right | leading | trailing;
		public EnumRule getRule() { return rule; }

		//left | center | right | leading | trailing
		public Alternatives getAlternatives() { return cAlternatives; }

		//left
		public EnumLiteralDeclaration getLeftEnumLiteralDeclaration_0() { return cLeftEnumLiteralDeclaration_0; }

		//"left"
		public Keyword getLeftLeftKeyword_0_0() { return cLeftLeftKeyword_0_0; }

		//center
		public EnumLiteralDeclaration getCenterEnumLiteralDeclaration_1() { return cCenterEnumLiteralDeclaration_1; }

		//"center"
		public Keyword getCenterCenterKeyword_1_0() { return cCenterCenterKeyword_1_0; }

		//right
		public EnumLiteralDeclaration getRightEnumLiteralDeclaration_2() { return cRightEnumLiteralDeclaration_2; }

		//"right"
		public Keyword getRightRightKeyword_2_0() { return cRightRightKeyword_2_0; }

		//leading
		public EnumLiteralDeclaration getLeadingEnumLiteralDeclaration_3() { return cLeadingEnumLiteralDeclaration_3; }

		//"leading"
		public Keyword getLeadingLeadingKeyword_3_0() { return cLeadingLeadingKeyword_3_0; }

		//trailing
		public EnumLiteralDeclaration getTrailingEnumLiteralDeclaration_4() { return cTrailingEnumLiteralDeclaration_4; }

		//"trailing"
		public Keyword getTrailingTrailingKeyword_4_0() { return cTrailingTrailingKeyword_4_0; }
	}
	
	private JFXCssElements pJFXCss;
	private DefinitionElements pDefinition;
	private FXPropertyElements pFXProperty;
	private FontPropertyElements pFontProperty;
	private FontFamilyPropertyElements pFontFamilyProperty;
	private FontSizePropertyElements pFontSizeProperty;
	private FontStylePropertyElements pFontStyleProperty;
	private FontWeightPropertyElements pFontWeightProperty;
	private CursorPropertyElements pCursorProperty;
	private EffectPropertyElements pEffectProperty;
	private EffectElements pEffect;
	private EffectDropShadowElements pEffectDropShadow;
	private EffectInnerShadowElements pEffectInnerShadow;
	private BooleanPropertyElements pBooleanProperty;
	private SizePropertyElements pSizeProperty;
	private NumberPropertyElements pNumberProperty;
	private IntegerPropertyElements pIntegerProperty;
	private PaintPropertyElements pPaintProperty;
	private PaintPropertiesElements pPaintProperties;
	private BlendPropertyElements pBlendProperty;
	private UrlPropertyElements pUrlProperty;
	private MultiSizePropertiesElements pMultiSizeProperties;
	private HPositionPropertyElements pHPositionProperty;
	private VPositionPropertyElements pVPositionProperty;
	private SidePropertyElements pSideProperty;
	private BarPolicyPropertyElements pBarPolicyProperty;
	private UrlPropertiesElements pUrlProperties;
	private RepeatPropertiesElements pRepeatProperties;
	private MultiSizePropertyElements pMultiSizeProperty;
	private SizePropertiesElements pSizeProperties;
	private StrokeLineCapPropertyElements pStrokeLineCapProperty;
	private StrokeLineJoinPropertyElements pStrokeLineJoinProperty;
	private TextAlignmentPropertyElements pTextAlignmentProperty;
	private TextOriginPropertyElements pTextOriginProperty;
	private BackgroundImagePositionPropertyElements pBackgroundImagePositionProperty;
	private BackgroundImageSizePropertyElements pBackgroundImageSizeProperty;
	private BorderColorPropertyElements pBorderColorProperty;
	private BorderStylePropertyElements pBorderStyleProperty;
	private BorderImageSlicePropertyElements pBorderImageSliceProperty;
	private ShapePropertyElements pShapeProperty;
	private TextPropertyElements pTextProperty;
	private TextOverrunPropertyElements pTextOverrunProperty;
	private EchoCharPropertyElements pEchoCharProperty;
	private InsetsPropertyElements pInsetsProperty;
	private HorizontalGridLineStrokeDashArrayPropertyElements pHorizontalGridLineStrokeDashArrayProperty;
	private VerticalGridLineStrokeDashArrayPropertyElements pVerticalGridLineStrokeDashArrayProperty;
	private BooleanValueElements unknownRuleBooleanValue;
	private HPositionValueElements unknownRuleHPositionValue;
	private VPositionValueElements pVPositionValue;
	private BlurValueElements pBlurValue;
	private NumberValueElements pNumberValue;
	private IntegerValueElements pIntegerValue;
	private UrlValueElements pUrlValue;
	private AddressValueElements pAddressValue;
	private SizeValueElements pSizeValue;
	private MultiSizeValueElements pMultiSizeValue;
	private BgPositionValueElements pBgPositionValue;
	private RepeatStyleValueElements pRepeatStyleValue;
	private BgSizeValueElements pBgSizeValue;
	private MultiPaintValueElements pMultiPaintValue;
	private BorderStyleValueElements pBorderStyleValue;
	private DashStyleValueElements pDashStyleValue;
	private SizeFillElements pSizeFill;
	private FontValueElements pFontValue;
	private FontStyleValueElements pFontStyleValue;
	private FontWeightValueElements pFontWeightValue;
	private FontFamilyElements pFontFamily;
	private PaintValueElements pPaintValue;
	private LinearGradientElements pLinearGradient;
	private RadialGradientElements pRadialGradient;
	private StopValueElements pStopValue;
	private ColorValueElements pColorValue;
	private NamedColorElements pNamedColor;
	private RGBColorElements pRGBColor;
	private HSBColorElements pHSBColor;
	private ColorFunctionElements pColorFunction;
	private HexDigitElements pHexDigit;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public JFXCssGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//JFXCss:
	//	definitions+=Definition+;
	public JFXCssElements getJFXCssAccess() {
		return (pJFXCss != null) ? pJFXCss : (pJFXCss = new JFXCssElements());
	}
	
	public ParserRule getJFXCssRule() {
		return getJFXCssAccess().getRule();
	}

	//Definition:
	//	("#" id=ID) // (':' ('disabled'|'focused'|'hover'|'pressed'|'strong'|'armed'|'empty'|'filled'|'defined'|'selected'|'undefined'|'showing'|'visited'|'even'|'odd'|'selected'|'horizontal'|'vertical'|'determinate'|'indetermindate'|'pannable'|'multiline'|'editable'|'readonly'|'selected'|'showing') )? 
	//	"{" properties+=FXProperty+ "}";
	public DefinitionElements getDefinitionAccess() {
		return (pDefinition != null) ? pDefinition : (pDefinition = new DefinitionElements());
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}

	//FXProperty: // Font
	//	(FontProperty | FontFamilyProperty | FontSizeProperty | FontStyleProperty | FontWeightProperty | CursorProperty |
	//	EffectProperty | BooleanProperty | SizeProperty | NumberProperty | IntegerProperty | PaintProperty | BlendProperty |
	//	UrlProperty | PaintProperties | MultiSizeProperties | HPositionProperty | VPositionProperty | SideProperty |
	//	BarPolicyProperty | UrlProperties | RepeatProperties | MultiSizeProperty | SizeProperties | StrokeLineCapProperty |
	//	StrokeLineJoinProperty | TextAlignmentProperty | TextOriginProperty | BackgroundImagePositionProperty |
	//	BackgroundImageSizeProperty | BorderStyleProperty | BorderImageSliceProperty | ShapeProperty | TextProperty |
	//	TextOverrunProperty | EchoCharProperty | InsetsProperty | HorizontalGridLineStrokeDashArrayProperty |
	//	VerticalGridLineStrokeDashArrayProperty | BorderColorProperty) ";";
	public FXPropertyElements getFXPropertyAccess() {
		return (pFXProperty != null) ? pFXProperty : (pFXProperty = new FXPropertyElements());
	}
	
	public ParserRule getFXPropertyRule() {
		return getFXPropertyAccess().getRule();
	}

	//FontProperty:
	//	property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
	//	"-fx-tick-label-font") ":" value=FontValue;
	public FontPropertyElements getFontPropertyAccess() {
		return (pFontProperty != null) ? pFontProperty : (pFontProperty = new FontPropertyElements());
	}
	
	public ParserRule getFontPropertyRule() {
		return getFontPropertyAccess().getRule();
	}

	//FontFamilyProperty:
	//	property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" |
	//	"-fx-pie-value-label-font-family" | "-fx-label-font-family" | "-fx-tick-label-font-family") ":" value=FontFamily;
	public FontFamilyPropertyElements getFontFamilyPropertyAccess() {
		return (pFontFamilyProperty != null) ? pFontFamilyProperty : (pFontFamilyProperty = new FontFamilyPropertyElements());
	}
	
	public ParserRule getFontFamilyPropertyRule() {
		return getFontFamilyPropertyAccess().getRule();
	}

	//FontSizeProperty:
	//	property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
	//	"-fx-label-font-size" | "-fx-tick-label-font-size") ":" value=SizeValue;
	public FontSizePropertyElements getFontSizePropertyAccess() {
		return (pFontSizeProperty != null) ? pFontSizeProperty : (pFontSizeProperty = new FontSizePropertyElements());
	}
	
	public ParserRule getFontSizePropertyRule() {
		return getFontSizePropertyAccess().getRule();
	}

	//FontStyleProperty:
	//	property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
	//	"-fx-label-font-style" | "-fx-tick-label-font-style") ":" value=FontStyleValue;
	public FontStylePropertyElements getFontStylePropertyAccess() {
		return (pFontStyleProperty != null) ? pFontStyleProperty : (pFontStyleProperty = new FontStylePropertyElements());
	}
	
	public ParserRule getFontStylePropertyRule() {
		return getFontStylePropertyAccess().getRule();
	}

	//FontWeightProperty:
	//	property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" |
	//	"-fx-pie-value-label-font-weight" | "-fx-label-font-weight" | "-fx-tick-label-font-weight") ":" value=FontWeightValue;
	public FontWeightPropertyElements getFontWeightPropertyAccess() {
		return (pFontWeightProperty != null) ? pFontWeightProperty : (pFontWeightProperty = new FontWeightPropertyElements());
	}
	
	public ParserRule getFontWeightPropertyRule() {
		return getFontWeightPropertyAccess().getRule();
	}

	//CursorProperty:
	//	"-fx-cursor" ":" value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" |
	//	"nw-resize" | "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait");
	public CursorPropertyElements getCursorPropertyAccess() {
		return (pCursorProperty != null) ? pCursorProperty : (pCursorProperty = new CursorPropertyElements());
	}
	
	public ParserRule getCursorPropertyRule() {
		return getCursorPropertyAccess().getRule();
	}

	//EffectProperty:
	//	"-fx-effect" ":" value=Effect;
	public EffectPropertyElements getEffectPropertyAccess() {
		return (pEffectProperty != null) ? pEffectProperty : (pEffectProperty = new EffectPropertyElements());
	}
	
	public ParserRule getEffectPropertyRule() {
		return getEffectPropertyAccess().getRule();
	}

	//Effect:
	//	EffectDropShadow | EffectInnerShadow;
	public EffectElements getEffectAccess() {
		return (pEffect != null) ? pEffect : (pEffect = new EffectElements());
	}
	
	public ParserRule getEffectRule() {
		return getEffectAccess().getRule();
	}

	//EffectDropShadow:
	//	"dropshadow" "(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," spread=NumberValue ","
	//	offsetX=NumberValue "," offsetY=NumberValue ")";
	public EffectDropShadowElements getEffectDropShadowAccess() {
		return (pEffectDropShadow != null) ? pEffectDropShadow : (pEffectDropShadow = new EffectDropShadowElements());
	}
	
	public ParserRule getEffectDropShadowRule() {
		return getEffectDropShadowAccess().getRule();
	}

	//EffectInnerShadow:
	//	"innershadow(" blur=BlurValue "," color=ColorValue "," blurRadius=NumberValue "," choke=NumberValue ","
	//	offsetX=NumberValue "," offsetY=NumberValue ")";
	public EffectInnerShadowElements getEffectInnerShadowAccess() {
		return (pEffectInnerShadow != null) ? pEffectInnerShadow : (pEffectInnerShadow = new EffectInnerShadowElements());
	}
	
	public ParserRule getEffectInnerShadowRule() {
		return getEffectInnerShadowAccess().getRule();
	}

	//BooleanProperty:
	//	property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
	//	"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
	//	"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
	//	"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
	//	"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
	//	"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
	//	"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
	//	"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") ":" value=BooleanValue;
	public BooleanPropertyElements getBooleanPropertyAccess() {
		return (pBooleanProperty != null) ? pBooleanProperty : (pBooleanProperty = new BooleanPropertyElements());
	}
	
	public ParserRule getBooleanPropertyRule() {
		return getBooleanPropertyAccess().getRule();
	}

	//SizeProperty:
	//	property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
	//	"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
	//	"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
	//	"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
	//	"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
	//	"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
	//	"-fx-graphic-text-gap") ":" value=SizeValue;
	public SizePropertyElements getSizePropertyAccess() {
		return (pSizeProperty != null) ? pSizeProperty : (pSizeProperty = new SizePropertyElements());
	}
	
	public ParserRule getSizePropertyRule() {
		return getSizePropertyAccess().getRule();
	}

	//NumberProperty:
	//	property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
	//	"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
	//	"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
	//	"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
	//	"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit") ":" value=NumberValue;
	public NumberPropertyElements getNumberPropertyAccess() {
		return (pNumberProperty != null) ? pNumberProperty : (pNumberProperty = new NumberPropertyElements());
	}
	
	public ParserRule getNumberPropertyRule() {
		return getNumberPropertyAccess().getRule();
	}

	//IntegerProperty:
	//	property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") ":" value=IntegerValue;
	public IntegerPropertyElements getIntegerPropertyAccess() {
		return (pIntegerProperty != null) ? pIntegerProperty : (pIntegerProperty = new IntegerPropertyElements());
	}
	
	public ParserRule getIntegerPropertyRule() {
		return getIntegerPropertyAccess().getRule();
	}

	//PaintProperty:
	//	property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
	//	"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
	//	"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
	//	"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
	//	"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
	//	"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
	//	"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" |
	//	"-fx-tick-mark-stroke" | "-fx-hover-fill") ":" value=PaintValue;
	public PaintPropertyElements getPaintPropertyAccess() {
		return (pPaintProperty != null) ? pPaintProperty : (pPaintProperty = new PaintPropertyElements());
	}
	
	public ParserRule getPaintPropertyRule() {
		return getPaintPropertyAccess().getRule();
	}

	//PaintProperties:
	//	property="-fx-background-color" ":" values+=PaintValue ("," values+=PaintValue)*;
	public PaintPropertiesElements getPaintPropertiesAccess() {
		return (pPaintProperties != null) ? pPaintProperties : (pPaintProperties = new PaintPropertiesElements());
	}
	
	public ParserRule getPaintPropertiesRule() {
		return getPaintPropertiesAccess().getRule();
	}

	//BlendProperty:
	//	"-fx-blend-mode" ":" value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" |
	//	"green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in"
	//	| "src-out" | "src-over");
	public BlendPropertyElements getBlendPropertyAccess() {
		return (pBlendProperty != null) ? pBlendProperty : (pBlendProperty = new BlendPropertyElements());
	}
	
	public ParserRule getBlendPropertyRule() {
		return getBlendPropertyAccess().getRule();
	}

	//UrlProperty:
	//	property=("-fx-image" | "-fx-graphic") ":" value=UrlValue;
	public UrlPropertyElements getUrlPropertyAccess() {
		return (pUrlProperty != null) ? pUrlProperty : (pUrlProperty = new UrlPropertyElements());
	}
	
	public ParserRule getUrlPropertyRule() {
		return getUrlPropertyAccess().getRule();
	}

	//MultiSizeProperties:
	//	property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
	//	"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") ":" values+=MultiSizeValue (","
	//	values+=MultiSizeValue)*;
	public MultiSizePropertiesElements getMultiSizePropertiesAccess() {
		return (pMultiSizeProperties != null) ? pMultiSizeProperties : (pMultiSizeProperties = new MultiSizePropertiesElements());
	}
	
	public ParserRule getMultiSizePropertiesRule() {
		return getMultiSizePropertiesAccess().getRule();
	}

	//HPositionProperty:
	//	property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") ":" value=HPositionValue;
	public HPositionPropertyElements getHPositionPropertyAccess() {
		return (pHPositionProperty != null) ? pHPositionProperty : (pHPositionProperty = new HPositionPropertyElements());
	}
	
	public ParserRule getHPositionPropertyRule() {
		return getHPositionPropertyAccess().getRule();
	}

	//VPositionProperty:
	//	property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") ":" value=VPositionValue;
	public VPositionPropertyElements getVPositionPropertyAccess() {
		return (pVPositionProperty != null) ? pVPositionProperty : (pVPositionProperty = new VPositionPropertyElements());
	}
	
	public ParserRule getVPositionPropertyRule() {
		return getVPositionPropertyAccess().getRule();
	}

	//SideProperty:
	//	property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") ":" value=("top" | "bottom" | "left" | "right");
	public SidePropertyElements getSidePropertyAccess() {
		return (pSideProperty != null) ? pSideProperty : (pSideProperty = new SidePropertyElements());
	}
	
	public ParserRule getSidePropertyRule() {
		return getSidePropertyAccess().getRule();
	}

	//BarPolicyProperty:
	//	property=("-fx-hbar-policy" | "-fx-vbar-policy") ":" value=("never" | "always" | "as_needed");
	public BarPolicyPropertyElements getBarPolicyPropertyAccess() {
		return (pBarPolicyProperty != null) ? pBarPolicyProperty : (pBarPolicyProperty = new BarPolicyPropertyElements());
	}
	
	public ParserRule getBarPolicyPropertyRule() {
		return getBarPolicyPropertyAccess().getRule();
	}

	//UrlProperties:
	//	property=("-fx-background-image" | "-fx-border-image") ":" values+=UrlValue ("," values+=UrlValue)*;
	public UrlPropertiesElements getUrlPropertiesAccess() {
		return (pUrlProperties != null) ? pUrlProperties : (pUrlProperties = new UrlPropertiesElements());
	}
	
	public ParserRule getUrlPropertiesRule() {
		return getUrlPropertiesAccess().getRule();
	}

	//RepeatProperties:
	//	property=("-fx-background-image-repeat" | "-fx-border-image-repeat") ":" values+=RepeatStyleValue (","
	//	values+=RepeatStyleValue)*;
	public RepeatPropertiesElements getRepeatPropertiesAccess() {
		return (pRepeatProperties != null) ? pRepeatProperties : (pRepeatProperties = new RepeatPropertiesElements());
	}
	
	public ParserRule getRepeatPropertiesRule() {
		return getRepeatPropertiesAccess().getRule();
	}

	//MultiSizeProperty:
	//	property="-fx-padding" ":" value=MultiSizeValue;
	public MultiSizePropertyElements getMultiSizePropertyAccess() {
		return (pMultiSizeProperty != null) ? pMultiSizeProperty : (pMultiSizeProperty = new MultiSizePropertyElements());
	}
	
	public ParserRule getMultiSizePropertyRule() {
		return getMultiSizePropertyAccess().getRule();
	}

	//SizeProperties:
	//	property="-fx-stroke-dash-array" ":" values+=SizeValue+;
	public SizePropertiesElements getSizePropertiesAccess() {
		return (pSizeProperties != null) ? pSizeProperties : (pSizeProperties = new SizePropertiesElements());
	}
	
	public ParserRule getSizePropertiesRule() {
		return getSizePropertiesAccess().getRule();
	}

	//StrokeLineCapProperty:
	//	"-fx-stroke-line-cap" ":" value=("square" | "butt" | "round");
	public StrokeLineCapPropertyElements getStrokeLineCapPropertyAccess() {
		return (pStrokeLineCapProperty != null) ? pStrokeLineCapProperty : (pStrokeLineCapProperty = new StrokeLineCapPropertyElements());
	}
	
	public ParserRule getStrokeLineCapPropertyRule() {
		return getStrokeLineCapPropertyAccess().getRule();
	}

	//StrokeLineJoinProperty:
	//	"-fx-stroke-line-join" ":" value=("miter" | "bevel" | "round");
	public StrokeLineJoinPropertyElements getStrokeLineJoinPropertyAccess() {
		return (pStrokeLineJoinProperty != null) ? pStrokeLineJoinProperty : (pStrokeLineJoinProperty = new StrokeLineJoinPropertyElements());
	}
	
	public ParserRule getStrokeLineJoinPropertyRule() {
		return getStrokeLineJoinPropertyAccess().getRule();
	}

	//TextAlignmentProperty:
	//	"-fx-text-alignment" ":" value=("left" | "center" | "right" | "justify");
	public TextAlignmentPropertyElements getTextAlignmentPropertyAccess() {
		return (pTextAlignmentProperty != null) ? pTextAlignmentProperty : (pTextAlignmentProperty = new TextAlignmentPropertyElements());
	}
	
	public ParserRule getTextAlignmentPropertyRule() {
		return getTextAlignmentPropertyAccess().getRule();
	}

	//TextOriginProperty:
	//	"-fx-text-origin" ":" value=("baseline" | "top" | "bottom");
	public TextOriginPropertyElements getTextOriginPropertyAccess() {
		return (pTextOriginProperty != null) ? pTextOriginProperty : (pTextOriginProperty = new TextOriginPropertyElements());
	}
	
	public ParserRule getTextOriginPropertyRule() {
		return getTextOriginPropertyAccess().getRule();
	}

	//BackgroundImagePositionProperty:
	//	"-fx-background-image-position" ":" values+=BgPositionValue ("," values+=BgPositionValue)*;
	public BackgroundImagePositionPropertyElements getBackgroundImagePositionPropertyAccess() {
		return (pBackgroundImagePositionProperty != null) ? pBackgroundImagePositionProperty : (pBackgroundImagePositionProperty = new BackgroundImagePositionPropertyElements());
	}
	
	public ParserRule getBackgroundImagePositionPropertyRule() {
		return getBackgroundImagePositionPropertyAccess().getRule();
	}

	//BackgroundImageSizeProperty:
	//	"-fx-background-image-size" ":" values+=BgSizeValue ("," values+=BgSizeValue)*;
	public BackgroundImageSizePropertyElements getBackgroundImageSizePropertyAccess() {
		return (pBackgroundImageSizeProperty != null) ? pBackgroundImageSizeProperty : (pBackgroundImageSizeProperty = new BackgroundImageSizePropertyElements());
	}
	
	public ParserRule getBackgroundImageSizePropertyRule() {
		return getBackgroundImageSizePropertyAccess().getRule();
	}

	//BorderColorProperty:
	//	"-fx-border-color" ":" values+=MultiPaintValue ("," values+=MultiPaintValue)*;
	public BorderColorPropertyElements getBorderColorPropertyAccess() {
		return (pBorderColorProperty != null) ? pBorderColorProperty : (pBorderColorProperty = new BorderColorPropertyElements());
	}
	
	public ParserRule getBorderColorPropertyRule() {
		return getBorderColorPropertyAccess().getRule();
	}

	//BorderStyleProperty:
	//	"-fx-border-style" ":" values+=BorderStyleValue ("," values+=BorderStyleValue)*;
	public BorderStylePropertyElements getBorderStylePropertyAccess() {
		return (pBorderStyleProperty != null) ? pBorderStyleProperty : (pBorderStyleProperty = new BorderStylePropertyElements());
	}
	
	public ParserRule getBorderStylePropertyRule() {
		return getBorderStylePropertyAccess().getRule();
	}

	//BorderImageSliceProperty:
	//	"-fx-border-image-slice" ":" values+=SizeFill ("," values+=SizeFill)*;
	public BorderImageSlicePropertyElements getBorderImageSlicePropertyAccess() {
		return (pBorderImageSliceProperty != null) ? pBorderImageSliceProperty : (pBorderImageSliceProperty = new BorderImageSlicePropertyElements());
	}
	
	public ParserRule getBorderImageSlicePropertyRule() {
		return getBorderImageSlicePropertyAccess().getRule();
	}

	//ShapeProperty:
	//	"-fx-shape" ":" value=STRING;
	public ShapePropertyElements getShapePropertyAccess() {
		return (pShapeProperty != null) ? pShapeProperty : (pShapeProperty = new ShapePropertyElements());
	}
	
	public ParserRule getShapePropertyRule() {
		return getShapePropertyAccess().getRule();
	}

	//TextProperty:
	//	"-fx-text" ":" value=STRING;
	public TextPropertyElements getTextPropertyAccess() {
		return (pTextProperty != null) ? pTextProperty : (pTextProperty = new TextPropertyElements());
	}
	
	public ParserRule getTextPropertyRule() {
		return getTextPropertyAccess().getRule();
	}

	//TextOverrunProperty:
	//	"-fx-text-overrun" ":" value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" |
	//	"leading-word-ellipses" | "word-ellipses");
	public TextOverrunPropertyElements getTextOverrunPropertyAccess() {
		return (pTextOverrunProperty != null) ? pTextOverrunProperty : (pTextOverrunProperty = new TextOverrunPropertyElements());
	}
	
	public ParserRule getTextOverrunPropertyRule() {
		return getTextOverrunPropertyAccess().getRule();
	}

	//EchoCharProperty:
	//	"-fx-echo-char" ":" value=ID;
	public EchoCharPropertyElements getEchoCharPropertyAccess() {
		return (pEchoCharProperty != null) ? pEchoCharProperty : (pEchoCharProperty = new EchoCharPropertyElements());
	}
	
	public ParserRule getEchoCharPropertyRule() {
		return getEchoCharPropertyAccess().getRule();
	}

	//InsetsProperty:
	//	"-fx-insets" ":" value+=NumberValue | value+=NumberValue value+=NumberValue value+=NumberValue value+=NumberValue;
	public InsetsPropertyElements getInsetsPropertyAccess() {
		return (pInsetsProperty != null) ? pInsetsProperty : (pInsetsProperty = new InsetsPropertyElements());
	}
	
	public ParserRule getInsetsPropertyRule() {
		return getInsetsPropertyAccess().getRule();
	}

	//HorizontalGridLineStrokeDashArrayProperty:
	//	"-fx-horizontal-grid-line-stroke-dash-array" ":" value+=NumberValue+;
	public HorizontalGridLineStrokeDashArrayPropertyElements getHorizontalGridLineStrokeDashArrayPropertyAccess() {
		return (pHorizontalGridLineStrokeDashArrayProperty != null) ? pHorizontalGridLineStrokeDashArrayProperty : (pHorizontalGridLineStrokeDashArrayProperty = new HorizontalGridLineStrokeDashArrayPropertyElements());
	}
	
	public ParserRule getHorizontalGridLineStrokeDashArrayPropertyRule() {
		return getHorizontalGridLineStrokeDashArrayPropertyAccess().getRule();
	}

	//VerticalGridLineStrokeDashArrayProperty:
	//	"-fx-vertical-grid-line-stroke-dash-array" ":" values+=NumberValue values+=NumberValue+;
	public VerticalGridLineStrokeDashArrayPropertyElements getVerticalGridLineStrokeDashArrayPropertyAccess() {
		return (pVerticalGridLineStrokeDashArrayProperty != null) ? pVerticalGridLineStrokeDashArrayProperty : (pVerticalGridLineStrokeDashArrayProperty = new VerticalGridLineStrokeDashArrayPropertyElements());
	}
	
	public ParserRule getVerticalGridLineStrokeDashArrayPropertyRule() {
		return getVerticalGridLineStrokeDashArrayPropertyAccess().getRule();
	}

	////
	//// ---------------
	//// Values
	//// ---------------
	//enum BooleanValue:
	//	true | false;
	public BooleanValueElements getBooleanValueAccess() {
		return (unknownRuleBooleanValue != null) ? unknownRuleBooleanValue : (unknownRuleBooleanValue = new BooleanValueElements());
	}
	
	public EnumRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}

	//enum HPositionValue:
	//	left | center | right | leading | trailing;
	public HPositionValueElements getHPositionValueAccess() {
		return (unknownRuleHPositionValue != null) ? unknownRuleHPositionValue : (unknownRuleHPositionValue = new HPositionValueElements());
	}
	
	public EnumRule getHPositionValueRule() {
		return getHPositionValueAccess().getRule();
	}

	//VPositionValue:
	//	v=("top" | "center" | "baseline" | "bottom" | "page-end" | "page-start");
	public VPositionValueElements getVPositionValueAccess() {
		return (pVPositionValue != null) ? pVPositionValue : (pVPositionValue = new VPositionValueElements());
	}
	
	public ParserRule getVPositionValueRule() {
		return getVPositionValueAccess().getRule();
	}

	//BlurValue:
	//	v=("gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box");
	public BlurValueElements getBlurValueAccess() {
		return (pBlurValue != null) ? pBlurValue : (pBlurValue = new BlurValueElements());
	}
	
	public ParserRule getBlurValueRule() {
		return getBlurValueAccess().getRule();
	}

	//NumberValue: //| RealValue
	//	IntegerValue;
	public NumberValueElements getNumberValueAccess() {
		return (pNumberValue != null) ? pNumberValue : (pNumberValue = new NumberValueElements());
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}

	//IntegerValue:
	//	value=INT;
	public IntegerValueElements getIntegerValueAccess() {
		return (pIntegerValue != null) ? pIntegerValue : (pIntegerValue = new IntegerValueElements());
	}
	
	public ParserRule getIntegerValueRule() {
		return getIntegerValueAccess().getRule();
	}

	////RealValue:
	////	value=INT
	////;
	//UrlValue:
	//	"url(" address=AddressValue ")";
	public UrlValueElements getUrlValueAccess() {
		return (pUrlValue != null) ? pUrlValue : (pUrlValue = new UrlValueElements());
	}
	
	public ParserRule getUrlValueRule() {
		return getUrlValueAccess().getRule();
	}

	//AddressValue:
	//	value=STRING;
	public AddressValueElements getAddressValueAccess() {
		return (pAddressValue != null) ? pAddressValue : (pAddressValue = new AddressValueElements());
	}
	
	public ParserRule getAddressValueRule() {
		return getAddressValueAccess().getRule();
	}

	//SizeValue:
	//	value=NumberValue dimension=("%" | "px" | "mm" | "cm" | "in" | "pt" | "pc" | "em" | "ex")?;
	public SizeValueElements getSizeValueAccess() {
		return (pSizeValue != null) ? pSizeValue : (pSizeValue = new SizeValueElements());
	}
	
	public ParserRule getSizeValueRule() {
		return getSizeValueAccess().getRule();
	}

	//MultiSizeValue:
	//	values+=SizeValue | values+=SizeValue values+=SizeValue values+=SizeValue values+=SizeValue;
	public MultiSizeValueElements getMultiSizeValueAccess() {
		return (pMultiSizeValue != null) ? pMultiSizeValue : (pMultiSizeValue = new MultiSizeValueElements());
	}
	
	public ParserRule getMultiSizeValueRule() {
		return getMultiSizeValueAccess().getRule();
	}

	////	|
	////	(
	////		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
	////	)
	//BgPositionValue:
	//	(absx=SizeValue | relx=("left" | "center" | "right")) (absy=SizeValue | rely=("top" | "center" | "bottom"));
	public BgPositionValueElements getBgPositionValueAccess() {
		return (pBgPositionValue != null) ? pBgPositionValue : (pBgPositionValue = new BgPositionValueElements());
	}
	
	public ParserRule getBgPositionValueRule() {
		return getBgPositionValueAccess().getRule();
	}

	//RepeatStyleValue:
	//	v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat") v2=("repeat" | "space" | "round" |
	//	"no-repeat")?;
	public RepeatStyleValueElements getRepeatStyleValueAccess() {
		return (pRepeatStyleValue != null) ? pRepeatStyleValue : (pRepeatStyleValue = new RepeatStyleValueElements());
	}
	
	public ParserRule getRepeatStyleValueRule() {
		return getRepeatStyleValueAccess().getRule();
	}

	//BgSizeValue:
	//	(xsize=SizeValue | xauto="auto") (ysize=SizeValue | yauto="auto")? | predefined=("cover" | "contain");
	public BgSizeValueElements getBgSizeValueAccess() {
		return (pBgSizeValue != null) ? pBgSizeValue : (pBgSizeValue = new BgSizeValueElements());
	}
	
	public ParserRule getBgSizeValueRule() {
		return getBgSizeValueAccess().getRule();
	}

	//// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
	//// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	//// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	//MultiPaintValue:
	//	values+=PaintValue+;
	public MultiPaintValueElements getMultiPaintValueAccess() {
		return (pMultiPaintValue != null) ? pMultiPaintValue : (pMultiPaintValue = new MultiPaintValueElements());
	}
	
	public ParserRule getMultiPaintValueRule() {
		return getMultiPaintValueAccess().getRule();
	}

	//BorderStyleValue:
	//	dashStyle=DashStyleValue location=("centered" | "inside" | "outside")? ("line-join" ("miter" miterAbs=NumberValue |
	//	miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?;
	public BorderStyleValueElements getBorderStyleValueAccess() {
		return (pBorderStyleValue != null) ? pBorderStyleValue : (pBorderStyleValue = new BorderStyleValueElements());
	}
	
	public ParserRule getBorderStyleValueRule() {
		return getBorderStyleValueAccess().getRule();
	}

	//DashStyleValue:
	//	v=("none" | "solid" | "dotted" | "dashed");
	public DashStyleValueElements getDashStyleValueAccess() {
		return (pDashStyleValue != null) ? pDashStyleValue : (pDashStyleValue = new DashStyleValueElements());
	}
	
	public ParserRule getDashStyleValueRule() {
		return getDashStyleValueAccess().getRule();
	}

	//SizeFill:
	//	value=MultiSizeValue fill="fill"?;
	public SizeFillElements getSizeFillAccess() {
		return (pSizeFill != null) ? pSizeFill : (pSizeFill = new SizeFillElements());
	}
	
	public ParserRule getSizeFillRule() {
		return getSizeFillAccess().getRule();
	}

	//FontValue:
	//	styleOrWeight=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500"
	//	| "600" | "700" | "800" | "900")? size=SizeValue family=FontFamily;
	public FontValueElements getFontValueAccess() {
		return (pFontValue != null) ? pFontValue : (pFontValue = new FontValueElements());
	}
	
	public ParserRule getFontValueRule() {
		return getFontValueAccess().getRule();
	}

	//FontStyleValue:
	//	value=("normal" | "italic" | "oblique");
	public FontStyleValueElements getFontStyleValueAccess() {
		return (pFontStyleValue != null) ? pFontStyleValue : (pFontStyleValue = new FontStyleValueElements());
	}
	
	public ParserRule getFontStyleValueRule() {
		return getFontStyleValueAccess().getRule();
	}

	//FontWeightValue:
	//	value=("normal" | "bold" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" |
	//	"900");
	public FontWeightValueElements getFontWeightValueAccess() {
		return (pFontWeightValue != null) ? pFontWeightValue : (pFontWeightValue = new FontWeightValueElements());
	}
	
	public ParserRule getFontWeightValueRule() {
		return getFontWeightValueAccess().getRule();
	}

	//FontFamily:
	//	value=ID;
	public FontFamilyElements getFontFamilyAccess() {
		return (pFontFamily != null) ? pFontFamily : (pFontFamily = new FontFamilyElements());
	}
	
	public ParserRule getFontFamilyRule() {
		return getFontFamilyAccess().getRule();
	}

	//PaintValue:
	//	LinearGradient | RadialGradient | ColorValue;
	public PaintValueElements getPaintValueAccess() {
		return (pPaintValue != null) ? pPaintValue : (pPaintValue = new PaintValueElements());
	}
	
	public ParserRule getPaintValueRule() {
		return getPaintValueAccess().getRule();
	}

	//LinearGradient:
	//	"linear" "(" x1=SizeValue "," y1=SizeValue ")" "to" "(" x2=SizeValue "," y2=SizeValue ")" "stops" ("("
	//	stops+=StopValue ")")+ ("repeat" | "reflect")?;
	public LinearGradientElements getLinearGradientAccess() {
		return (pLinearGradient != null) ? pLinearGradient : (pLinearGradient = new LinearGradientElements());
	}
	
	public ParserRule getLinearGradientRule() {
		return getLinearGradientAccess().getRule();
	}

	//RadialGradient:
	//	"radial" ("(" cx=SizeValue "," cy=SizeValue ")" ",")? radius=SizeValue ("focus" "(" fx=SizeValue "," fy=SizeValue ")")
	//	"stops" ("(" stops+=StopValue ")")+ ("repeat" | "reflect")?;
	public RadialGradientElements getRadialGradientAccess() {
		return (pRadialGradient != null) ? pRadialGradient : (pRadialGradient = new RadialGradientElements());
	}
	
	public ParserRule getRadialGradientRule() {
		return getRadialGradientAccess().getRule();
	}

	//StopValue:
	//	pos=NumberValue "," color=ColorValue;
	public StopValueElements getStopValueAccess() {
		return (pStopValue != null) ? pStopValue : (pStopValue = new StopValueElements());
	}
	
	public ParserRule getStopValueRule() {
		return getStopValueAccess().getRule();
	}

	//ColorValue:
	//	NamedColor | RGBColor | HSBColor | ColorFunction;
	public ColorValueElements getColorValueAccess() {
		return (pColorValue != null) ? pColorValue : (pColorValue = new ColorValueElements());
	}
	
	public ParserRule getColorValueRule() {
		return getColorValueAccess().getRule();
	}

	//NamedColor:
	//	value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" |
	//	"blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral"
	//	| "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" |
	//	"darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" |
	//	"darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" |
	//	"deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" |
	//	"fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew"
	//	| "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon"
	//	| "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
	//	"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" |
	//	"lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" |
	//	"mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" |
	//	"mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" |
	//	"navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" |
	//	"paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" |
	//	"red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" |
	//	"silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal"
	//	| "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" |
	//	"transparent");
	public NamedColorElements getNamedColorAccess() {
		return (pNamedColor != null) ? pNamedColor : (pNamedColor = new NamedColorElements());
	}
	
	public ParserRule getNamedColorRule() {
		return getNamedColorAccess().getRule();
	}

	//RGBColor:
	//	"#" hex=HexDigit | "rgb" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue ")" | "rgb" "(" rp=IntegerValue "%"
	//	"," gp=IntegerValue "%" "," bp=IntegerValue "%" ")" | "rgba" "(" r=IntegerValue "," g=IntegerValue "," b=IntegerValue
	//	"," alpha=NumberValue ")" | "rgba" "(" rp=IntegerValue "%" "," gp=IntegerValue "%" "," bp=IntegerValue "%" ","
	//	alpha=NumberValue ")";
	public RGBColorElements getRGBColorAccess() {
		return (pRGBColor != null) ? pRGBColor : (pRGBColor = new RGBColorElements());
	}
	
	public ParserRule getRGBColorRule() {
		return getRGBColorAccess().getRule();
	}

	//HSBColor:
	//	"hsb" "(" hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" ")" | "hsba" "("
	//	hue=NumberValue "," saturation=NumberValue "%" "," brightness=NumberValue "%" "," alpha=NumberValue ")";
	public HSBColorElements getHSBColorAccess() {
		return (pHSBColor != null) ? pHSBColor : (pHSBColor = new HSBColorElements());
	}
	
	public ParserRule getHSBColorRule() {
		return getHSBColorAccess().getRule();
	}

	//ColorFunction:
	//	"derive" "(" orig=ColorValue "," mod=NumberValue "%" ")" | "ladder" "(" orig=ColorValue ")" "stops" ("("
	//	stopNumbers+=NumberValue "," stopColors+=ColorValue ")")+;
	public ColorFunctionElements getColorFunctionAccess() {
		return (pColorFunction != null) ? pColorFunction : (pColorFunction = new ColorFunctionElements());
	}
	
	public ParserRule getColorFunctionRule() {
		return getColorFunctionAccess().getRule();
	}

	//HexDigit hidden():
	//	ID | INT ID | INT;
	public HexDigitElements getHexDigitAccess() {
		return (pHexDigit != null) ? pHexDigit : (pHexDigit = new HexDigitElements());
	}
	
	public ParserRule getHexDigitRule() {
		return getHexDigitAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
